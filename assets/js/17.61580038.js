(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{432:function(r,e,t){"use strict";t.r(e);var o=t(9),n=Object(o.a)({},(function(){var r=this,e=r.$createElement,t=r._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":r.$parent.slotKey}},[t("div",{staticClass:"masonry-card"},[t("div",{staticClass:"masonry-card-box"},[t("div",{staticClass:"masonry-card-content"},[t("div",{staticClass:"title"},[r._v("音频和音乐")]),t("p",[t("em",[r._v("用于操作音频的库")])]),r._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://github.com/eaburns/flac",target:"_blank",rel:"noopener noreferrer"}},[r._v("flac"),t("OutboundLink")],1),r._v(" - 原生 Go FLAC 解码器")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/mewkiz/flac",target:"_blank",rel:"noopener noreferrer"}},[r._v("flac"),t("OutboundLink")],1),r._v(" - 原生 Go FLAC 解码器")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/Comcast/gaad",target:"_blank",rel:"noopener noreferrer"}},[r._v("gaad"),t("OutboundLink")],1),r._v(" - 原生 Go AAC 比特流解析器")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/krig/Go-sox",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-sox"),t("OutboundLink")],1),r._v(" - libsox 的 Go 语言接口")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/zhulik/Go_mediainfo",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go_mediainfo"),t("OutboundLink")],1),r._v(" - libmediainfo 的 Go 语言接口")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/dh1tw/Gosamplerate",target:"_blank",rel:"noopener noreferrer"}},[r._v("Gosamplerate"),t("OutboundLink")],1),r._v(" - libsamplerate 的 Go 语言接口")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/bogem/id3v2",target:"_blank",rel:"noopener noreferrer"}},[r._v("id3v2"),t("OutboundLink")],1),r._v(" - 快速且稳定的 ID3 解析及写入库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/Go-mix/mix",target:"_blank",rel:"noopener noreferrer"}},[r._v("mix"),t("OutboundLink")],1),r._v(" - 基于序列的 Go 语言混音器，可用于音乐 app。")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/tcolgate/mp3",target:"_blank",rel:"noopener noreferrer"}},[r._v("mp3"),t("OutboundLink")],1),r._v(" - 原生 Go MP3 解码器")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/Go-music-theory/music-theory",target:"_blank",rel:"noopener noreferrer"}},[r._v("music-theory"),t("OutboundLink")],1),r._v(" - Go 语言编写的音乐理论模型")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/Gordonklaus/portaudio",target:"_blank",rel:"noopener noreferrer"}},[r._v("PortAudio"),t("OutboundLink")],1),r._v(" - 音频 I/O 库的 Go 语言接口")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/rakyll/portmidi",target:"_blank",rel:"noopener noreferrer"}},[r._v("portmidi"),t("OutboundLink")],1),r._v(" - PortMidi 的 Go 语言接口")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/wtolson/Go-taglib",target:"_blank",rel:"noopener noreferrer"}},[r._v("taglib"),t("OutboundLink")],1),r._v(" - taglib 的 Go 语言接口")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/mccoyst/vorbis",target:"_blank",rel:"noopener noreferrer"}},[r._v("vorbis"),t("OutboundLink")],1),r._v(' - "原生" Go Vorbis 解码器 (使用 CGo, 但是没有其他依赖).')]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/mdlayher/waveform",target:"_blank",rel:"noopener noreferrer"}},[r._v("waveform"),t("OutboundLink")],1),r._v(" - 一个可以通过音频流生成波形图像的包")])])])])]),t("div",{staticClass:"masonry-card"},[t("div",{staticClass:"masonry-card-box"},[t("div",{staticClass:"masonry-card-content"},[t("div",{staticClass:"title"},[r._v("认证和授权")]),t("p",[t("em",[r._v("用来生成认证授权模板的库")])]),r._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://github.com/volatiletech/authboss",target:"_blank",rel:"noopener noreferrer"}},[r._v("authboss"),t("OutboundLink")],1),r._v(" - 用于 web 开发的组件化认证授权系统。它尝试尽可能的移除模板代码以及硬编码，这使你每次新建 web 项目的时候，可以做到即插即用、配置并开始开发你的 web 英语，而不必每次都重新创建一个认证授权系统。")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/hsluoyz/casbin",target:"_blank",rel:"noopener noreferrer"}},[r._v("casbin"),t("OutboundLink")],1),r._v(" - 一个支持接入控制模型（例如:ACL,RBAC,ABAC）的授权库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/smartystreets/Go-aws-auth",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-AWS-Auth"),t("OutboundLink")],1),r._v(" - AWS 请求签名库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/square/Go-jose",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-jose"),t("OutboundLink")],1),r._v(" - Fairly complete implementation of the JOSE working group's JSON Web Token, JSON Web 签名以及JSON Web 加密 specs.")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/RichardKnop/Go-oauth2-server",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-oauth2-server"),t("OutboundLink")],1),r._v(" - 使用 Go 语言编写的独立、符合标准的 OAuth2 服务器")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/bradrydzewski/Go.auth",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go.auth"),t("OutboundLink")],1),r._v(" - 为 Go 语言 web 应用提供的授权 API.")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/dghubble/Gologin",target:"_blank",rel:"noopener noreferrer"}},[r._v("Gologin"),t("OutboundLink")],1),r._v(" - 可以串连使用OAuth1 和 OAuth2 认证服务")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/mikespook/Gorbac",target:"_blank",rel:"noopener noreferrer"}},[r._v("Gorbac"),t("OutboundLink")],1),r._v(" - 一个用 Go 语言实现的轻量级RBAC")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/markbates/Goth",target:"_blank",rel:"noopener noreferrer"}},[r._v("Goth"),t("OutboundLink")],1),r._v(" - 提供了一种简洁的、惯用的方式来使用OAuth 和 OAuth2.")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/Goji/httpauth",target:"_blank",rel:"noopener noreferrer"}},[r._v("httpauth"),t("OutboundLink")],1),r._v(" - HTTP 认证中间件")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/robbert229/jwt",target:"_blank",rel:"noopener noreferrer"}},[r._v("jwt"),t("OutboundLink")],1),r._v(" - 简单易用的一个JSON Web Tokens (JWT)的实现")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/adam-hanna/jwt-auth",target:"_blank",rel:"noopener noreferrer"}},[r._v("jwt-auth"),t("OutboundLink")],1),r._v(" - JWT 为 Go 语言 HTTP 服务器编写的 jwt 中间件，有多种配置选项")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/dgrijalva/jwt-Go",target:"_blank",rel:"noopener noreferrer"}},[r._v("jwt-Go"),t("OutboundLink")],1),r._v(" - Go 语言实现的JSON Web Tokens (JWT).")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/tarent/loginsrv",target:"_blank",rel:"noopener noreferrer"}},[r._v("loginsrv"),t("OutboundLink")],1),r._v(" - JWT 登录微服务，可以继承OAuth2 (Github), htpasswd, osiam等后端。")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/Golang/oauth2",target:"_blank",rel:"noopener noreferrer"}},[r._v("oauth2"),t("OutboundLink")],1),r._v(" - Goauth2的继承者。 通用 OAuth 2.0 库，集成了对JWT, Google APIs, Compute Engine 和 App Engine的支持.")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/RangelReale/osin",target:"_blank",rel:"noopener noreferrer"}},[r._v("osin"),t("OutboundLink")],1),r._v(" - Go 语言 OAuth2 服务器库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/xyproto/permissions2",target:"_blank",rel:"noopener noreferrer"}},[r._v("permissions2"),t("OutboundLink")],1),r._v(" - 用于追踪用户，登录状态和许可的库。使用安全 cookies 和 bcrypt.")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/icza/session",target:"_blank",rel:"noopener noreferrer"}},[r._v("session"),t("OutboundLink")],1),r._v(" - Go 语言会话管理(支持 Google App Engine - GAE)")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/adam-hanna/sessions",target:"_blank",rel:"noopener noreferrer"}},[r._v("sessions"),t("OutboundLink")],1),r._v(" - 为 Go 语言 HTTP 服务器开发的非常简单的、高性能的、高可定制的会话服务")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/containous/traefik",target:"_blank",rel:"noopener noreferrer"}},[r._v("traefik"),t("OutboundLink")],1),r._v(" - 反向代理和负载均衡库，支持多种后端")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/GeertJohan/yubiGo",target:"_blank",rel:"noopener noreferrer"}},[r._v("yubiGo"),t("OutboundLink")],1),r._v(" - Yubikey 客户端，提供了用于在 Go 语言应用中集成Yubico Yubikey 的 API")])])])])]),t("div",{staticClass:"masonry-card"},[t("div",{staticClass:"masonry-card-box"},[t("div",{staticClass:"masonry-card-content"},[t("div",{staticClass:"title"},[r._v("标准命令行交互")]),t("p",[t("em",[r._v("用于构建标准或基础命令行应用的库")])]),r._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://github.com/cosiner/argv",target:"_blank",rel:"noopener noreferrer"}},[r._v("argv"),t("OutboundLink")],1),r._v(" - 用于分隔命令行字符串并将其作为参数的 Go 语言库，使用 bash 的语法")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/mkideal/cli",target:"_blank",rel:"noopener noreferrer"}},[r._v("cli"),t("OutboundLink")],1),r._v(" - 功能强大，使用简单的命令行软件包，基于Golang tag")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/tcnksm/gcli",target:"_blank",rel:"noopener noreferrer"}},[r._v("cli-init"),t("OutboundLink")],1),r._v(" - 提供一种简单、易上手的方式 来使用 Go 语言编写命令行程序")]),r._v(" "),t("li",[t("a",{attrs:{href:"http://github.com/tucnak/climax",target:"_blank",rel:"noopener noreferrer"}},[r._v("climax"),t("OutboundLink")],1),r._v(" - 一个更为人性化的命令行工具，继承了 Go command 的精神")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/spf13/cobra",target:"_blank",rel:"noopener noreferrer"}},[r._v("cobra"),t("OutboundLink")],1),r._v(" - 用于现代 Go 语言命令行交互的工具")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/posener/complete",target:"_blank",rel:"noopener noreferrer"}},[r._v("complete"),t("OutboundLink")],1),r._v(" - 使用 Go 语言编写的 bash 命令补全工具以及 Go 命令补全工具")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/docopt/docopt.Go",target:"_blank",rel:"noopener noreferrer"}},[r._v("docopt.Go"),t("OutboundLink")],1),r._v(" - 能令你会心一笑的命令行参数解析器")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/odeke-em/drive",target:"_blank",rel:"noopener noreferrer"}},[r._v("drive"),t("OutboundLink")],1),r._v(" - 命令行的 Google Drive 客户端")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/cosiner/flag",target:"_blank",rel:"noopener noreferrer"}},[r._v("flag"),t("OutboundLink")],1),r._v(" - 简单、强大的命令行选项解析库，支持 Go 语言子命令")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/alexflint/Go-arg",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-arg"),t("OutboundLink")],1),r._v(" - 使用 Go 语言编写的基于结构的命令行参数解析库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/jessevdk/Go-flags",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-flags"),t("OutboundLink")],1),r._v(" - Go 语言命令行选项解析器")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/alecthomas/kingpin",target:"_blank",rel:"noopener noreferrer"}},[r._v("kingpin"),t("OutboundLink")],1),r._v(" - 命令行及标记解析器，支持子命令")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/peterh/liner",target:"_blank",rel:"noopener noreferrer"}},[r._v("liner"),t("OutboundLink")],1),r._v(" - 命令行文本编辑器")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/mitchellh/cli",target:"_blank",rel:"noopener noreferrer"}},[r._v("mitchellh/cli"),t("OutboundLink")],1),r._v(" - 用于实现命令行交互的 Go 语言库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/jawher/mow.cli",target:"_blank",rel:"noopener noreferrer"}},[r._v("mow.cli"),t("OutboundLink")],1),r._v(" - 用于构建命令行程序的库，支持更加精准的标记及选项解析和验证")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/spf13/pflag",target:"_blank",rel:"noopener noreferrer"}},[r._v("pflag"),t("OutboundLink")],1),r._v(" - Go flag 软件包的替代品, 实现了POSIX/GNU-风格的 --flags.")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/chzyer/readline",target:"_blank",rel:"noopener noreferrer"}},[r._v("readline"),t("OutboundLink")],1),r._v(" - 纯 Go 语言实现的 GNU-Readline 支持其大部分功能，基于MIT 协议发布。")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/octaGo/sflags",target:"_blank",rel:"noopener noreferrer"}},[r._v("sflags"),t("OutboundLink")],1),r._v(" - 基于结构的 flag 生成器，支持flag, urfave/cli, pflag, cobra, kingpin等其他库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/ukautz/clif",target:"_blank",rel:"noopener noreferrer"}},[r._v("ukautz/clif"),t("OutboundLink")],1),r._v(" - 一个小型命令行程序开发框架")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/urfave/cli",target:"_blank",rel:"noopener noreferrer"}},[r._v("urfave/cli"),t("OutboundLink")],1),r._v(" - 简单、快速、有趣的、用于构建 Go 语言命令行程序的软件包(formerly codegangsta/cli).")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/dixonwille/wlog",target:"_blank",rel:"noopener noreferrer"}},[r._v("wlog"),t("OutboundLink")],1),r._v(" - 简单的登录接口，支持跨平台颜色和并发")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/dixonwille/wmenu",target:"_blank",rel:"noopener noreferrer"}},[r._v("wmenu"),t("OutboundLink")],1),r._v(" - 为命令行程序提供简单的菜单结构选项，供用户进行选择")])])])])]),t("div",{staticClass:"masonry-card"},[t("div",{staticClass:"masonry-card-box"},[t("div",{staticClass:"masonry-card-content"},[t("div",{staticClass:"title"},[r._v("高级控制台界面")]),t("p",[t("em",[r._v("用于构建命令行程序以及控制台界面的库")])]),r._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://github.com/logrusorgru/aurora",target:"_blank",rel:"noopener noreferrer"}},[r._v("aurora"),t("OutboundLink")],1),r._v(" - ANSI 终端颜色，支持 fmt.Printf/Sprintf")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/ttacon/chalk",target:"_blank",rel:"noopener noreferrer"}},[r._v("chalk"),t("OutboundLink")],1),r._v(" - 符合直觉的用于美化命令行输出的库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/fatih/color",target:"_blank",rel:"noopener noreferrer"}},[r._v("color"),t("OutboundLink")],1),r._v(" - 多功能的用于彩色化命令行输出的库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/TreyBastian/colourize",target:"_blank",rel:"noopener noreferrer"}},[r._v("colourize"),t("OutboundLink")],1),r._v(" - 用于实现 ANSI 彩色文本的 Go 语言库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/workanator/Go-ataman",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-ataman"),t("OutboundLink")],1),r._v(" - 用于渲染 ANSI 彩色文本模板的库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/mattn/Go-colorable",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-colorable"),t("OutboundLink")],1),r._v(" - Windows 上使用的可以输出彩色文本的库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/daviddengcn/Go-colortext",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-colortext"),t("OutboundLink")],1),r._v(" - 用于在终端进行多彩文字输出的库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/mattn/Go-isatty",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-isatty"),t("OutboundLink")],1),r._v(" - Go 语言使用的 isatty")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/jroimartin/Gocui",target:"_blank",rel:"noopener noreferrer"}},[r._v("Gocui"),t("OutboundLink")],1),r._v(" - 一个用于构建控制台界面的极简的 Go 语言库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/labstack/Gommon/tree/master/color",target:"_blank",rel:"noopener noreferrer"}},[r._v("Gommon/color"),t("OutboundLink")],1),r._v(" - 多样的命令行文本")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/vbauerster/mpb",target:"_blank",rel:"noopener noreferrer"}},[r._v("mpb"),t("OutboundLink")],1),r._v(" - 为命令行提供多个进度条的工具")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/nsf/termbox-Go",target:"_blank",rel:"noopener noreferrer"}},[r._v("termbox-Go"),t("OutboundLink")],1),r._v(" - Termbox 是一个用于构建跨平台的、与文本的交互界面的库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/apcera/termtables",target:"_blank",rel:"noopener noreferrer"}},[r._v("termtables"),t("OutboundLink")],1),r._v(" - Ruby 库的 Go 语言接口")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/tj/terminal-table",target:"_blank",rel:"noopener noreferrer"}},[r._v("terminal-tables"),t("OutboundLink")],1),r._v(" 用于生成简单的 ASCII 表格，同时支持 markdown 和 HTML 输出")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/gizak/termui",target:"_blank",rel:"noopener noreferrer"}},[r._v("termui"),t("OutboundLink")],1),r._v(" - Go 终端控制面板，基于 "),t("strong",[r._v("termbox-Go")]),r._v(" 并受到了"),t("a",{attrs:{href:"https://github.com/yaronn/blessed-contrib",target:"_blank",rel:"noopener noreferrer"}},[r._v("blessed-contrib"),t("OutboundLink")],1),r._v("的启发")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/Gosuri/uilive",target:"_blank",rel:"noopener noreferrer"}},[r._v("uilive"),t("OutboundLink")],1),r._v(" - 用于实时更新终端输出的库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/Gosuri/uiprogress",target:"_blank",rel:"noopener noreferrer"}},[r._v("uiprogress"),t("OutboundLink")],1),r._v(" - 一个很灵活的用于渲染进度条的库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/Gosuri/uitable",target:"_blank",rel:"noopener noreferrer"}},[r._v("uitable"),t("OutboundLink")],1),r._v(" - 一个用于改善命令行中表格数据可读性的库")])])])])]),t("div",{staticClass:"masonry-card"},[t("div",{staticClass:"masonry-card-box"},[t("div",{staticClass:"masonry-card-content"},[t("div",{staticClass:"title"},[r._v("配置")]),t("p",[t("em",[r._v("用于进行配置解析的库")])]),r._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://github.com/olebedev/config",target:"_blank",rel:"noopener noreferrer"}},[r._v("config"),t("OutboundLink")],1),r._v(" - JSON 或 YAML 配置的封装，支持环境变量和标记解析")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/paked/configure",target:"_blank",rel:"noopener noreferrer"}},[r._v("configure"),t("OutboundLink")],1),r._v(" - 可以通过多种途径进行配置，包括 JSON, 标记位以及环境变量")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/caarlos0/env",target:"_blank",rel:"noopener noreferrer"}},[r._v("env"),t("OutboundLink")],1),r._v(" - 解析环境变量为 Go 语言结构体")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/tomazk/envcfg",target:"_blank",rel:"noopener noreferrer"}},[r._v("envcfg"),t("OutboundLink")],1),r._v(" - 解析环境变量为 Go 语言结构体")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/ian-kent/envconf",target:"_blank",rel:"noopener noreferrer"}},[r._v("envconf"),t("OutboundLink")],1),r._v(" - 通过环境变量来配置")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/vrischmann/envconfig",target:"_blank",rel:"noopener noreferrer"}},[r._v("envconfig"),t("OutboundLink")],1),r._v(" - 通过环境变量读取配置")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/Go-gcfg/gcfg",target:"_blank",rel:"noopener noreferrer"}},[r._v("gcfg"),t("OutboundLink")],1),r._v(" - 读取类 INI 类型的配置文件为 Go 语言结构体，支持自定义变量和节")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/crgimenes/GoConfig",target:"_blank",rel:"noopener noreferrer"}},[r._v("GoConfig"),t("OutboundLink")],1),r._v(" - 通过命令行的输入、环境变量、配置文件来初始化一个结构体兵将一个结构体解析为输入")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/joho/Godotenv",target:"_blank",rel:"noopener noreferrer"}},[r._v("Godotenv"),t("OutboundLink")],1),r._v(" - Ruby 库 dotenv 的 Go 语言接口 (通过 "),t("code",[r._v(".env")]),r._v(" 来获取环境变量)")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/ian-kent/Gofigure",target:"_blank",rel:"noopener noreferrer"}},[r._v("Gofigure"),t("OutboundLink")],1),r._v(" - 让 Go 语言应用程序配置变得简单")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/One-com/Gone/tree/master/jconf#readme",target:"_blank",rel:"noopener noreferrer"}},[r._v("Gone/jconf"),t("OutboundLink")],1),r._v(" - 模块化 JSON 配置工具。允许你将配置参数结构体和使用它的代码放在一起，而不需要让主配置文件了解所有子模块的细节来进行序列化")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/hjson/hjson-Go",target:"_blank",rel:"noopener noreferrer"}},[r._v("hjson"),t("OutboundLink")],1),r._v(" - 人性化的 JSON，一个便于程序员使用和阅读的配置文件格式。更加轻松的语法，更少的错误和更多的注释")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/schachmat/inGo",target:"_blank",rel:"noopener noreferrer"}},[r._v("inGo"),t("OutboundLink")],1),r._v(" - 将配置标记持久化到一个类似 ini 的文件中")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/Go-ini/ini",target:"_blank",rel:"noopener noreferrer"}},[r._v("ini"),t("OutboundLink")],1),r._v(" - 用于读写INI 文件的库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/joshbetz/config",target:"_blank",rel:"noopener noreferrer"}},[r._v("joshbetz/config"),t("OutboundLink")],1),r._v(" - 消息配置库，可以解析环境变量、JSON 文件并根据SIGHUP自动重新载入")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/sasbury/mini",target:"_blank",rel:"noopener noreferrer"}},[r._v("mini"),t("OutboundLink")],1),r._v(" -用于解析类 ini 文件的库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/tucnak/store",target:"_blank",rel:"noopener noreferrer"}},[r._v("store"),t("OutboundLink")],1),r._v(" - 轻量级配置管理")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/spf13/viper",target:"_blank",rel:"noopener noreferrer"}},[r._v("viper"),t("OutboundLink")],1),r._v(" - 长牙的（这个库名叫毒蛇）Go 语言配置工具")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/OpenPeeDeeP/xdg",target:"_blank",rel:"noopener noreferrer"}},[r._v("xdg"),t("OutboundLink")],1),r._v(" -遵守 "),t("a",{attrs:{href:"https://standards.freedesktop.org/basedir-spec/basedir-spec-latest.html",target:"_blank",rel:"noopener noreferrer"}},[r._v("XDG 标准"),t("OutboundLink")],1),r._v(" 的配置工具")])])])])]),t("div",{staticClass:"masonry-card"},[t("div",{staticClass:"masonry-card-box"},[t("div",{staticClass:"masonry-card-content"},[t("div",{staticClass:"title"},[r._v("持续集成")]),t("p",[t("em",[r._v("帮助你进行持续集成的库")])]),r._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://github.com/drone/drone",target:"_blank",rel:"noopener noreferrer"}},[r._v("drone"),t("OutboundLink")],1),r._v(" - Drone 是一个基于 Docker的持续集成平台，使用 Go 语言编写")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/mattn/Goveralls",target:"_blank",rel:"noopener noreferrer"}},[r._v("Goveralls"),t("OutboundLink")],1),r._v(" - Coveralls.io 是一个持续代码覆盖率检测系统，这个库提供了 Go 语言的支持")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/Go-playground/overalls",target:"_blank",rel:"noopener noreferrer"}},[r._v("overalls"),t("OutboundLink")],1),r._v(" - 针对多package 的 Go 语言项目，为 Goveralls 这样的工具生成覆盖率报告")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/LawrenceWoodman/roveralls",target:"_blank",rel:"noopener noreferrer"}},[r._v("roveralls"),t("OutboundLink")],1),r._v(" - 回归覆盖测试工具")])])])])]),t("div",{staticClass:"masonry-card"},[t("div",{staticClass:"masonry-card-box"},[t("div",{staticClass:"masonry-card-content"},[t("div",{staticClass:"title"},[r._v("CSS 预处理器")]),t("p",[t("em",[r._v("用于对 CSS 文件预处理的工具")])]),r._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://github.com/c9s/c6",target:"_blank",rel:"noopener noreferrer"}},[r._v("c6"),t("OutboundLink")],1),r._v(" - 高性能、兼容 SAAS 的编译器")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/yosssi/gcss",target:"_blank",rel:"noopener noreferrer"}},[r._v("gcss"),t("OutboundLink")],1),r._v(" - 纯 Go 语言编写的 CSS 预处理器")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/wellington/Go-libsass",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-libsass"),t("OutboundLink")],1),r._v(" - 100%兼容 Sass 的库 libsass 的 Go 语言封装")])])])])]),t("div",{staticClass:"masonry-card"},[t("div",{staticClass:"masonry-card-box"},[t("div",{staticClass:"masonry-card-content"},[t("div",{staticClass:"title"},[r._v("数据结构")]),t("p",[t("em",[r._v("通用数据结构及算法")])]),r._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://github.com/zhuangsirui/binpacker",target:"_blank",rel:"noopener noreferrer"}},[r._v("binpacker"),t("OutboundLink")],1),r._v(" - 二进制数据封包拆包工具，帮你构建自定义的二进制数据流")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/yourbasic/bit",target:"_blank",rel:"noopener noreferrer"}},[r._v("bit"),t("OutboundLink")],1),r._v(" - Go 语言集合数据结构。提供了额外的位操作功能")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/willf/bitset",target:"_blank",rel:"noopener noreferrer"}},[r._v("bitset"),t("OutboundLink")],1),r._v(" - 实现了 bitset 的 Go 语言包.")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/zhenjl/bloom",target:"_blank",rel:"noopener noreferrer"}},[r._v("bloom"),t("OutboundLink")],1),r._v(" - Go 语言实现的布隆过滤器（bloom filter）")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/yourbasic/bloom",target:"_blank",rel:"noopener noreferrer"}},[r._v("bloom"),t("OutboundLink")],1),r._v(" - Go 语言实现的布隆过滤器")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/tylertreat/BoomFilters",target:"_blank",rel:"noopener noreferrer"}},[r._v("boomfilters"),t("OutboundLink")],1),r._v(" - 概率统计数据结构，用于处理大量连续的数据。")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/seiflotfy/count-min-log",target:"_blank",rel:"noopener noreferrer"}},[r._v("count-min-log"),t("OutboundLink")],1),r._v(" - Go 语言实现的 Count-Min-Log sketch 算法(类似 Count-Min sketch 算法，但是使用的内存更少).")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/seiflotfy/cuckoofilter",target:"_blank",rel:"noopener noreferrer"}},[r._v("cuckoofilter"),t("OutboundLink")],1),r._v(" - Cuckoo 过滤器：一个用go语言实现的计数布隆过滤器的替代品")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/zhenjl/encoding",target:"_blank",rel:"noopener noreferrer"}},[r._v("encoding"),t("OutboundLink")],1),r._v(" - 整型压缩库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/plar/Go-adaptive-radix-tree",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-adaptive-radix-tree"),t("OutboundLink")],1),r._v(" - Go 语言实现的自适应基数树")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/Workiva/Go-datastructures",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-datastructures"),t("OutboundLink")],1),r._v(" - 一组有用的、高性能的、线程安全的数据结构")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/hailocab/Go-geoindex",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-geoindex"),t("OutboundLink")],1),r._v(" - 基于内存存储的地理索引")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/aurelien-rainone/Go-rquad",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-rquad"),t("OutboundLink")],1),r._v(" - 区域四叉树，支持有效点位置和领域发现")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/emirpasic/Gods",target:"_blank",rel:"noopener noreferrer"}},[r._v("Gods"),t("OutboundLink")],1),r._v(" - Go 语言数据结构、容器、集合、列表、栈、键值对、 BidiMaps、树、HashSet 等")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/deckarep/Golang-set",target:"_blank",rel:"noopener noreferrer"}},[r._v("Golang-set"),t("OutboundLink")],1),r._v(" - 线程安全和非线程安全的高性能集合")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/ryszard/Goskiplist",target:"_blank",rel:"noopener noreferrer"}},[r._v("Goskiplist"),t("OutboundLink")],1),r._v(" - Go 语言实现的跳跃表")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/kniren/Gota",target:"_blank",rel:"noopener noreferrer"}},[r._v("Gota"),t("OutboundLink")],1),r._v(" - 为go语言实现了数据帧，序列以及数据噪音的方法")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/Google/hilbert",target:"_blank",rel:"noopener noreferrer"}},[r._v("hilbert"),t("OutboundLink")],1),r._v(" - 用于映射空间填充曲线（例如希尔伯特曲线和皮亚诺曲线）和数值的库。")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/axiomhq/hyperloglog",target:"_blank",rel:"noopener noreferrer"}},[r._v("hyperloglog"),t("OutboundLink")],1),r._v(" - HyperLogLog implementation with Sparse, LogLog-Beta bias correction and TailCut space reduction.")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/agext/levenshtein",target:"_blank",rel:"noopener noreferrer"}},[r._v("levenshtein"),t("OutboundLink")],1),r._v(" - 编辑距离（levenshtein distance）和相似性度量， 可以自定义编辑代价和and Winkler-like bonus for common prefix.")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/agnivade/levenshtein",target:"_blank",rel:"noopener noreferrer"}},[r._v("levenshtein"),t("OutboundLink")],1),r._v(" - Go 语言实现计算编辑距离")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/smartystreets/mafsa",target:"_blank",rel:"noopener noreferrer"}},[r._v("mafsa"),t("OutboundLink")],1),r._v(" - Go 语言实现的 MA-FSA ，包含最小完美哈希")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/cberGoon/merkletree",target:"_blank",rel:"noopener noreferrer"}},[r._v("merkletree"),t("OutboundLink")],1),r._v(" - 实现了梅克尔树，提供了一种高效、安全的数据结构内容验证方法")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/RoaringBitmap/roaring",target:"_blank",rel:"noopener noreferrer"}},[r._v("roaring"),t("OutboundLink")],1),r._v(" - 实现了压缩 bitsets 的Go语言库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/gansidui/skiplist",target:"_blank",rel:"noopener noreferrer"}},[r._v("skiplist"),t("OutboundLink")],1),r._v(" - Go语言实现的跳跃表")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/derekparker/trie",target:"_blank",rel:"noopener noreferrer"}},[r._v("trie"),t("OutboundLink")],1),r._v(" - Go语言实现的Trie树")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/dieGobernardes/ttlcache",target:"_blank",rel:"noopener noreferrer"}},[r._v("ttlcache"),t("OutboundLink")],1),r._v(" - In-memory LRU string-interface{} map with expiration for Golang")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/willf/bloom",target:"_blank",rel:"noopener noreferrer"}},[r._v("willf/bloom"),t("OutboundLink")],1),r._v(" - 实现了布隆过滤器的库")])])])])]),t("div",{staticClass:"masonry-card"},[t("div",{staticClass:"masonry-card-box"},[t("div",{staticClass:"masonry-card-content"},[t("div",{staticClass:"title"},[r._v("数据库")]),t("p",[r._v("Go 语言实现的数据库*")]),r._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://github.com/allegro/bigcache",target:"_blank",rel:"noopener noreferrer"}},[r._v("BigCache"),t("OutboundLink")],1),r._v(" - 为 gigabytes 量级数据设计的高效键/值缓存")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/boltdb/bolt",target:"_blank",rel:"noopener noreferrer"}},[r._v("bolt"),t("OutboundLink")],1),r._v(" - 底层键值数据库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/tidwall/buntdb",target:"_blank",rel:"noopener noreferrer"}},[r._v("buntdb"),t("OutboundLink")],1),r._v(" - 快速，可嵌入的，内存键值数据库，可定义索引及 spatial")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/muesli/cache2Go",target:"_blank",rel:"noopener noreferrer"}},[r._v("cache2Go"),t("OutboundLink")],1),r._v(" - 基于内存存储的键值缓存，支持自动基于超时的自动失效")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/cockroachdb/cockroach",target:"_blank",rel:"noopener noreferrer"}},[r._v("cockroach"),t("OutboundLink")],1),r._v(" - 可扩展的、一致的事务型数据库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/codingsince1985/couchcache",target:"_blank",rel:"noopener noreferrer"}},[r._v("couchcache"),t("OutboundLink")],1),r._v(" - RESTful 缓存微服务，基于Couchbase")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/dgraph-io/dgraph",target:"_blank",rel:"noopener noreferrer"}},[r._v("dgraph"),t("OutboundLink")],1),r._v(" - 可扩展的、分布式的、低延时、高吞吐的图数据库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/peterbourGon/diskv",target:"_blank",rel:"noopener noreferrer"}},[r._v("diskv"),t("OutboundLink")],1),r._v(" - 具有 disk-backed 功能的持久化键值存储")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/krotik/eliasdb",target:"_blank",rel:"noopener noreferrer"}},[r._v("eliasdb"),t("OutboundLink")],1),r._v(" - 无依赖、事物型图数据库，支持 REST API、短语搜索以及类 SQL 的查询语言")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/couchbase/Goforestdb",target:"_blank",rel:"noopener noreferrer"}},[r._v("forestdb"),t("OutboundLink")],1),r._v(" - ForestDB 的 Go 语言借口")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/bluele/gcache",target:"_blank",rel:"noopener noreferrer"}},[r._v("GCache"),t("OutboundLink")],1),r._v(" - 支持缓存过期、 LFU、 LRU 和 ARC 的缓存库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/melihmucuk/geocache",target:"_blank",rel:"noopener noreferrer"}},[r._v("geocache"),t("OutboundLink")],1),r._v(" - 基于内存存储的缓存，适用于分布式部署的应用")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/pmylund/Go-cache",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-cache"),t("OutboundLink")],1),r._v(" - 内存键值存储/缓存库，适用于单机程序")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/syndtr/Goleveldb",target:"_blank",rel:"noopener noreferrer"}},[r._v("Goleveldb"),t("OutboundLink")],1),r._v(" - 使用 Go 语言实现的 "),t("a",{attrs:{href:"https://github.com/Google/leveldb",target:"_blank",rel:"noopener noreferrer"}},[r._v("LevelDB"),t("OutboundLink")],1)]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/Golang/groupcache",target:"_blank",rel:"noopener noreferrer"}},[r._v("groupcache"),t("OutboundLink")],1),r._v(" - Groupcache 是一个缓存及缓存填充库，在很多情况下用于替代 memcached.")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/influxdb/influxdb",target:"_blank",rel:"noopener noreferrer"}},[r._v("influxdb"),t("OutboundLink")],1),r._v(" - 用于计量、事件及实时分析的、可扩展的数据库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/siddontang/ledisdb",target:"_blank",rel:"noopener noreferrer"}},[r._v("ledisdb"),t("OutboundLink")],1),r._v(" - Ledisdb 是一个高性能 NoSQL 数据库，类似 Redi")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/jmhodges/leviGo",target:"_blank",rel:"noopener noreferrer"}},[r._v("leviGo"),t("OutboundLink")],1),r._v(" - LeviGo 是 LevelDB的 Go 语言封装")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/couchbase/moss",target:"_blank",rel:"noopener noreferrer"}},[r._v("moss"),t("OutboundLink")],1),r._v(" - Moss 是一个简单的 LSM 键值存储引擎，100% Go 语言实现")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/fern4lvarez/piladb",target:"_blank",rel:"noopener noreferrer"}},[r._v("piladb"),t("OutboundLink")],1),r._v(" - 轻量级 RESTful 数据库引擎，基于堆栈结构")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/prometheus/prometheus",target:"_blank",rel:"noopener noreferrer"}},[r._v("prometheus"),t("OutboundLink")],1),r._v(" - 监控系统及时间序列数据库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/rqlite/rqlite",target:"_blank",rel:"noopener noreferrer"}},[r._v("rqlite"),t("OutboundLink")],1),r._v(" - 基于 SQLite 的轻量级的、分布式的关系型数据库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/nanobox-io/Golang-scribble",target:"_blank",rel:"noopener noreferrer"}},[r._v("Scribble"),t("OutboundLink")],1),r._v(" - 小巧的 JSON 文件存储")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/rafaeljesus/tempdb",target:"_blank",rel:"noopener noreferrer"}},[r._v("tempdb"),t("OutboundLink")],1),r._v(" - 临时数据的键值对存储")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/pingcap/tidb",target:"_blank",rel:"noopener noreferrer"}},[r._v("tidb"),t("OutboundLink")],1),r._v(" - TiDB 是一个分布式的 SQL 数据库。受到了 Google F1的启发")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/HouzuoGuo/tiedot",target:"_blank",rel:"noopener noreferrer"}},[r._v("tiedot"),t("OutboundLink")],1),r._v(" - 基于 Go 语言的 NoSQL 数据库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/tidwall/tile38",target:"_blank",rel:"noopener noreferrer"}},[r._v("Tile38"),t("OutboundLink")],1),r._v(" - 地理位置数据库及实时地理围栏")])]),r._v(" "),t("p",[t("em",[r._v("数据库迁移")])]),r._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://github.com/GuiaBolso/darwin",target:"_blank",rel:"noopener noreferrer"}},[r._v("darwin"),t("OutboundLink")],1),r._v(" - 数据库模式进化库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/RichardKnop/Go-fixtures",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-fixtures"),t("OutboundLink")],1),r._v(" - 类似 DjanGo fixtures，用于 Golang 的內建数据库/sql 库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/steinbacher/Goose",target:"_blank",rel:"noopener noreferrer"}},[r._v("Goose"),t("OutboundLink")],1),r._v(" - 数据库迁移工具。你可以通过编写增量 SQL 或 Go 语言脚本来管理你的数据库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/Go-Gormigrate/Gormigrate",target:"_blank",rel:"noopener noreferrer"}},[r._v("Gormigrate"),t("OutboundLink")],1),r._v(" - 数据库模式迁移帮助工具，用于 Gorm ORM.")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/mattes/migrate",target:"_blank",rel:"noopener noreferrer"}},[r._v("migrate"),t("OutboundLink")],1),r._v(" - 数据库迁移。命令行及 Go 语言库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/pravasan/pravasan",target:"_blank",rel:"noopener noreferrer"}},[r._v("pravasan"),t("OutboundLink")],1),r._v(" - 简单的迁移，目前支持 MySQL 但是近期打算支持 Postgres, SQLite, MonGoDB 等等")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/markbates/pop/tree/master/soda",target:"_blank",rel:"noopener noreferrer"}},[r._v("soda"),t("OutboundLink")],1),r._v(" - 数据库迁移、创建、 ORM等等，用于 MySQL, PostgreSQL, 以及 SQLite.")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/rubenv/sql-migrate",target:"_blank",rel:"noopener noreferrer"}},[r._v("sql-migrate"),t("OutboundLink")],1),r._v(" - 数据库迁移工具，允许利用 Go-bindata 将数据库迁移嵌入应用程序")])]),r._v(" "),t("p",[t("em",[r._v("数据库工具")])]),r._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://github.com/siddontang/Go-mysql",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-mysql"),t("OutboundLink")],1),r._v(" - 用于处理 MySQL 协议及复制的 Go 语言工具集.")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/siddontang/Go-mysql-elasticsearch",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-mysql-elasticsearch"),t("OutboundLink")],1),r._v(" - 将你的 MySQL 数据自动同步到 Elasticsearch")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/flike/kingshard",target:"_blank",rel:"noopener noreferrer"}},[r._v("kingshard"),t("OutboundLink")],1),r._v(" - kingshard 是一个Go语言编写的高性能 MySQL 数据库代理")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/2tvenom/myreplication",target:"_blank",rel:"noopener noreferrer"}},[r._v("myreplication"),t("OutboundLink")],1),r._v(" - MySql 二进制 log 复制监听器，支持基于语句和基于行的复制")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/github/orchestrator",target:"_blank",rel:"noopener noreferrer"}},[r._v("orchestrator"),t("OutboundLink")],1),r._v(" - MySQL复制拓扑管理器及可视化工具")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/sosedoff/pgweb",target:"_blank",rel:"noopener noreferrer"}},[r._v("pgweb"),t("OutboundLink")],1),r._v(" - 基于 Web 的 PostgreSQL 数据库浏览工具")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/nuveo/prest",target:"_blank",rel:"noopener noreferrer"}},[r._v("pREST"),t("OutboundLink")],1),r._v(" - 通过任何 PostgreSQL 数据库提供 RESTful API")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/youtube/vitess",target:"_blank",rel:"noopener noreferrer"}},[r._v("vitess"),t("OutboundLink")],1),r._v(" - vitess 提供了能够使大型 web 服务 MySQL 数据库的扩展变得更加容易的服务器及工具")])]),r._v(" "),t("p",[t("em",[r._v("用于创建和使用SQL的库")])]),r._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://github.com/mgutz/dat",target:"_blank",rel:"noopener noreferrer"}},[r._v("dat"),t("OutboundLink")],1),r._v(" - Go 语言 Postgres 数据库工具集")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/gchaincl/dotsql",target:"_blank",rel:"noopener noreferrer"}},[r._v("Dotsql"),t("OutboundLink")],1),r._v(" - 一个Go语言库，帮助你将 sql 文件保存在一个地方并且方便的取用")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/doug-martin/Goqu",target:"_blank",rel:"noopener noreferrer"}},[r._v("Goqu"),t("OutboundLink")],1),r._v(" - 地道的 SQL 语句创建器和查询库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/galeone/iGor",target:"_blank",rel:"noopener noreferrer"}},[r._v("iGor"),t("OutboundLink")],1),r._v(" - PostgreSQL 的抽象层，支持高级功能以及类 Gorm 的语法")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/Go-ozzo/ozzo-dbx",target:"_blank",rel:"noopener noreferrer"}},[r._v("ozzo-dbx"),t("OutboundLink")],1),r._v(" - 提供强大的数据恢复功能以及构建不区分数据库类型的查询的能力")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/variadico/scaneo",target:"_blank",rel:"noopener noreferrer"}},[r._v("scaneo"),t("OutboundLink")],1),r._v(" - 生成用于将数据库行转换为任意结构体的 Go 代码")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/elgris/sqrl",target:"_blank",rel:"noopener noreferrer"}},[r._v("sqrl"),t("OutboundLink")],1),r._v(" - SQL 查询创建器，是 Squirrel 的一个分叉版本，进行了性能方面的优化")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/Masterminds/squirrel",target:"_blank",rel:"noopener noreferrer"}},[r._v("Squirrel"),t("OutboundLink")],1),r._v(" - 一个帮助你构建 SQL 查询的库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/knq/xo",target:"_blank",rel:"noopener noreferrer"}},[r._v("xo"),t("OutboundLink")],1),r._v(" - 基于已知的数据库表或自定义查询生成地道的 Go 语言代码，支持 PostgreSQL, MySQL, SQLite, Oracle, 以及 Microsoft SQL Server.")])])])])]),t("div",{staticClass:"masonry-card"},[t("div",{staticClass:"masonry-card-box"},[t("div",{staticClass:"masonry-card-content"},[t("div",{staticClass:"title"},[r._v("数据库驱动")]),t("p",[t("em",[r._v("用于连接和操作数据库的库")])]),r._v(" "),t("ul",[t("li",[r._v("关系型数据库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/Boostport/avatica",target:"_blank",rel:"noopener noreferrer"}},[r._v("avatica"),t("OutboundLink")],1),r._v(" - Apache Phoenix/Avatica SQL 驱动")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/viant/bgc",target:"_blank",rel:"noopener noreferrer"}},[r._v("bgc"),t("OutboundLink")],1),r._v(" - 数据库连接工具包，用于通过 Go 语言访问 BigQuery")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/nakagami/firebirdsql",target:"_blank",rel:"noopener noreferrer"}},[r._v("firebirdsql"),t("OutboundLink")],1),r._v(" - Firebird RDBMS SQL 驱动")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/mattn/Go-adodb",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-adodb"),t("OutboundLink")],1),r._v(" - Microsoft ActiveX 对象数据库驱动")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/rounds/Go-bqstreamer",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-bqstreamer"),t("OutboundLink")],1),r._v(" - BigQuery fast and concurrent stream insert.")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/denisenkom/Go-mssqldb",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-mssqldb"),t("OutboundLink")],1),r._v(" - Go 语言Microsoft MSSQL 驱动")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/mattn/Go-oci8",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-oci8"),t("OutboundLink")],1),r._v(" - Oracle 驱动")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/Go-sql-driver/mysql",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-sql-driver/mysql"),t("OutboundLink")],1),r._v(" - Go 语言 MySQ L驱动")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/mattn/Go-sqlite3",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-sqlite3"),t("OutboundLink")],1),r._v(" - Go 语言的 SQLite3 驱动")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/minus5/Gofreetds",target:"_blank",rel:"noopener noreferrer"}},[r._v("Gofreetds"),t("OutboundLink")],1),r._v(" Microsoft MSSQL 驱动。 "),t("a",{attrs:{href:"http://www.freetds.org",target:"_blank",rel:"noopener noreferrer"}},[r._v("FreeTDS"),t("OutboundLink")],1),r._v("的go语言封装")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/jackc/pgx",target:"_blank",rel:"noopener noreferrer"}},[r._v("pgx"),t("OutboundLink")],1),r._v(" - PostgreSQL 驱动，支持比 database/sql 更多的特性")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/lib/pq",target:"_blank",rel:"noopener noreferrer"}},[r._v("pq"),t("OutboundLink")],1),r._v(" - 纯 Go 语言编写的 Postgres 驱动\nNoSQL 数据库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/aerospike/aerospike-client-Go",target:"_blank",rel:"noopener noreferrer"}},[r._v("aerospike-client-Go"),t("OutboundLink")],1),r._v(" - Aerospike 客户端")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/solher/aranGolite",target:"_blank",rel:"noopener noreferrer"}},[r._v("aranGolite"),t("OutboundLink")],1),r._v(" - AranGoDB 的轻量级 Go 语言驱动")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/viant/asc",target:"_blank",rel:"noopener noreferrer"}},[r._v("asc"),t("OutboundLink")],1),r._v(" - 用于go语言连接 Aerospike")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/Google/cayley",target:"_blank",rel:"noopener noreferrer"}},[r._v("cayley"),t("OutboundLink")],1),r._v(" - 支持多种后端的图数据库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/viant/dsc",target:"_blank",rel:"noopener noreferrer"}},[r._v("dsc"),t("OutboundLink")],1),r._v(" - 数据库连接工具包，支持 SQL, NoSQL 及结构化文件\n   * "),t("a",{attrs:{href:"https://github.com/underarmour/dynaGo",target:"_blank",rel:"noopener noreferrer"}},[r._v("dynaGo"),t("OutboundLink")],1),r._v(" - DynaGo 是一个符合最小惊奇原则（principle of least surprise）的 DynamoDB 客户端")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/couchbase/Go-couchbase",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-couchbase"),t("OutboundLink")],1),r._v(" - Go 语言 Couchbase 客户的")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/fjl/Go-couchdb",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-couchdb"),t("OutboundLink")],1),r._v(" - 另一个 CouchDB HTTP API 的 Go 语言封装")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/couchbase/Gocb",target:"_blank",rel:"noopener noreferrer"}},[r._v("Gocb"),t("OutboundLink")],1),r._v(" - 官方 Couchbase 的 Go 语言 SDK")]),r._v(" "),t("li",[t("a",{attrs:{href:"http://Gocql.github.io",target:"_blank",rel:"noopener noreferrer"}},[r._v("Gocql"),t("OutboundLink")],1),r._v(" - Apache Cassandra 的 Go 语言驱动")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/bradfitz/Gomemcache/",target:"_blank",rel:"noopener noreferrer"}},[r._v("Gomemcache"),t("OutboundLink")],1),r._v(" - memcache 客户端库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/dancannon/Gorethink",target:"_blank",rel:"noopener noreferrer"}},[r._v("Gorethink"),t("OutboundLink")],1),r._v(" - RethinkDB 的 Go 语言驱动")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/zegl/Goriak",target:"_blank",rel:"noopener noreferrer"}},[r._v("Goriak"),t("OutboundLink")],1),r._v(" - Riak KV 的 Go 语言驱动")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://Godoc.org/labix.org/v2/mGo",target:"_blank",rel:"noopener noreferrer"}},[r._v("mGo"),t("OutboundLink")],1),r._v(" - MonGoDB 驱动，通过简单的 API 实现了丰富的、经过测试的特性，这些 API 遵循 Go 语言的习惯")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/cihangir/neo4j",target:"_blank",rel:"noopener noreferrer"}},[r._v("neo4j"),t("OutboundLink")],1),r._v(" - Neo4j Rest API 的 Go 语言接口")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/davemeehan/Neo4j-Go",target:"_blank",rel:"noopener noreferrer"}},[r._v("Neo4j-Go"),t("OutboundLink")],1),r._v(" - Go 语言实现的 Neo4j REST 客户端")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/jmcvetta/neoism",target:"_blank",rel:"noopener noreferrer"}},[r._v("neoism"),t("OutboundLink")],1),r._v(" - Go 语言 Neo4j 客户端")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/garyburd/rediGo",target:"_blank",rel:"noopener noreferrer"}},[r._v("rediGo"),t("OutboundLink")],1),r._v(" - RediGo 是 Redis 数据库的 Go 语言客户端.")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/Go-redis/redis",target:"_blank",rel:"noopener noreferrer"}},[r._v("redis"),t("OutboundLink")],1),r._v(" - Redis 的 Go 语言客户端")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/hoisie/redis",target:"_blank",rel:"noopener noreferrer"}},[r._v("redis"),t("OutboundLink")],1),r._v(" - 简单、强大的 Redis 客户端")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/bsm/redeo",target:"_blank",rel:"noopener noreferrer"}},[r._v("redis"),t("OutboundLink")],1),r._v(" - 兼容Redis协议的 TCP 服务器/服务.")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/shomali11/xredis",target:"_blank",rel:"noopener noreferrer"}},[r._v("xredis"),t("OutboundLink")],1),r._v(" - 类型安全的、可定制的、简洁易用的 Redis 客户端\n搜索及分析数据库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/blevesearch/bleve",target:"_blank",rel:"noopener noreferrer"}},[r._v("bleve"),t("OutboundLink")],1),r._v(" - 现代文本索引库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/olivere/elastic",target:"_blank",rel:"noopener noreferrer"}},[r._v("elastic"),t("OutboundLink")],1),r._v(" - Go 语言的 Elasticsearch 客户端")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/cch123/elasticsql",target:"_blank",rel:"noopener noreferrer"}},[r._v("elasticsql"),t("OutboundLink")],1),r._v(" - 将 sql 转换为 elasticsearch dsl")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/mattbaird/elastiGo",target:"_blank",rel:"noopener noreferrer"}},[r._v("elastiGo"),t("OutboundLink")],1),r._v(" - Elasticsearch 客户端库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/belogik/Goes",target:"_blank",rel:"noopener noreferrer"}},[r._v("Goes"),t("OutboundLink")],1),r._v(" - 用于和 Elasticsearch 交互的库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/seiflotfy/skizze",target:"_blank",rel:"noopener noreferrer"}},[r._v("skizze"),t("OutboundLink")],1),r._v(" - 概率相关数据结构服务和存储")])])])])]),t("div",{staticClass:"masonry-card"},[t("div",{staticClass:"masonry-card-box"},[t("div",{staticClass:"masonry-card-content"},[t("div",{staticClass:"title"},[r._v("日期和时间")]),t("p",[t("em",[r._v("处理日期和时间的库")])]),r._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://github.com/uniplaces/carbon",target:"_blank",rel:"noopener noreferrer"}},[r._v("carbon"),t("OutboundLink")],1),r._v(" - 简单的时间扩展程序，有很多有用的方法，是 PHP Carbon 库的接口")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/hako/durafmt",target:"_blank",rel:"noopener noreferrer"}},[r._v("durafmt"),t("OutboundLink")],1),r._v(" - 持续时间格式化")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/wlbr/feiertage",target:"_blank",rel:"noopener noreferrer"}},[r._v("feiertage"),t("OutboundLink")],1),r._v(" - 一组计算德国公共假期的函数，比如复活节、感恩节等")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/yaa110/Go-persian-calendar",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-persian-calendar"),t("OutboundLink")],1),r._v(" - 太阳历")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/grsmv/Goweek",target:"_blank",rel:"noopener noreferrer"}},[r._v("Goweek"),t("OutboundLink")],1),r._v(" - 处理星期的库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/jinzhu/now",target:"_blank",rel:"noopener noreferrer"}},[r._v("now"),t("OutboundLink")],1),r._v(" - Now 是一个 Go 语言的时间工具集")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/kirillDanshin/nulltime",target:"_blank",rel:"noopener noreferrer"}},[r._v("NullTime"),t("OutboundLink")],1),r._v(" -时间可以是 NULL 的库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/leekchan/timeutil",target:"_blank",rel:"noopener noreferrer"}},[r._v("timeutil"),t("OutboundLink")],1),r._v(" - 为 Go 语言时间包扩展了有用的功能，例如时间间隔和格式化")])])])])]),t("div",{staticClass:"masonry-card"},[t("div",{staticClass:"masonry-card-box"},[t("div",{staticClass:"masonry-card-content"},[t("div",{staticClass:"title"},[r._v("分布式系统")]),t("p",[t("em",[r._v("用于构建分布式系统的库")])]),r._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://github.com/svcavallar/celeriac.v1",target:"_blank",rel:"noopener noreferrer"}},[r._v("celeriac"),t("OutboundLink")],1),r._v(" - 利用 Go 语言对Celery 的 worker，任务，事件进行交互和监控的库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/dgruber/drmaa",target:"_blank",rel:"noopener noreferrer"}},[r._v("drmaa"),t("OutboundLink")],1),r._v(" -集群调度工具的任务提交库，基于标准 DRMAA")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/vectaport/flowgraph",target:"_blank",rel:"noopener noreferrer"}},[r._v("flowgraph"),t("OutboundLink")],1),r._v(" - MPI 风格的读取，发送协同层")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/chrislusf/gleam",target:"_blank",rel:"noopener noreferrer"}},[r._v("gleam"),t("OutboundLink")],1),r._v(" - 快速、可扩展的分布式 map/reduce 系统，使用纯 Go 语言和 Luajit 编写，融合了 Go 语言的高并发能力和 Luajit 的高性能，可以独立或分布式部署运行。")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/chrislusf/glow",target:"_blank",rel:"noopener noreferrer"}},[r._v("glow"),t("OutboundLink")],1),r._v(" - 简单易用、可扩展的大数据处理能力，Map-Reduce 以及执行 DAG(Database Availability Group），所有功能均由Go语言编写.")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/dgryski/Go-jump",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-jump"),t("OutboundLink")],1),r._v(' - Google "Jump" 一致性哈希函数的借口')]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/Go-kit/kit",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-kit"),t("OutboundLink")],1),r._v(" - 为服务工具吧，支持服务发现、负载均衡 、可插拔传输以及请求追踪等")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/valyala/Gorpc",target:"_blank",rel:"noopener noreferrer"}},[r._v("Gorpc"),t("OutboundLink")],1),r._v(" - 简单、快速、可扩展的 RPC 库，针对高负载场景")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/grpc/grpc-Go",target:"_blank",rel:"noopener noreferrer"}},[r._v("grpc-Go"),t("OutboundLink")],1),r._v(" - Go 语言实现的 gRPC. HTTP/2 基于 RPC.")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/hprose/hprose-Golang",target:"_blank",rel:"noopener noreferrer"}},[r._v("hprose"),t("OutboundLink")],1),r._v(" - 非常牛逼的 RPC 库，当前支持 25+ 语言。")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/osaminGo/jsonrpc",target:"_blank",rel:"noopener noreferrer"}},[r._v("jsonrpc"),t("OutboundLink")],1),r._v(" - jsonrpc 包实现了 JSON-RPC 2.0.")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/ybbus/jsonrpc",target:"_blank",rel:"noopener noreferrer"}},[r._v("jsonrpc"),t("OutboundLink")],1),r._v(" - JSON-RPC 2.0 HTTP 客户端实现")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/devopsfaith/krakend",target:"_blank",rel:"noopener noreferrer"}},[r._v("KrakenD"),t("OutboundLink")],1),r._v(" - 带有中间件的，高性能 API 网关框架")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/micro/micro",target:"_blank",rel:"noopener noreferrer"}},[r._v("micro"),t("OutboundLink")],1),r._v(" - 微服务工具套件和分布式系统平台")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/nats-io/gnatsd",target:"_blank",rel:"noopener noreferrer"}},[r._v("NATS"),t("OutboundLink")],1),r._v(" - 轻量级、高性能微服务系统，用于微服务、物联网以及云")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/hashicorp/raft",target:"_blank",rel:"noopener noreferrer"}},[r._v("raft"),t("OutboundLink")],1),r._v(" - Raft 一致性协议的 Go 语言实现, 作者是 HashiCorp.")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/coreos/etcd/tree/master/raft#readme",target:"_blank",rel:"noopener noreferrer"}},[r._v("raft"),t("OutboundLink")],1),r._v(" - Raft 一致性协议的 Go 语言实现, 作者是 CoreOS.")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/uber/ringpop-Go",target:"_blank",rel:"noopener noreferrer"}},[r._v("ringpop-Go"),t("OutboundLink")],1),r._v(" - 可扩展、容错的应用层分片库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/smallnest/rpcx",target:"_blank",rel:"noopener noreferrer"}},[r._v("rpcx"),t("OutboundLink")],1),r._v(" - rpcx是一个类似阿里巴巴 Dubbo 和微博 Motan 的分布式的 RPC 服务框架")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/ursiform/sleuth",target:"_blank",rel:"noopener noreferrer"}},[r._v("sleuth"),t("OutboundLink")],1),r._v(" - 在 HTTP 服务之间进行无主 p2p 自动发现和 RPC通信(使用 "),t("a",{attrs:{href:"https://github.com/zeromq/libzmq",target:"_blank",rel:"noopener noreferrer"}},[r._v("ZeroMQ"),t("OutboundLink")],1),r._v(").")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/tendermint/tendermint",target:"_blank",rel:"noopener noreferrer"}},[r._v("tendermint"),t("OutboundLink")],1),r._v(" - 一个高性能的中间件，用于将任何语言编写的状态机转换为一个拜占庭容错状态机，使用Tendermint 一致性及区块链协议")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/anacrolix/torrent",target:"_blank",rel:"noopener noreferrer"}},[r._v("torrent"),t("OutboundLink")],1),r._v(" - BitTorrent 客户端")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://Godoc.org/github.com/anacrolix/dht",target:"_blank",rel:"noopener noreferrer"}},[r._v("dht"),t("OutboundLink")],1),r._v(" - BitTorrent Kademlia DHT 的实现.")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/Sioro-Neoku/Go-peerflix",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-peerflix"),t("OutboundLink")],1),r._v(" - 视频流 torrent 客户端")])])])])]),t("div",{staticClass:"masonry-card"},[t("div",{staticClass:"masonry-card-box"},[t("div",{staticClass:"masonry-card-content"},[t("div",{staticClass:"title"},[r._v("电子邮件")]),t("p",[t("em",[r._v("用于创建和发送电子邮件的库")])]),r._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://github.com/aymerick/douceur",target:"_blank",rel:"noopener noreferrer"}},[r._v("douceur"),t("OutboundLink")],1),r._v(" - HTML 邮件中的内联 CSS")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/jordan-wright/email",target:"_blank",rel:"noopener noreferrer"}},[r._v("email"),t("OutboundLink")],1),r._v(" - 一个健壮的、灵活的 email 库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/toorop/Go-dkim",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-dkim"),t("OutboundLink")],1),r._v(" - DKIM 库，用于对 email 进行签名和验证")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/emersion/Go-imap",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-imap"),t("OutboundLink")],1),r._v(" - IMAP 库，用于客户端和服务器")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/emersion/Go-message",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-message"),t("OutboundLink")],1),r._v(" - 用于触雷互联网消息格式和邮件的库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/Go-Gomail/Gomail/",target:"_blank",rel:"noopener noreferrer"}},[r._v("Gomail"),t("OutboundLink")],1),r._v(" - Gomail 是一个非常简单且强大的库，用于发送电子邮件")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/hectane/hectane",target:"_blank",rel:"noopener noreferrer"}},[r._v("Hectane"),t("OutboundLink")],1),r._v(" - 轻量级 SMTP 客户端，提供 HTTP API")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/matcornic/hermes",target:"_blank",rel:"noopener noreferrer"}},[r._v("hermes"),t("OutboundLink")],1),r._v(" - 一个用于生成干净、响应式 HTML e-mail 的包")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/mailhog/MailHog",target:"_blank",rel:"noopener noreferrer"}},[r._v("MailHog"),t("OutboundLink")],1),r._v(" - Email 及 SMTP 测试工具，具有 web 及 API 接口")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/sendgrid/sendgrid-Go",target:"_blank",rel:"noopener noreferrer"}},[r._v("SendGrid"),t("OutboundLink")],1),r._v(" - SendGrid 的 Go 语言库，用于发送电子邮件")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/mailhog/smtp",target:"_blank",rel:"noopener noreferrer"}},[r._v("smtp"),t("OutboundLink")],1),r._v(" - SMTP 服务器协议状态机")])])])])]),t("div",{staticClass:"masonry-card"},[t("div",{staticClass:"masonry-card-box"},[t("div",{staticClass:"masonry-card-content"},[t("div",{staticClass:"title"},[r._v("嵌入式脚本语言")]),t("p",[t("em",[r._v("在你的 Go 代码中嵌入其他语言.")])]),r._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://github.com/PuerkitoBio/aGora",target:"_blank",rel:"noopener noreferrer"}},[r._v("aGora"),t("OutboundLink")],1),r._v(" - 一种动态类型的可以嵌入 Go 中的编程语言")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/mattn/anko",target:"_blank",rel:"noopener noreferrer"}},[r._v("anko"),t("OutboundLink")],1),r._v(" - Go 语言编写的解释器")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/alexeyco/binder",target:"_blank",rel:"noopener noreferrer"}},[r._v("binder"),t("OutboundLink")],1),r._v(" - Lua 接口, 基于 "),t("a",{attrs:{href:"https://github.com/yuin/Gopher-lua",target:"_blank",rel:"noopener noreferrer"}},[r._v("Gopher-lua"),t("OutboundLink")],1)]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/jcla1/gisp",target:"_blank",rel:"noopener noreferrer"}},[r._v("gisp"),t("OutboundLink")],1),r._v(" - Simple LISP")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/olebedev/Go-duktape",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-duktape"),t("OutboundLink")],1),r._v(" - Duktape JavaScript 引擎的 Go 语言接口")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/Shopify/Go-lua",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-lua"),t("OutboundLink")],1),r._v(" - Lua 5.2 虚拟机的纯 Go 语言接口")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/deuill/Go-php",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-php"),t("OutboundLink")],1),r._v(" - PHP 的 Go 语言接口")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/sbinet/Go-python",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-python"),t("OutboundLink")],1),r._v(" - CPython C-API 的 Go 语言接口")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/aarzilli/Golua",target:"_blank",rel:"noopener noreferrer"}},[r._v("Golua"),t("OutboundLink")],1),r._v(" - Lua C API。的 Go 语言接口")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/yuin/Gopher-lua",target:"_blank",rel:"noopener noreferrer"}},[r._v("Gopher-lua"),t("OutboundLink")],1),r._v(" - Go 语言编写的 Lua 5.1 虚拟机和编译器")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/db47h/ngaro",target:"_blank",rel:"noopener noreferrer"}},[r._v("ngaro"),t("OutboundLink")],1),r._v(" - 可嵌入的 Ngaro 虚拟机实现，支持在 Retro 中使用脚步")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/robertkrimen/otto",target:"_blank",rel:"noopener noreferrer"}},[r._v("otto"),t("OutboundLink")],1),r._v(" - Go 编写的 Javascrip 解释器")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/ian-kent/purl",target:"_blank",rel:"noopener noreferrer"}},[r._v("purl"),t("OutboundLink")],1),r._v(" - 嵌入 Go 语言的 Perl 5.18.2")])])])])]),t("div",{staticClass:"masonry-card"},[t("div",{staticClass:"masonry-card-box"},[t("div",{staticClass:"masonry-card-content"},[t("div",{staticClass:"title"},[r._v("文件")]),t("p",[t("em",[r._v("用于处理文件和文件系统的库")])]),r._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://github.com/spf13/afero",target:"_blank",rel:"noopener noreferrer"}},[r._v("afero"),t("OutboundLink")],1),r._v(" - 一个文件系统的抽象系统")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/artonge/Go-csv-tag",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-csv-tag"),t("OutboundLink")],1),r._v(" - 使用 tag 导入 csv")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/artonge/Go-gtfs",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-gtfs"),t("OutboundLink")],1),r._v(" - 加载 gtfs 文件")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/rjeczalik/notify",target:"_blank",rel:"noopener noreferrer"}},[r._v("notify"),t("OutboundLink")],1),r._v(" - 文件系统提示库，具有简单的 API ，类似 os/signal.")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/dixonwille/skywalker",target:"_blank",rel:"noopener noreferrer"}},[r._v("skywalker"),t("OutboundLink")],1),r._v(" - 允许你简单方便的并发浏览文件系统")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/posener/tarfs",target:"_blank",rel:"noopener noreferrer"}},[r._v("tarfs"),t("OutboundLink")],1),r._v(" - 为 tar 文件实现的 "),t("a",{attrs:{href:"https://Godoc.org/github.com/kr/fs#FileSystem",target:"_blank",rel:"noopener noreferrer"}},[t("code",[r._v("FileSystem")]),r._v(" 接口"),t("OutboundLink")],1)])])])])]),t("div",{staticClass:"masonry-card"},[t("div",{staticClass:"masonry-card-box"},[t("div",{staticClass:"masonry-card-content"},[t("div",{staticClass:"title"},[r._v("财经")]),t("p",[t("em",[r._v("会计及财务库")])]),r._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://github.com/leekchan/accounting",target:"_blank",rel:"noopener noreferrer"}},[r._v("accounting"),t("OutboundLink")],1),r._v(" - 金钱及货币格式")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/shopspring/decimal",target:"_blank",rel:"noopener noreferrer"}},[r._v("decimal"),t("OutboundLink")],1),r._v(" - 任意精度、固定点十进制数")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/FlashBoys/Go-finance",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-finance"),t("OutboundLink")],1),r._v(" - 使用 Go 语言来理解财务市场数据")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/rhymond/Go-money",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-money"),t("OutboundLink")],1),r._v(" - "),t("a",{attrs:{href:"https://martinfowler.com/eaaCatalog/money.html",target:"_blank",rel:"noopener noreferrer"}},[r._v("Fowler 金钱模型"),t("OutboundLink")],1),r._v("的实现")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/aclindsa/ofxGo",target:"_blank",rel:"noopener noreferrer"}},[r._v("ofxGo"),t("OutboundLink")],1),r._v(" - 查询 OFX 服务器并解析其响应 (有一个示例的命令行客户端)")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/dannyvankooten/vat",target:"_blank",rel:"noopener noreferrer"}},[r._v("vat"),t("OutboundLink")],1),r._v(" - VAT 验证及欧洲增值税率工具")])])])])]),t("div",{staticClass:"masonry-card"},[t("div",{staticClass:"masonry-card-box"},[t("div",{staticClass:"masonry-card-content"},[t("div",{staticClass:"title"},[r._v("表单")]),t("p",[t("em",[r._v("操作表单的库")])]),r._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://github.com/robfig/bind",target:"_blank",rel:"noopener noreferrer"}},[r._v("bind"),t("OutboundLink")],1),r._v(" - 将表单数据绑定到任意的 Go 变量上")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/mholt/binding",target:"_blank",rel:"noopener noreferrer"}},[r._v("binding"),t("OutboundLink")],1),r._v(" - 将来自 net/HTTP 请求的表单、JSON 数据绑定到结构体")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/leebenson/conform",target:"_blank",rel:"noopener noreferrer"}},[r._v("conform"),t("OutboundLink")],1),r._v(" - 检查用户输入并基于结构标签来清理数据")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/Go-playground/form",target:"_blank",rel:"noopener noreferrer"}},[r._v("form"),t("OutboundLink")],1),r._v(" - 解码 url 中的数据到 Go 语言变量中以及将 Go 语言变量编码进 url 支持Dual Array 及 Full map")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/monoculum/formam",target:"_blank",rel:"noopener noreferrer"}},[r._v("formam"),t("OutboundLink")],1),r._v(" - 将表单数据解码到结构体")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/albrow/forms",target:"_blank",rel:"noopener noreferrer"}},[r._v("forms"),t("OutboundLink")],1),r._v(" - 框架无关的表单/JSON数据解析验证库，支持多部分表单及文件")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/Gorilla/csrf",target:"_blank",rel:"noopener noreferrer"}},[r._v("Gorilla/csrf"),t("OutboundLink")],1),r._v(" - 为 Go 语言 web 应用提供 CSRF 防御")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/justinas/nosurf",target:"_blank",rel:"noopener noreferrer"}},[r._v("nosurf"),t("OutboundLink")],1),r._v(" - CSRF 防御中间件")])])])])]),t("div",{staticClass:"masonry-card"},[t("div",{staticClass:"masonry-card-box"},[t("div",{staticClass:"masonry-card-content"},[t("div",{staticClass:"title"},[r._v("游戏开发")]),t("p",[t("em",[r._v("超赞的游戏开发库")])]),r._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://github.com/azul3d/engine",target:"_blank",rel:"noopener noreferrer"}},[r._v("Azul3D"),t("OutboundLink")],1),r._v(" - Go 语言编写的 3D 游戏引擎")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/hajimehoshi/ebiten",target:"_blank",rel:"noopener noreferrer"}},[r._v("Ebiten"),t("OutboundLink")],1),r._v(" - Go 语言编写的简单的 2D 游戏库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/EnGoEngine/enGo",target:"_blank",rel:"noopener noreferrer"}},[r._v("enGo"),t("OutboundLink")],1),r._v(" - EnGo 是一个开源的 2D 游戏引擎，遵循实体-组件-系统范式")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/vova616/GarageEngine",target:"_blank",rel:"noopener noreferrer"}},[r._v("GarageEngine"),t("OutboundLink")],1),r._v(" - 2d 游戏引擎，利用 OpenGL 工作")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/runningwild/glop",target:"_blank",rel:"noopener noreferrer"}},[r._v("glop"),t("OutboundLink")],1),r._v(" - Glop (Game Library Of Power) 是一个很简单的跨平台游戏库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/beefsack/Go-astar",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-astar"),t("OutboundLink")],1),r._v(" - Go 语言实现的 A* 寻路算法")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/GlenKelley/Go-collada",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-collada"),t("OutboundLink")],1),r._v(" - 操作 Collada 文件格式的 Go 语言库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/veandco/Go-sdl2",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-sdl2"),t("OutboundLink")],1),r._v(" - "),t("a",{attrs:{href:"https://www.libsdl.org/",target:"_blank",rel:"noopener noreferrer"}},[r._v("Simple DirectMedia Layer"),t("OutboundLink")],1),r._v("的 Go 语言接口")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/ungerik/Go3d",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go3d"),t("OutboundLink")],1),r._v(" - 专注性能的 2D/3D 数学库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/xtaci/Gonet",target:"_blank",rel:"noopener noreferrer"}},[r._v("Gonet"),t("OutboundLink")],1),r._v(" - Go 语言实现的游戏服务器框架")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/name5566/leaf",target:"_blank",rel:"noopener noreferrer"}},[r._v("Leaf"),t("OutboundLink")],1),r._v(" - 轻量级游戏服务器框架")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/faiface/pixel",target:"_blank",rel:"noopener noreferrer"}},[r._v("Pixel"),t("OutboundLink")],1),r._v(" - 手工 2D 游戏引擎库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/gen2brain/raylib-Go",target:"_blank",rel:"noopener noreferrer"}},[r._v("raylib-Go"),t("OutboundLink")],1),r._v(" - "),t("a",{attrs:{href:"http://www.raylib.com/",target:"_blank",rel:"noopener noreferrer"}},[r._v("raylib"),t("OutboundLink")],1),r._v("的 Go 语言接口，简单、易用的用于学习游戏编程的库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/JoelOtter/termloop",target:"_blank",rel:"noopener noreferrer"}},[r._v("termloop"),t("OutboundLink")],1),r._v(" - 终端游戏引擎，基于 Termbox")])])])])]),t("div",{staticClass:"masonry-card"},[t("div",{staticClass:"masonry-card-box"},[t("div",{staticClass:"masonry-card-content"},[t("div",{staticClass:"title"},[r._v("代码生成与泛型")]),t("p",[t("em",[r._v("一些增强语言的功能的工具例如通过代码生成支持泛型")])]),r._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://github.com/t0pep0/efaceconv",target:"_blank",rel:"noopener noreferrer"}},[r._v("efaceconv"),t("OutboundLink")],1),r._v(" - 代码生成工具，用于高效的将 interface{} 转换为不可变类型，不需要进行任何内存分配")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/clipperhouse/gen",target:"_blank",rel:"noopener noreferrer"}},[r._v("gen"),t("OutboundLink")],1),r._v(" - 代码生成工具,用于提供类似泛型的功能")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/ahmetalpbalkan/Go-linq",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-linq"),t("OutboundLink")],1),r._v(" - 类似 .NET LINQ 的查询方法")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/rjeczalik/interfaces",target:"_blank",rel:"noopener noreferrer"}},[r._v("interfaces"),t("OutboundLink")],1),r._v(" - 命令行工具，用于生成接口定义")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/dave/jennifer",target:"_blank",rel:"noopener noreferrer"}},[r._v("jennifer"),t("OutboundLink")],1),r._v(" - 不适用模板生成任意 Go 语言代码")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/ungerik/pkgreflect",target:"_blank",rel:"noopener noreferrer"}},[r._v("pkgreflect"),t("OutboundLink")],1),r._v(" - 用于包作用域反射的 Go 语言预处理器")])])])])]),t("div",{staticClass:"masonry-card"},[t("div",{staticClass:"masonry-card-box"},[t("div",{staticClass:"masonry-card-content"},[t("div",{staticClass:"title"},[r._v("Go 编译器")]),t("p",[t("em",[r._v("用于把 Go 语言编译为其他语言的工具")])]),r._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://github.com/Gopherjs/Gopherjs",target:"_blank",rel:"noopener noreferrer"}},[r._v("Gopherjs"),t("OutboundLink")],1),r._v(" - 把 Go 编译为 JavaScript.")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/Go-llvm/llGo",target:"_blank",rel:"noopener noreferrer"}},[r._v("llGo"),t("OutboundLink")],1),r._v(" - 基于 LLVM 的 Go 语言编译器")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/tardisGo/tardisGo",target:"_blank",rel:"noopener noreferrer"}},[r._v("tardisGo"),t("OutboundLink")],1),r._v(" - Golang 转换为 Haxe 进而转换为 CPP/CSharp/Java/JavaScript 的编译器.")])])])])]),t("div",{staticClass:"masonry-card"},[t("div",{staticClass:"masonry-card-box"},[t("div",{staticClass:"masonry-card-content"},[t("div",{staticClass:"title"},[r._v("协程")]),t("p",[t("em",[r._v("用于管理和处理Go 语言协程的工具")])]),r._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://github.com/workanator/Go-floc",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-floc"),t("OutboundLink")],1),r._v(" - 轻松编排 Go 语言协程")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/kamildrazkiewicz/Go-flow",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-flow"),t("OutboundLink")],1),r._v(" - 控制 Go 语言协程的执行顺序")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/benmanns/Goworker",target:"_blank",rel:"noopener noreferrer"}},[r._v("Goworker"),t("OutboundLink")],1),r._v(" - Goworker 是一个基于 Go 语言的后台worker")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/ivpusic/grpool",target:"_blank",rel:"noopener noreferrer"}},[r._v("grpool"),t("OutboundLink")],1),r._v(" - 轻量级 Go 语言协程池")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/Go-playground/pool",target:"_blank",rel:"noopener noreferrer"}},[r._v("pool"),t("OutboundLink")],1),r._v(" - 有限消费者协程或无限协程池，用于简单的处理协程和取消协程")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/kamilsk/semaphore",target:"_blank",rel:"noopener noreferrer"}},[r._v("semaphore"),t("OutboundLink")],1),r._v(" - 实现了信号量模式，提供了超时锁定、解锁操作，基于通道和上下文。")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/Jeffail/tunny",target:"_blank",rel:"noopener noreferrer"}},[r._v("tunny"),t("OutboundLink")],1),r._v(" - Go 语言协程池")])])])])]),t("div",{staticClass:"masonry-card"},[t("div",{staticClass:"masonry-card-box"},[t("div",{staticClass:"masonry-card-content"},[t("div",{staticClass:"title"},[r._v("GUI")]),t("p",[t("em",[r._v("用于构建 GUI 程序的库")])]),r._v(" "),t("p",[t("em",[r._v("工具包")])]),r._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://github.com/murlokswarm/app",target:"_blank",rel:"noopener noreferrer"}},[r._v("app"),t("OutboundLink")],1),r._v(" - 使用Go, HTML 和 CSS 进行应用程序开发的库 支持 MacOS, Windows in progress.")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/asticode/Go-astilectron",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-astilectron"),t("OutboundLink")],1),r._v(" - 使用 Go 以及 HTML/JS/CSS 构建应用程序. (基于Electron)")]),r._v(" "),t("li",[t("a",{attrs:{href:"http://mattn.github.io/Go-gtk/",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-gtk"),t("OutboundLink")],1),r._v(" - GTK 的 Go 语言接口")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/Go-qml/qml",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-qml"),t("OutboundLink")],1),r._v(" - QML 对 Go 语言的支持")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/sciter-sdk/Go-sciter",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-sciter"),t("OutboundLink")],1),r._v(" - Sciter 的 Go 语言接口 : 支持现代 GUI 程序开发的、嵌入式 HTML/CSS/脚本 引擎。跨平台。")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/visualfc/Goqt",target:"_blank",rel:"noopener noreferrer"}},[r._v("Goqt"),t("OutboundLink")],1),r._v(" - Qt的 Go 语言接口")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/Gotk3/Gotk3",target:"_blank",rel:"noopener noreferrer"}},[r._v("Gotk3"),t("OutboundLink")],1),r._v(" - GTK3 的 Go 语言接口")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/dtylman/Gowd",target:"_blank",rel:"noopener noreferrer"}},[r._v("Gowd"),t("OutboundLink")],1),r._v(" - 使用 Go, HTML, CSS 和 NW.js 语言进行快速、简单的桌面 UI 开发。跨平台")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/therecipe/qt",target:"_blank",rel:"noopener noreferrer"}},[r._v("qt"),t("OutboundLink")],1),r._v(" - Qt 的 Go 语言接口 (支持 Windows / macOS / Linux / Android / iOS / Sailfish OS / Raspberry Pi)")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/andlabs/ui",target:"_blank",rel:"noopener noreferrer"}},[r._v("ui"),t("OutboundLink")],1),r._v(" - 平台原生 GUI 库。跨平台")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/lxn/walk",target:"_blank",rel:"noopener noreferrer"}},[r._v("walk"),t("OutboundLink")],1),r._v(" - windows 应用程序开发工具包")])]),r._v(" "),t("p",[t("em",[r._v("交互")])]),r._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://github.com/deckarep/Gosx-notifier",target:"_blank",rel:"noopener noreferrer"}},[r._v("Gosx-notifier"),t("OutboundLink")],1),r._v(" - OSX 桌面提醒库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/Go-vGo/robotGo",target:"_blank",rel:"noopener noreferrer"}},[r._v("robotGo"),t("OutboundLink")],1),r._v(" - 跨平台 GUI 自动化；控制鼠标、键盘及其他设备")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/getlantern/systray",target:"_blank",rel:"noopener noreferrer"}},[r._v("systray"),t("OutboundLink")],1),r._v(" - 一个跨平台的 Go 语言库，用于在桌面提醒区域放置按钮及菜单")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/shurcooL/trayhost",target:"_blank",rel:"noopener noreferrer"}},[r._v("trayhost"),t("OutboundLink")],1),r._v(" - 一个跨平台的 Go 语言库，用于在主机系统任务条区域放置按钮及菜单")])])])])]),t("div",{staticClass:"masonry-card"},[t("div",{staticClass:"masonry-card-box"},[t("div",{staticClass:"masonry-card-content"},[t("div",{staticClass:"title"},[r._v("硬件")]),t("p",[t("em",[r._v("库、工具以及教程，讲解如何操控硬件")])]),r._v(" "),t("p",[r._v("参见 "),t("a",{attrs:{href:"https://github.com/rakyll/Go-hardware",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-hardware"),t("OutboundLink")],1),r._v(" 获取更加全面的信息")])])])]),t("div",{staticClass:"masonry-card"},[t("div",{staticClass:"masonry-card-box"},[t("div",{staticClass:"masonry-card-content"},[t("div",{staticClass:"title"},[r._v("图像")]),t("p",[t("em",[r._v("用于操作图像的库")])]),r._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://github.com/anthonynsimon/bild",target:"_blank",rel:"noopener noreferrer"}},[r._v("bild"),t("OutboundLink")],1),r._v(" - 汇集了使用 Go 语言编写的图像处理算法")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/h2non/bimg",target:"_blank",rel:"noopener noreferrer"}},[r._v("bimg"),t("OutboundLink")],1),r._v(" - 利用 libvips 进行快速高效的图像处理")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/pravj/geopattern",target:"_blank",rel:"noopener noreferrer"}},[r._v("geopattern"),t("OutboundLink")],1),r._v(" - 从字符串创建优美的图样")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/fogleman/gg",target:"_blank",rel:"noopener noreferrer"}},[r._v("gg"),t("OutboundLink")],1),r._v(" - 使用 Go 编写的 2D 渲染程序")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/disintegration/gift",target:"_blank",rel:"noopener noreferrer"}},[r._v("gift"),t("OutboundLink")],1),r._v(" - 一组图像处理滤波器")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/ungerik/Go-cairo",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-cairo"),t("OutboundLink")],1),r._v(" - cairo 图形库的 Go 语言接口")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/bolknote/Go-gd",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-gd"),t("OutboundLink")],1),r._v(" - GD 库的 Go 语言接口")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/koyachi/Go-nude",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-nude"),t("OutboundLink")],1),r._v(" - 使用 Go 语言进行裸替检测")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/lazywei/Go-opencv",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-opencv"),t("OutboundLink")],1),r._v(" - OpenCV 的 Go 语言接口")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/jyotiska/Go-webcolors",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-webcolors"),t("OutboundLink")],1),r._v(" - webcolors 库的 Go 语言接口")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/Gographics/imagick",target:"_blank",rel:"noopener noreferrer"}},[r._v("imagick"),t("OutboundLink")],1),r._v(" - ImageMagick 的 MagickWand C 语言 API 的 Go 语言接口")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/h2non/imaginary",target:"_blank",rel:"noopener noreferrer"}},[r._v("imaginary"),t("OutboundLink")],1),r._v(" - 快速且简单的 HTTP 微服务，用于图像缩放")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/disintegration/imaging",target:"_blank",rel:"noopener noreferrer"}},[r._v("imaging"),t("OutboundLink")],1),r._v(" - 简单的 Go 语言图像处理包")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/hawx/img",target:"_blank",rel:"noopener noreferrer"}},[r._v("img"),t("OutboundLink")],1),r._v(" - 图像操作工具精选集")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/fogleman/ln",target:"_blank",rel:"noopener noreferrer"}},[r._v("ln"),t("OutboundLink")],1),r._v(" - 3D 图线艺术渲染")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/donatj/mpo",target:"_blank",rel:"noopener noreferrer"}},[r._v("mpo"),t("OutboundLink")],1),r._v(" - MPO 3D 照片解码与转换工具.")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/thoas/picfit",target:"_blank",rel:"noopener noreferrer"}},[r._v("picfit"),t("OutboundLink")],1),r._v(" - 一个使用 Go 语言编写的图片缩放服务器")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/fogleman/pt",target:"_blank",rel:"noopener noreferrer"}},[r._v("pt"),t("OutboundLink")],1),r._v(" - 光线追踪引擎")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/nfnt/resize",target:"_blank",rel:"noopener noreferrer"}},[r._v("resize"),t("OutboundLink")],1),r._v(" - 使用 Go 语言编写的具有常见差值功能的图片缩放工具")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/bamiaux/rez",target:"_blank",rel:"noopener noreferrer"}},[r._v("rez"),t("OutboundLink")],1),r._v(" - 纯 Go 及 SIMD 实现的图像缩放库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/muesli/smartcrop",target:"_blank",rel:"noopener noreferrer"}},[r._v("smartcrop"),t("OutboundLink")],1),r._v(" - 为任意图片进行剪裁的工具")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/ajstarks/svGo",target:"_blank",rel:"noopener noreferrer"}},[r._v("svGo"),t("OutboundLink")],1),r._v(" - 用于生成 SVG 的 Go 语言库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/ftrvxmtrx/tga",target:"_blank",rel:"noopener noreferrer"}},[r._v("tga"),t("OutboundLink")],1),r._v(" - tga 是一个 TARGA 图像格式解码/编码器")])])])])]),t("div",{staticClass:"masonry-card"},[t("div",{staticClass:"masonry-card-box"},[t("div",{staticClass:"masonry-card-content"},[t("div",{staticClass:"title"},[r._v("物联网")]),t("p",[t("em",[r._v("用于为物联网设备编程的库.")])]),r._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://github.com/connectordb/connectordb",target:"_blank",rel:"noopener noreferrer"}},[r._v("connectordb"),t("OutboundLink")],1),r._v(" - 开源个人数据及物联网平台")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/Goiot/devices",target:"_blank",rel:"noopener noreferrer"}},[r._v("devices"),t("OutboundLink")],1),r._v(" - 物联网设备套件库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/xcodersun/eywa",target:"_blank",rel:"noopener noreferrer"}},[r._v("eywa"),t("OutboundLink")],1),r._v(" - Eywa 是一个持续追踪所有连接设备的连接管理器")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/tibcosoftware/floGo",target:"_blank",rel:"noopener noreferrer"}},[r._v("floGo"),t("OutboundLink")],1),r._v(" - FloGo 是一个用于物联网 Edge App 及集成的开源框架")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/paypal/gatt",target:"_blank",rel:"noopener noreferrer"}},[r._v("gatt"),t("OutboundLink")],1),r._v(" - Gatt 是一个用于创建低功耗蓝牙外设的库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/hybridgroup/Gobot/",target:"_blank",rel:"noopener noreferrer"}},[r._v("Gobot"),t("OutboundLink")],1),r._v(" - Gobot 是一个用于机器人，物理计算以及物联网的库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/Mainflux/mainflux",target:"_blank",rel:"noopener noreferrer"}},[r._v("mainflux"),t("OutboundLink")],1),r._v(" - 工业网物联网消息及设备管理服务器")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/sensorbee/sensorbee",target:"_blank",rel:"noopener noreferrer"}},[r._v("sensorbee"),t("OutboundLink")],1),r._v(" - 轻量级物联网流处理引擎")])])])])]),t("div",{staticClass:"masonry-card"},[t("div",{staticClass:"masonry-card-box"},[t("div",{staticClass:"masonry-card-content"},[t("div",{staticClass:"title"},[r._v("日志")]),t("p",[t("em",[r._v("用于生成和操作日志文件的库.")])]),r._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://github.com/kpanGo/glg",target:"_blank",rel:"noopener noreferrer"}},[r._v("glg"),t("OutboundLink")],1),r._v(" - glg 是一个简单、快速、分级的日志库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/Golang/glog",target:"_blank",rel:"noopener noreferrer"}},[r._v("glog"),t("OutboundLink")],1),r._v(" - 分级记录日志的库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/utahta/Go-cronowriter",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-cronowriter"),t("OutboundLink")],1),r._v(" 对日志文件进行自动循环写入的库基于当前日期和时间，类似 cronolog.")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/siddontang/Go-log",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-log"),t("OutboundLink")],1),r._v(" - 支持多处理器及日志分级的库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/ian-kent/Go-log",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-log"),t("OutboundLink")],1),r._v(" - Go 语言实现的 Log4j")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/apsdehal/Go-logger",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-logger"),t("OutboundLink")],1),r._v(" - 支持日志分级的简单的日志工具")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/sadlil/Gologger",target:"_blank",rel:"noopener noreferrer"}},[r._v("Gologger"),t("OutboundLink")],1),r._v(" - 简单易用的日志库，可以在彩色控制台、简易控制的、文件或 Elasticsearch 中记录")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/aphistic/Gomol",target:"_blank",rel:"noopener noreferrer"}},[r._v("Gomol"),t("OutboundLink")],1),r._v(" - 支持多种输出，结构化的日志模块，可以扩展它的输出")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/One-com/Gone/tree/master/log#readme",target:"_blank",rel:"noopener noreferrer"}},[r._v("Gone/log"),t("OutboundLink")],1),r._v(" - 快速、可扩展、全功能、兼容标准库的日志库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/apex/log",target:"_blank",rel:"noopener noreferrer"}},[r._v("log"),t("OutboundLink")],1),r._v(" - 结构化日志库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/Go-playground/log",target:"_blank",rel:"noopener noreferrer"}},[r._v("log"),t("OutboundLink")],1),r._v(" - 简单、可配置、可扩展的结构化日志库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/firstrow/logvoyage",target:"_blank",rel:"noopener noreferrer"}},[r._v("log-voyage"),t("OutboundLink")],1),r._v(" - 全功能日志saas 使用 Go 语言编写")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/inconshreveable/log15",target:"_blank",rel:"noopener noreferrer"}},[r._v("log15"),t("OutboundLink")],1),r._v(" - 简单强大的日志库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/ewwwwwqm/logdump",target:"_blank",rel:"noopener noreferrer"}},[r._v("logdump"),t("OutboundLink")],1),r._v(" - 支持分级的日志库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/chzyer/logex",target:"_blank",rel:"noopener noreferrer"}},[r._v("logex"),t("OutboundLink")],1),r._v(" - Go 语言日志库，支持追踪和分级，基于标准库进行了封装")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/azer/logger",target:"_blank",rel:"noopener noreferrer"}},[r._v("logger"),t("OutboundLink")],1),r._v(" - 一个极简的日志库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/Sirupsen/logrus",target:"_blank",rel:"noopener noreferrer"}},[r._v("logrus"),t("OutboundLink")],1),r._v(" - 支持结构化的日志工具.")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/sebest/logrusly",target:"_blank",rel:"noopener noreferrer"}},[r._v("logrusly"),t("OutboundLink")],1),r._v(" - "),t("a",{attrs:{href:"https://github.com/sirupsen/logrus",target:"_blank",rel:"noopener noreferrer"}},[r._v("logrus"),t("OutboundLink")],1),r._v(" 的插件，用于将错误发送到 "),t("a",{attrs:{href:"https://www.loggly.com/",target:"_blank",rel:"noopener noreferrer"}},[r._v("Loggly"),t("OutboundLink")],1),r._v(".")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/hashicorp/logutils",target:"_blank",rel:"noopener noreferrer"}},[r._v("logutils"),t("OutboundLink")],1),r._v(" - 对 Go 语言标准日志工具进行了扩展，使其更好用")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/mgutz/logxi",target:"_blank",rel:"noopener noreferrer"}},[r._v("logxi"),t("OutboundLink")],1),r._v(" - 十二要素 app 日志工具，非常快速，令你开心")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/natefinch/lumberjack",target:"_blank",rel:"noopener noreferrer"}},[r._v("lumberjack"),t("OutboundLink")],1),r._v(" - 简单的循环日志工具，实现了 io.WriteCloser.")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/jbrodriguez/mlog",target:"_blank",rel:"noopener noreferrer"}},[r._v("mlog"),t("OutboundLink")],1),r._v(" - 一个简单的日志模块，可以分5级并有一个可选的循环日志文件记录功能，支持 stdout/stderr 输出.")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/Go-ozzo/ozzo-log",target:"_blank",rel:"noopener noreferrer"}},[r._v("ozzo-log"),t("OutboundLink")],1),r._v(" - 高性能日志库，支持日志严重级别、分类及过滤。可以将过滤后的信息发送到不同的目的地(例如： 控制台、网络、邮箱).")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/cihub/seelog",target:"_blank",rel:"noopener noreferrer"}},[r._v("seelog"),t("OutboundLink")],1),r._v(" - 一个灵活的、解耦的、格式化的日志库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/ventu-io/slf",target:"_blank",rel:"noopener noreferrer"}},[r._v("slf"),t("OutboundLink")],1),r._v(" - 简单日志门面（The Structured Logging Facade (SLF) ） (类似 SLF4J，但是它是结构化的，并且专为 Go 语言设计)")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/ventu-io/slog",target:"_blank",rel:"noopener noreferrer"}},[r._v("slog"),t("OutboundLink")],1),r._v(" - 为 Go 语言实现的结构化日志门面（Structured Logging Facade (SLF) ）")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/davecgh/Go-spew",target:"_blank",rel:"noopener noreferrer"}},[r._v("spew"),t("OutboundLink")],1),r._v(" - 为 Go 语言的数据结构实现了一个整洁的打印功能，有助于调试")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/alexcesaro/log",target:"_blank",rel:"noopener noreferrer"}},[r._v("stdlog"),t("OutboundLink")],1),r._v(" - Stdlog 是一个面向对象的库，提供了分级日志功能，对于定时任务很有用.")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/hpcloud/tail",target:"_blank",rel:"noopener noreferrer"}},[r._v("tail"),t("OutboundLink")],1),r._v(" - 这个 Go 语言软件包力争模拟 BSD tail 的功能")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/xfxdev/xlog",target:"_blank",rel:"noopener noreferrer"}},[r._v("xlog"),t("OutboundLink")],1),r._v(" - 插件架构以及灵活的日志系统，具有日志等级控制，多日志目标以及自定义日志格式功能")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/rs/xlog",target:"_blank",rel:"noopener noreferrer"}},[r._v("xlog"),t("OutboundLink")],1),r._v(" - 结构化日志 for "),t("code",[r._v("net/context")]),r._v(" aware HTTP handlers ，可以灵活的分发")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/uber-Go/zap",target:"_blank",rel:"noopener noreferrer"}},[r._v("zap"),t("OutboundLink")],1),r._v(" - 快速的、结构化的、分级的日志库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/rs/zerolog",target:"_blank",rel:"noopener noreferrer"}},[r._v("zerolog"),t("OutboundLink")],1),r._v(" - 零分配 JSON 日志.")])])])])]),t("div",{staticClass:"masonry-card"},[t("div",{staticClass:"masonry-card-box"},[t("div",{staticClass:"masonry-card-content"},[t("div",{staticClass:"title"},[r._v("机器学习")]),t("p",[t("em",[r._v("机器学习库")])]),r._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://github.com/jbrukh/bayesian",target:"_blank",rel:"noopener noreferrer"}},[r._v("bayesian"),t("OutboundLink")],1),r._v(" - 贝叶斯分类器")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/ryanbressler/CloudForest",target:"_blank",rel:"noopener noreferrer"}},[r._v("CloudForest"),t("OutboundLink")],1),r._v(" - 纯 Go 语言编写的快速、灵活、多线程决策树")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/MaxHalford/gaGo",target:"_blank",rel:"noopener noreferrer"}},[r._v("gaGo"),t("OutboundLink")],1),r._v(" - 多种群，灵活的，并行的遗传算法")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/white-pony/Go-fann",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-fann"),t("OutboundLink")],1),r._v(" - 快速人工神经网络库(FANN)的 Go 语言借口.")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/thoj/Go-galib",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-galib"),t("OutboundLink")],1),r._v(" - Go 语言编写的遗传算法库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/daviddengcn/Go-pr",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-pr"),t("OutboundLink")],1),r._v(" -  Go 语言模式识别库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/Goml/Gobrain",target:"_blank",rel:"noopener noreferrer"}},[r._v("Gobrain"),t("OutboundLink")],1),r._v(" -  Go 语言编写的神经网络")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/e-dard/Godist",target:"_blank",rel:"noopener noreferrer"}},[r._v("Godist"),t("OutboundLink")],1),r._v(" - 多种概率分布及相关方法")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/tomcraven/Goga",target:"_blank",rel:"noopener noreferrer"}},[r._v("Goga"),t("OutboundLink")],1),r._v(" -  Go 语言遗传算法库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/sjwhitworth/Golearn",target:"_blank",rel:"noopener noreferrer"}},[r._v("GoLearn"),t("OutboundLink")],1),r._v(" -  Go 语言通用机器学习库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/danieldk/Golinear",target:"_blank",rel:"noopener noreferrer"}},[r._v("Golinear"),t("OutboundLink")],1),r._v(" - liblinear 库的 Go 语言接口")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/cdipaolo/Goml",target:"_blank",rel:"noopener noreferrer"}},[r._v("Goml"),t("OutboundLink")],1),r._v(" - 即时go语言机器学习库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/timkaye11/GoRecommend",target:"_blank",rel:"noopener noreferrer"}},[r._v("GoRecommend"),t("OutboundLink")],1),r._v(" - Go 语言推荐算法库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/chewxy/GorGonia",target:"_blank",rel:"noopener noreferrer"}},[r._v("GorGonia"),t("OutboundLink")],1),r._v(" - 基于图的计算库，类似于 Theano。提供了一些原型用于构建各种个样的机器学习和神经网络算法")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/datastream/libsvm",target:"_blank",rel:"noopener noreferrer"}},[r._v("libsvm"),t("OutboundLink")],1),r._v(" - libsvm 的 Go 语言版本，基于 LIBSVM 3.14.")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/NullHypothesis/mlGo",target:"_blank",rel:"noopener noreferrer"}},[r._v("mlGo"),t("OutboundLink")],1),r._v(" - 这个项目点目标是在 Go 语言中提供极简的机器学习算法")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/jinyeom/neat",target:"_blank",rel:"noopener noreferrer"}},[r._v("neat"),t("OutboundLink")],1),r._v(" - 即插即用的并行 Go 语言框架，用于增强拓扑神经网络 (NEAT).")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/schuyler/neural-Go",target:"_blank",rel:"noopener noreferrer"}},[r._v("neural-Go"),t("OutboundLink")],1),r._v(" - Go 语言实现的多层感知神经网络，通过反向传播算法进行训练.")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/ThePaw/probab",target:"_blank",rel:"noopener noreferrer"}},[r._v("probab"),t("OutboundLink")],1),r._v(" -概率分布函数、贝叶斯推理。使用纯 Go 语言编写")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/muesli/reGommend",target:"_blank",rel:"noopener noreferrer"}},[r._v("reGommend"),t("OutboundLink")],1),r._v(" - 推荐系统及协同过滤引擎")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/eaigner/shield",target:"_blank",rel:"noopener noreferrer"}},[r._v("shield"),t("OutboundLink")],1),r._v(" - 贝叶斯文吧分类器，包含灵活的分词器和存储后端")])])])])]),t("div",{staticClass:"masonry-card"},[t("div",{staticClass:"masonry-card-box"},[t("div",{staticClass:"masonry-card-content"},[t("div",{staticClass:"title"},[r._v("消息")]),t("p",[t("em",[r._v("实现了消息系统的库")])]),r._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://github.com/centrifugal/centrifuGo",target:"_blank",rel:"noopener noreferrer"}},[r._v("CentrifuGo"),t("OutboundLink")],1),r._v(" - 实时消息服务器")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/Godbus/dbus",target:"_blank",rel:"noopener noreferrer"}},[r._v("dbus"),t("OutboundLink")],1),r._v(" - D-Bus的 Go 语言接口")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/appleboy/drone-line",target:"_blank",rel:"noopener noreferrer"}},[r._v("drone-line"),t("OutboundLink")],1),r._v(" - 通过软件包，docker 或是 Drone CI来发送 "),t("a",{attrs:{href:"https://business.line.me/en/services/bot",target:"_blank",rel:"noopener noreferrer"}},[r._v("Line"),t("OutboundLink")],1),r._v(" 通知")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/olebedev/emitter",target:"_blank",rel:"noopener noreferrer"}},[r._v("emitter"),t("OutboundLink")],1),r._v(" - 通过Go语言的方式发送事件消息，可以使用通配符，断言，取消发送等优秀特性")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/asaskevich/EventBus",target:"_blank",rel:"noopener noreferrer"}},[r._v("EventBus"),t("OutboundLink")],1),r._v(" - 轻量级事件库，支持异步")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/osaminGo/gaurun-client",target:"_blank",rel:"noopener noreferrer"}},[r._v("gaurun-client"),t("OutboundLink")],1),r._v(" - Go 语言编写的 Gaurun 客户端")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/desertbit/glue",target:"_blank",rel:"noopener noreferrer"}},[r._v("Glue"),t("OutboundLink")],1),r._v(" - 健壮的 Go 和 Javascript Socket 库 (可以用来替代 Socket.io).")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/ventu-io/Go-longpoll",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-longpoll"),t("OutboundLink")],1),r._v(" -  支持长轮询的发布与订阅")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/TheCreeper/Go-notify",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-notify"),t("OutboundLink")],1),r._v(" - 原生实现的桌面通知规范")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/nsqio/Go-nsq",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-nsq"),t("OutboundLink")],1),r._v(" - NSQ 官方 Go 语言库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/GooGollee/Go-socket.io",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-socket.io"),t("OutboundLink")],1),r._v(" - Go 语言的 socket.io库 ,一个实时应用框架.")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/maxatome/Go-vitotrol",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-vitotrol"),t("OutboundLink")],1),r._v(" - Viessmann Vitotrol 服务的 Go 语言客户端")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/trivaGo/Gollum",target:"_blank",rel:"noopener noreferrer"}},[r._v("Gollum"),t("OutboundLink")],1),r._v(" - 一个 n:m 的多路复用器，从不同的源汇聚消息并向目标进行广播")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/jcuga/Golongpoll",target:"_blank",rel:"noopener noreferrer"}},[r._v("Golongpoll"),t("OutboundLink")],1),r._v(" - HTTP 长轮询服务器库，让 web 发布与订阅变的更简单.")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/ian-kent/Goose",target:"_blank",rel:"noopener noreferrer"}},[r._v("Goose"),t("OutboundLink")],1),r._v(" - Go 语言实现的服务器端事件发送")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/Terry-Mao/Gopush-cluster",target:"_blank",rel:"noopener noreferrer"}},[r._v("Gopush-cluster"),t("OutboundLink")],1),r._v(" - Gopush-cluster 是一个 Go 语言实现的支持集群的comet服务（支持 websocket，和tcp协议）")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/appleboy/Gorush",target:"_blank",rel:"noopener noreferrer"}},[r._v("Gorush"),t("OutboundLink")],1),r._v(" - 通知推送服务器，使用 "),t("a",{attrs:{href:"https://github.com/sideshow/apns2",target:"_blank",rel:"noopener noreferrer"}},[r._v("APNs2"),t("OutboundLink")],1),r._v(" 和 Google "),t("a",{attrs:{href:"https://github.com/Google/Go-gcm",target:"_blank",rel:"noopener noreferrer"}},[r._v("GCM"),t("OutboundLink")],1),r._v(".")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/smancke/guble",target:"_blank",rel:"noopener noreferrer"}},[r._v("guble"),t("OutboundLink")],1),r._v(" - 一个使用通知推送(Google Firebase Cloud Messaging, Apple Push Notification services, SMS)、websockets 、REST API 的消息服务器。提供了分布式操作和消息持久化特性")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/RichardKnop/machinery",target:"_blank",rel:"noopener noreferrer"}},[r._v("machinery"),t("OutboundLink")],1),r._v(" - 异步任务队列，基于分布式消息处理")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/Go-manGos/manGos",target:"_blank",rel:"noopener noreferrer"}},[r._v("manGos"),t("OutboundLink")],1),r._v(' - 纯 Go 语言实现的 Nanomsg ("Scalable Protocols")')]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/olahol/melody",target:"_blank",rel:"noopener noreferrer"}},[r._v("melody"),t("OutboundLink")],1),r._v(" - 用于处理 websocket 会话的一个极简框架，包括广播和自动 ping/pong 处理")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/nats-io/nats",target:"_blank",rel:"noopener noreferrer"}},[r._v("NATS Go Client"),t("OutboundLink")],1),r._v(" - 轻量级高性能发布订阅(publish-subscribe) 以及分布式消息队列系统，这个一个Go语言库.")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/rafaeljesus/nsq-event-bus",target:"_blank",rel:"noopener noreferrer"}},[r._v("nsq-event-bus"),t("OutboundLink")],1),r._v(" - 针对 NSQ 的主题和频道进行了简单的封装")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/dailymotion/oplog",target:"_blank",rel:"noopener noreferrer"}},[r._v("oplog"),t("OutboundLink")],1),r._v(" - 原生的 oplog/replication 系统，用于 REST APIs")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/tuxychandru/pubsub",target:"_blank",rel:"noopener noreferrer"}},[r._v("pubsub"),t("OutboundLink")],1),r._v(" - 一个简单的 pubsub 软件包")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/sybrexsys/RapidMQ",target:"_blank",rel:"noopener noreferrer"}},[r._v("RapidMQ"),t("OutboundLink")],1),r._v(" - RapidMQ 是一个轻量级，可靠的本地消息队列管理库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/Shopify/sarama",target:"_blank",rel:"noopener noreferrer"}},[r._v("sarama"),t("OutboundLink")],1),r._v(" - 用于 Apache Kafka 的库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/uniqush/uniqush-push",target:"_blank",rel:"noopener noreferrer"}},[r._v("Uniqush-Push"),t("OutboundLink")],1),r._v(" - 基于 Redis 的统一推服务，用于服务器端向移动客户端推送消息")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/pebbe/zmq4",target:"_blank",rel:"noopener noreferrer"}},[r._v("zmq4"),t("OutboundLink")],1),r._v(" - ZeroMQ version 4的 GO 语言接口。也有适用于"),t("a",{attrs:{href:"https://github.com/pebbe/zmq3",target:"_blank",rel:"noopener noreferrer"}},[r._v("version 3"),t("OutboundLink")],1),r._v(" 及 "),t("a",{attrs:{href:"https://github.com/pebbe/zmq2",target:"_blank",rel:"noopener noreferrer"}},[r._v("version 2"),t("OutboundLink")],1),r._v("的")])])])])]),t("div",{staticClass:"masonry-card"},[t("div",{staticClass:"masonry-card-box"},[t("div",{staticClass:"masonry-card-content"},[t("div",{staticClass:"title"},[r._v("杂项")]),t("p",[t("em",[r._v("一些暂时无法归类的库")])]),r._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://github.com/magic003/alice",target:"_blank",rel:"noopener noreferrer"}},[r._v("alice"),t("OutboundLink")],1),r._v(" -  GO 语言依赖注入容器")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/mholt/archiver",target:"_blank",rel:"noopener noreferrer"}},[r._v("archiver"),t("OutboundLink")],1),r._v(" - 用于制作和解压 .zip 和 .tar.gz 文件的库和命令")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/artyom/autoflags",target:"_blank",rel:"noopener noreferrer"}},[r._v("autoflags"),t("OutboundLink")],1),r._v(" - 通过结构体自动定义命令行标记的go语言软件包")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/kirillDanshin/avgRating",target:"_blank",rel:"noopener noreferrer"}},[r._v("avgRating"),t("OutboundLink")],1),r._v(" - 利用 Wilson Score 方程计算平均分及评级")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/dimiro1/banner",target:"_blank",rel:"noopener noreferrer"}},[r._v("banner"),t("OutboundLink")],1),r._v(" - 在你的go语言应用中添加炫酷的横幅")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/distatus/battery",target:"_blank",rel:"noopener noreferrer"}},[r._v("battery"),t("OutboundLink")],1),r._v(" - 跨平台电源信息库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/icza/bitio",target:"_blank",rel:"noopener noreferrer"}},[r._v("bitio"),t("OutboundLink")],1),r._v(" - 高度优化的比特级读写")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/digitalcrab/browscap_Go",target:"_blank",rel:"noopener noreferrer"}},[r._v("browscap_Go"),t("OutboundLink")],1),r._v(" - "),t("a",{attrs:{href:"http://browscap.org/",target:"_blank",rel:"noopener noreferrer"}},[r._v("Browser Capabilities Project"),t("OutboundLink")],1),r._v("的 GO 语言库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/cstockton/Go-conv",target:"_blank",rel:"noopener noreferrer"}},[r._v("conv"),t("OutboundLink")],1),r._v(" - conv 提供了一种快速且符合直觉的 GO 语言类型转换")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/miolini/datacounter",target:"_blank",rel:"noopener noreferrer"}},[r._v("datacounter"),t("OutboundLink")],1),r._v(" - Greaders/writer/HTTP.ResponseWriter 计数器")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/pkg/errors",target:"_blank",rel:"noopener noreferrer"}},[r._v("errors"),t("OutboundLink")],1),r._v(" - 提供简单的错误处理")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/Go-chat-bot/bot",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-chat-bot"),t("OutboundLink")],1),r._v(" - IRC、Slack、Telegram 聊天机器人")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/jolestar/Go-commons-pool",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-commons-pool"),t("OutboundLink")],1),r._v(" - 通用对象池")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/hashicorp/Go-multierror",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-multierror"),t("OutboundLink")],1),r._v(" - 这个 Go 语言库用于将一系列的错误作为一个整体来显示")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/Go-openapi",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-openapi"),t("OutboundLink")],1),r._v(" - 一些用于处理和利用 open-api 的库集合")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/eapache/Go-resiliency",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-resiliency"),t("OutboundLink")],1),r._v(" - GO 语言弹性模式")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/oklahomer/Go-sarah",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-sarah"),t("OutboundLink")],1),r._v(" - 用于构建聊天机器人的框架，支持 LINE, Slack, Gitter等等")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/ventu-io/Go-shortid",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-shortid"),t("OutboundLink")],1),r._v(" - 超短的、唯一的、非序列的、对 url 友好的 id")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/gen2brain/Go-unarr",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-unarr"),t("OutboundLink")],1),r._v(" - 解压缩库，可用于 RAR, TAR, ZIP 以及 7z 归档文件.")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/satori/Go.uuid",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go.uuid"),t("OutboundLink")],1),r._v(" - 全球唯一标示符的实现(UUID)，同时支持生成和解析")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/brianvoe/Gofakeit",target:"_blank",rel:"noopener noreferrer"}},[r._v("Gofakeit"),t("OutboundLink")],1),r._v(" - Go 语言编写的随机数据生成器")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/jakehl/Goid",target:"_blank",rel:"noopener noreferrer"}},[r._v("Goid"),t("OutboundLink")],1),r._v(" - 生成和解析符合 RFC4122 规定的 V4 UUIDs.")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/shirou/Gopsutil",target:"_blank",rel:"noopener noreferrer"}},[r._v("Gopsutil"),t("OutboundLink")],1),r._v(" - 用于获取进程和系统资源利用率（cpu，内存，磁盘）的库，跨平台")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/haxpax/Gosms",target:"_blank",rel:"noopener noreferrer"}},[r._v("Gosms"),t("OutboundLink")],1),r._v(" - 你本地的SMS 网关，可以用来发送 SMS")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/pariz/Gountries",target:"_blank",rel:"noopener noreferrer"}},[r._v("Gountries"),t("OutboundLink")],1),r._v(" - 一个用来展示国家及其行政区划数据的库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/sbstjn/hanu",target:"_blank",rel:"noopener noreferrer"}},[r._v("hanu"),t("OutboundLink")],1),r._v(" - 用于编写 Slack 聊天机器人的库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/dimiro1/health",target:"_blank",rel:"noopener noreferrer"}},[r._v("health"),t("OutboundLink")],1),r._v(" - 简单易用、可扩展的健康检查库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/osaminGo/indiGo",target:"_blank",rel:"noopener noreferrer"}},[r._v("indiGo"),t("OutboundLink")],1),r._v(" - 唯一id生成器，使用 Sonyflake 并通过Base58进行编码")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/albrow/jobs",target:"_blank",rel:"noopener noreferrer"}},[r._v("jobs"),t("OutboundLink")],1),r._v(" - 持久化且灵活的后台任务库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/zhulik/margelet",target:"_blank",rel:"noopener noreferrer"}},[r._v("margelet"),t("OutboundLink")],1),r._v(" - 用于创建 Telegram 聊天机器人的库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/xor-gate/secdl",target:"_blank",rel:"noopener noreferrer"}},[r._v("secdl"),t("OutboundLink")],1),r._v(" - Lighttpd ModSecDownload alGorithm ported to Go to secure download urls.")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/shomali11/slacker",target:"_blank",rel:"noopener noreferrer"}},[r._v("slacker"),t("OutboundLink")],1),r._v(" - 用于编写 Slack 聊天机器人的库，非常易用")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/Go-playground/stats",target:"_blank",rel:"noopener noreferrer"}},[r._v("stats"),t("OutboundLink")],1),r._v(" - 监控 Go 内存状态及系统状态，通过UDP将数据发送到任何地方")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/agext/uuid",target:"_blank",rel:"noopener noreferrer"}},[r._v("uuid"),t("OutboundLink")],1),r._v(" - 生成，编解码 UUIDs v1 ，具有快速的或或密钥级随机节点标识")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/azr/generators/tree/master/varhandler",target:"_blank",rel:"noopener noreferrer"}},[r._v("VarHandler"),t("OutboundLink")],1),r._v(" - Generate boilerplate HTTP input and ouput handling.")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/txgruppi/werr",target:"_blank",rel:"noopener noreferrer"}},[r._v("werr"),t("OutboundLink")],1),r._v(" - Error Wrapper creates an wrapper for the error type in Go which captures the File, Line and Stack of where it was called.")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/Go-xkg/xkg",target:"_blank",rel:"noopener noreferrer"}},[r._v("xkg"),t("OutboundLink")],1),r._v(" - X Keyboard Grabber")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/huandu/xstrings",target:"_blank",rel:"noopener noreferrer"}},[r._v("xstrings"),t("OutboundLink")],1),r._v(" - 一些有用的字符串函数的集合")])])])])]),t("div",{staticClass:"masonry-card"},[t("div",{staticClass:"masonry-card-box"},[t("div",{staticClass:"masonry-card-content"},[t("div",{staticClass:"title"},[r._v("自然语言处理")]),t("p",[t("em",[r._v("用于处理人类语言的库")])]),r._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://github.com/danieldk/dpar/",target:"_blank",rel:"noopener noreferrer"}},[r._v("dpar"),t("OutboundLink")],1),r._v(" - 基于变换的统计依赖关系解析器")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/ThePaw/Go-eco",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-eco"),t("OutboundLink")],1),r._v(" - 相似性，相异性及距离度量；差异性，均匀度和不均匀度测量；物种多样性估计；群落线模型")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/nicksnyder/Go-i18n/",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-i18n"),t("OutboundLink")],1),r._v(" - 软件包及相关工具，用于处理本地化文本")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/dveselov/mystem",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-mystem"),t("OutboundLink")],1),r._v(" - Yandex.Mystem 的  CGo 接口， Yandex.Mystem 是一个俄语词汇形态学分析器")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/nuance/Go-nlp",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-nlp"),t("OutboundLink")],1),r._v(" - 在进行自然语言工作时用于处理离散概率分布一些工具，以及其他的一些有用的工具")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/aGonopol/Go-stem",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-stem"),t("OutboundLink")],1),r._v(" - 波特词干算法的一个实现")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/mozillazg/Go-unidecode",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-unidecode"),t("OutboundLink")],1),r._v(" - Unicode 文本音译为 ASCII 文本")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/danieldk/Go2vec",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go2vec"),t("OutboundLink")],1),r._v(" - 利用 Go 语言读取和处理 word2vec")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/yanyiwu/Gojieba",target:"_blank",rel:"noopener noreferrer"}},[r._v("Gojieba"),t("OutboundLink")],1),r._v(" - 结巴分词的 Go 语言实现的 "),t("a",{attrs:{href:"https://github.com/fxsjy/jieba",target:"_blank",rel:"noopener noreferrer"}},[r._v("jieba"),t("OutboundLink")],1),r._v(" ，结巴分词是一个用于中文的分词算法")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/rjohnsondev/Golibstemmer",target:"_blank",rel:"noopener noreferrer"}},[r._v("Golibstemmer"),t("OutboundLink")],1),r._v(" -  snowball libstemmer 库的 Go 语言接口，包括了对 porter 2 的支持")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/fiam/Gounidecode",target:"_blank",rel:"noopener noreferrer"}},[r._v("Gounidecode"),t("OutboundLink")],1),r._v(" - Go 语言的 Unicode 直译器 (通常称之为 unidecode)")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/Goodsign/icu",target:"_blank",rel:"noopener noreferrer"}},[r._v("icu"),t("OutboundLink")],1),r._v(" - icu4c C 库的 CGo 接口，包括了检测和转换函数。保证了 version 50.1 版本的兼容性")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/Goodsign/libtextcat",target:"_blank",rel:"noopener noreferrer"}},[r._v("libtextcat"),t("OutboundLink")],1),r._v(" - libtextcat C 库的 CGo 接口。保证了version 2.2 版本的兼容性")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/awsong/MMSEGo",target:"_blank",rel:"noopener noreferrer"}},[r._v("MMSEGo"),t("OutboundLink")],1),r._v(" -  Go 语言实现的 "),t("a",{attrs:{href:"http://technology.chtsai.org/mmseg/",target:"_blank",rel:"noopener noreferrer"}},[r._v("MMSEG"),t("OutboundLink")],1),r._v(" （一个中文分词算法）")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/Shixzie/nlp",target:"_blank",rel:"noopener noreferrer"}},[r._v("nlp"),t("OutboundLink")],1),r._v(" - 从字符串中提取特定的值并填充结构体")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/rookii/paicehusk",target:"_blank",rel:"noopener noreferrer"}},[r._v("paicehusk"),t("OutboundLink")],1),r._v(" - Go 语言实现的  Paice/Husk 词干算法")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/a2800276/porter",target:"_blank",rel:"noopener noreferrer"}},[r._v("porter"),t("OutboundLink")],1),r._v(" - Martin Porter 实现的 C 语言版本的 Porter 词干算法的 Go 语言接口，非常直观")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/zhenjl/porter2",target:"_blank",rel:"noopener noreferrer"}},[r._v("porter2"),t("OutboundLink")],1),r._v(" - 非常快速的 Porter 2 stemmer.")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/jdkato/prose",target:"_blank",rel:"noopener noreferrer"}},[r._v("prose"),t("OutboundLink")],1),r._v(" - 文本处理库，支持词语切分、词性标记、命名实体提取等功能")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/Obaied/RAKE.Go",target:"_blank",rel:"noopener noreferrer"}},[r._v("RAKE.Go"),t("OutboundLink")],1),r._v(" -  快速自动关键字提取算法(Rapid Automatic Keyword Extraction：RAKE)的 Go 语言接口")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/blevesearch/segment",target:"_blank",rel:"noopener noreferrer"}},[r._v("segment"),t("OutboundLink")],1),r._v(" - 一个用于进行 Unicode 文本分割的库，实现了 "),t("a",{attrs:{href:"http://www.unicode.org/reports/tr29/",target:"_blank",rel:"noopener noreferrer"}},[r._v("Unicode Standard Annex #29"),t("OutboundLink")],1),r._v("中描述的功能")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/neurosnap/sentences",target:"_blank",rel:"noopener noreferrer"}},[r._v("sentences"),t("OutboundLink")],1),r._v(" - 语句标记器：将文字段落转换为语句列表")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/osaminGo/shamoji",target:"_blank",rel:"noopener noreferrer"}},[r._v("shamoji"),t("OutboundLink")],1),r._v(" -  shamoji 是一个Go语言编写的词过滤软件包")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/Goodsign/snowball",target:"_blank",rel:"noopener noreferrer"}},[r._v("snowball"),t("OutboundLink")],1),r._v(" - Snowball 分词器的Go语言接口，提供了分词提取的功能 "),t("a",{attrs:{href:"http://snowball.tartarus.org/",target:"_blank",rel:"noopener noreferrer"}},[r._v("Snowball native"),t("OutboundLink")],1),r._v(".")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/dchest/stemmer",target:"_blank",rel:"noopener noreferrer"}},[r._v("stemmer"),t("OutboundLink")],1),r._v(" -  Go 语言分词器软件包，包括了英语和德语分词器")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/pebbe/textcat",target:"_blank",rel:"noopener noreferrer"}},[r._v("textcat"),t("OutboundLink")],1),r._v(" - 基于 n-gram 的 Go 语言文本分类软件包，支持utf-8 和 raw 文本")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/abadojack/whatlangGo",target:"_blank",rel:"noopener noreferrer"}},[r._v("whatlangGo"),t("OutboundLink")],1),r._v(" - Go 语言的自然语言检测包。支持84种语言和24种书写 (如拉丁，西里尔等书写系统)。")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/olebedev/when",target:"_blank",rel:"noopener noreferrer"}},[r._v("when"),t("OutboundLink")],1),r._v(" - 英语、俄语的自然语言日期、时间表达解析器，可以插入规则")])])])])]),t("div",{staticClass:"masonry-card"},[t("div",{staticClass:"masonry-card-box"},[t("div",{staticClass:"masonry-card-content"},[t("div",{staticClass:"title"},[r._v("网络")]),t("p",[t("em",[r._v("用于在不同网络层工作的库")])]),r._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://github.com/mdlayher/arp",target:"_blank",rel:"noopener noreferrer"}},[r._v("arp"),t("OutboundLink")],1),r._v(" - 实现了 ARP 协议，遵循 RFC 826.")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/stabbycutyou/buffstreams",target:"_blank",rel:"noopener noreferrer"}},[r._v("buffstreams"),t("OutboundLink")],1),r._v(" - 简单易用的 protocolbuffer 数据流，基于 TCP")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/zubairhamed/canopus",target:"_blank",rel:"noopener noreferrer"}},[r._v("canopus"),t("OutboundLink")],1),r._v(" - CoAP 客户端/服务器实现 (RFC 7252)")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/mdlayher/dhcp6",target:"_blank",rel:"noopener noreferrer"}},[r._v("dhcp6"),t("OutboundLink")],1),r._v(" - dhcp6 实现了一个DHCPv6 服务器，遵循RFC 3315.")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/miekg/dns",target:"_blank",rel:"noopener noreferrer"}},[r._v("dns"),t("OutboundLink")],1),r._v(" - 用于处理 DNS 的 Go 语言库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/songgao/ether",target:"_blank",rel:"noopener noreferrer"}},[r._v("ether"),t("OutboundLink")],1),r._v(" - 跨平台 Go 语言库，用于发送和接收以太帧")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/mdlayher/ethernet",target:"_blank",rel:"noopener noreferrer"}},[r._v("ethernet"),t("OutboundLink")],1),r._v(" - ethernet 实现了IEEE 802.3 Ethernet II 帧以及IEEE 802.1Q VLAN 标签的组装和剥离.")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/valyala/fasthttp",target:"_blank",rel:"noopener noreferrer"}},[r._v("fasthttp"),t("OutboundLink")],1),r._v(" - fasthttp 是一个快速的 HTTP 实现，是 net/http的10倍性能")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/jlaffaye/ftp",target:"_blank",rel:"noopener noreferrer"}},[r._v("ftp"),t("OutboundLink")],1),r._v(" - ftp 实现了一个 FTP 客户端，遵循 "),t("a",{attrs:{href:"http://tools.ietf.org/html/rfc959",target:"_blank",rel:"noopener noreferrer"}},[r._v("RFC 959"),t("OutboundLink")],1),r._v(".")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/Allenxuxu/gev",target:"_blank",rel:"noopener noreferrer"}},[r._v("gev"),t("OutboundLink")],1),r._v(" - 一个轻量、比标准库更快的基于 Reactor 模式的非阻塞 TCP 网络库，支持自定义协议，轻松快速搭建高性能服务器。")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/hashicorp/Go-getter",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-getter"),t("OutboundLink")],1),r._v(" - 一个用于通过 URL 从多种源下载文件或目录的 Go 语言库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/ccding/Go-stun",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-stun"),t("OutboundLink")],1),r._v(" - Go 语言实现的 STUN 客户端 (RFC 3489 及 RFC 5389).")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/osrg/Gobgp",target:"_blank",rel:"noopener noreferrer"}},[r._v("Gobgp"),t("OutboundLink")],1),r._v(" - Go 语言实现的BGP")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/sunwxg/Golibwireshark",target:"_blank",rel:"noopener noreferrer"}},[r._v("Golibwireshark"),t("OutboundLink")],1),r._v(" - Golibwireshark 使用 libwireshark 库来解析 pcap 文件并且分析数据")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/Google/Gopacket",target:"_blank",rel:"noopener noreferrer"}},[r._v("Gopacket"),t("OutboundLink")],1),r._v(" - 用于报文处理的库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/akrennmair/Gopcap",target:"_blank",rel:"noopener noreferrer"}},[r._v("Gopcap"),t("OutboundLink")],1),r._v(" - libpcap的 Go 语言封装")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/sunwxg/Goshark",target:"_blank",rel:"noopener noreferrer"}},[r._v("Goshark"),t("OutboundLink")],1),r._v(" - Goshark 使用 tshark 来对 IP 报文进行解码并创建数据结构用于分析报文")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/soniah/Gosnmp",target:"_blank",rel:"noopener noreferrer"}},[r._v("Gosnmp"),t("OutboundLink")],1),r._v(" -用于执行 SNMP 操作的库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/gansidui/Gotcp",target:"_blank",rel:"noopener noreferrer"}},[r._v("Gotcp"),t("OutboundLink")],1),r._v(" - 用于快速编写 tcp 应用的库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/cavaliercoder/grab",target:"_blank",rel:"noopener noreferrer"}},[r._v("grab"),t("OutboundLink")],1),r._v(" - 管理文件下载的 Go 语言库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/koofr/graval",target:"_blank",rel:"noopener noreferrer"}},[r._v("graval"),t("OutboundLink")],1),r._v(" - 试验性的 FTP 服务器框架")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/udhos/jaziGo",target:"_blank",rel:"noopener noreferrer"}},[r._v("jaziGo"),t("OutboundLink")],1),r._v(" - JaziGo 是一个 Go 语言编写的工具，用于获取多种网络设备的配置.")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/xtaci/kcp-Go",target:"_blank",rel:"noopener noreferrer"}},[r._v("kcp-Go"),t("OutboundLink")],1),r._v(" - KCP - 快速可靠的 ARQ 协议.")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/xtaci/kcptun",target:"_blank",rel:"noopener noreferrer"}},[r._v("kcptun"),t("OutboundLink")],1),r._v(" - 超级简单、快速的 udp 通道，基于KCP 协议")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/fanux/lhttp",target:"_blank",rel:"noopener noreferrer"}},[r._v("lhttp"),t("OutboundLink")],1),r._v(" - 强大的 websocket 框架，可以更简单的构建你自己的 IM 服务器*")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/ian-kent/linkio",target:"_blank",rel:"noopener noreferrer"}},[r._v("linkio"),t("OutboundLink")],1),r._v(" - 接口读写速度模拟器")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/kirillDanshin/llb",target:"_blank",rel:"noopener noreferrer"}},[r._v("llb"),t("OutboundLink")],1),r._v(" - 一个非常简单但快速的后端代理服务器。对于快速重定向到预定义域名很有用，无内存分配，响应速度快")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/hashicorp/mdns",target:"_blank",rel:"noopener noreferrer"}},[r._v("mdns"),t("OutboundLink")],1),r._v(" - 简单的 mDNS (组播 DNS) 客户端/服务器库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://eclipse.org/paho/clients/Golang/",target:"_blank",rel:"noopener noreferrer"}},[r._v("mqttPaho"),t("OutboundLink")],1),r._v(" - Paho 客户端提供了一个 MQTT 客户端库，用于通过TCP, TLS 或 WebSockets 和 MQTT broker 建立连接")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/aybabtme/portproxy",target:"_blank",rel:"noopener noreferrer"}},[r._v("portproxy"),t("OutboundLink")],1),r._v(" - 简单的 TCP 代理，加入了对CORS 的支持")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/polera/publicip",target:"_blank",rel:"noopener noreferrer"}},[r._v("publicip"),t("OutboundLink")],1),r._v(" - publicip 库会返回你的公网 ip 地址 (互联网出口).")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/mdlayher/raw",target:"_blank",rel:"noopener noreferrer"}},[r._v("raw"),t("OutboundLink")],1),r._v(" - raw 允许你在设备驱动层读写网络接口的数据")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/pkg/sftp",target:"_blank",rel:"noopener noreferrer"}},[r._v("sftp"),t("OutboundLink")],1),r._v(" - sftp 实现了https://filezilla-project.org/specs/draft-ietf-secsh-filexfer-02.txt.中描述的 SSH 文件传输协议")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/gliderlabs/ssh",target:"_blank",rel:"noopener noreferrer"}},[r._v("ssh"),t("OutboundLink")],1),r._v(" - 用于创建 SSH 服务器的高级 API (封装crypto/ssh).")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/eduardonunesp/sslb",target:"_blank",rel:"noopener noreferrer"}},[r._v("sslb"),t("OutboundLink")],1),r._v(" - 一个超简单的负载均衡库，仅仅是一个为了获取一些性能目标的小项目")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/firstrow/tcp_server",target:"_blank",rel:"noopener noreferrer"}},[r._v("tcp_server"),t("OutboundLink")],1),r._v(" - 一个用于快速创建 tcp 服务器的库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/anacrolix/utp",target:"_blank",rel:"noopener noreferrer"}},[r._v("utp"),t("OutboundLink")],1),r._v(" - Go uTP 微传输协议的实现")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/songgao/water",target:"_blank",rel:"noopener noreferrer"}},[r._v("water"),t("OutboundLink")],1),r._v(" - 简单的 TUN/TAP 库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/masterzen/winrm",target:"_blank",rel:"noopener noreferrer"}},[r._v("winrm"),t("OutboundLink")],1),r._v(" - Go WinRM 客户端，用于在 Windows 设备上远程执行命令")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/xfxdev/xtcp",target:"_blank",rel:"noopener noreferrer"}},[r._v("xtcp"),t("OutboundLink")],1),r._v(" - TCP 服务器框架，支持同时全双工通信。可以优雅的关闭，自定义协议")])])])])]),t("div",{staticClass:"masonry-card"},[t("div",{staticClass:"masonry-card-box"},[t("div",{staticClass:"masonry-card-content"},[t("div",{staticClass:"title"},[r._v("OpenGL")]),t("p",[t("em",[r._v("用于操作OpenGL的库.")])]),r._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://github.com/Go-gl/gl",target:"_blank",rel:"noopener noreferrer"}},[r._v("gl"),t("OutboundLink")],1),r._v(" - OpenGL的 Go 语言接口")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/Go-gl/glfw",target:"_blank",rel:"noopener noreferrer"}},[r._v("glfw"),t("OutboundLink")],1),r._v(" - GLFW 3 的 Go 语言接口")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/Goxjs/gl",target:"_blank",rel:"noopener noreferrer"}},[r._v("Goxjs/gl"),t("OutboundLink")],1),r._v(" - Go 语言跨平台 OpenGL 接口(OS X, Linux, Windows, browsers, iOS, Android).")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/Goxjs/glfw",target:"_blank",rel:"noopener noreferrer"}},[r._v("Goxjs/glfw"),t("OutboundLink")],1),r._v(" - Go 语言跨平台 glfw 库，用于创建 OpenGL 上下文并接收事件")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/Go-gl/mathgl",target:"_blank",rel:"noopener noreferrer"}},[r._v("mathgl"),t("OutboundLink")],1),r._v(" - Go 语言 3D 数学库，专注于3D，受到 GLM 启发")])])])])]),t("div",{staticClass:"masonry-card"},[t("div",{staticClass:"masonry-card-box"},[t("div",{staticClass:"masonry-card-content"},[t("div",{staticClass:"title"},[r._v("ORM")]),t("p",[t("em",[r._v("实现对象关系映射或数据映射技术的库")])]),r._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://github.com/astaxie/beeGo/tree/master/orm",target:"_blank",rel:"noopener noreferrer"}},[r._v("beeGo orm"),t("OutboundLink")],1),r._v(" - 一个强大的 Go 语言 orm 框架，支持 pq/mysql/sqlite3.")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/Go-pg/pg",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-pg"),t("OutboundLink")],1),r._v(" - PostgreSQL ORM ，专注PostgreSQL 特定功能及性能")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/Gosuri/Go-store",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-store"),t("OutboundLink")],1),r._v(" - 简单快速的基于Redis 的键值对存储库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/cosiner/Gomodel",target:"_blank",rel:"noopener noreferrer"}},[r._v("Gomodel"),t("OutboundLink")],1),r._v(" - 轻量级、快速的、类 orm 库，帮助你和数据库进行交互")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/jinzhu/Gorm",target:"_blank",rel:"noopener noreferrer"}},[r._v("GoRM"),t("OutboundLink")],1),r._v(" - 超棒的 Go 语言 ORM 库，对开发者非常友好")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/Go-Gorp/Gorp",target:"_blank",rel:"noopener noreferrer"}},[r._v("Gorp"),t("OutboundLink")],1),r._v(" - 关系持久的、类 orm 的 Go 语言库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/markbates/pop",target:"_blank",rel:"noopener noreferrer"}},[r._v("pop/soda"),t("OutboundLink")],1),r._v(" - 数据库迁移、创建、ORM 等等，支持 MySQL, PostgreSQL, 以及 SQLite.")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/coocood/qbs",target:"_blank",rel:"noopener noreferrer"}},[r._v("QBS"),t("OutboundLink")],1),r._v(" - 利用结构体进行标准查询，是一个 Go 语言 ORM")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/Go-reform/reform",target:"_blank",rel:"noopener noreferrer"}},[r._v("reform"),t("OutboundLink")],1),r._v(" - 一个更优秀的 ORM，基于非空接口和代码生成")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/volatiletech/sqlboiler",target:"_blank",rel:"noopener noreferrer"}},[r._v("SQLBoiler"),t("OutboundLink")],1),r._v(" - ORM 生成器。为你的数据库表单生成一个功能全面、快速的 ORM")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/upper/db",target:"_blank",rel:"noopener noreferrer"}},[r._v("upper.io/db"),t("OutboundLink")],1),r._v(" - 通过使用封装了成熟的数据库驱动的适配器，来使用单一接口与不同的数据源进行交互")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/Go-xorm/xorm",target:"_blank",rel:"noopener noreferrer"}},[r._v("Xorm"),t("OutboundLink")],1),r._v(" - 简单、强大的 Go 语言 orm")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/albrow/zoom",target:"_blank",rel:"noopener noreferrer"}},[r._v("Zoom"),t("OutboundLink")],1),r._v(" - 超快的数据存储于查询引擎，基于 Redis 构建")])])])])]),t("div",{staticClass:"masonry-card"},[t("div",{staticClass:"masonry-card-box"},[t("div",{staticClass:"masonry-card-content"},[t("div",{staticClass:"title"},[r._v("包管理")]),t("p",[t("em",[r._v("用于进行包和依赖管理的库")])]),r._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://github.com/Golang/dep",target:"_blank",rel:"noopener noreferrer"}},[r._v("dep"),t("OutboundLink")],1),r._v(" - Go 语言依赖工具.")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/LyricalSecurity/giGo",target:"_blank",rel:"noopener noreferrer"}},[r._v("giGo"),t("OutboundLink")],1),r._v(" - 类似 PIP 的依赖管理工具。支持私有仓库和哈希")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/Masterminds/glide",target:"_blank",rel:"noopener noreferrer"}},[r._v("glide"),t("OutboundLink")],1),r._v(" - 轻松管理你的 GO 语言包发布者以及发布包。 受到类似 Maven, Bundler, 和 Pip 这些工具的的启发")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/tools/Godep",target:"_blank",rel:"noopener noreferrer"}},[r._v("Godep"),t("OutboundLink")],1),r._v(" - Go 语言依赖工具，Godep 可以帮助开发者修复库的依赖关系")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/mattn/Gom",target:"_blank",rel:"noopener noreferrer"}},[r._v("Gom"),t("OutboundLink")],1),r._v(" - Go Manager")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/nitrous-io/Goop",target:"_blank",rel:"noopener noreferrer"}},[r._v("Goop"),t("OutboundLink")],1),r._v(" - 简单的依赖管理工具，手到 Bundler 的启发")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/gpmGo/Gopm",target:"_blank",rel:"noopener noreferrer"}},[r._v("Gopm"),t("OutboundLink")],1),r._v(" - Go 包管理器")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/kardianos/Govendor",target:"_blank",rel:"noopener noreferrer"}},[r._v("Govendor"),t("OutboundLink")],1),r._v(" - Go 包管理器。 Go 语言 vendor 工具，兼容标准 vendor 文件")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/pote/gpm",target:"_blank",rel:"noopener noreferrer"}},[r._v("gpm"),t("OutboundLink")],1),r._v(" -  Go 语言包管理工具")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/FiloSottile/gvt",target:"_blank",rel:"noopener noreferrer"}},[r._v("gvt"),t("OutboundLink")],1),r._v(" - "),t("code",[r._v("gvt")]),r._v(" 是一个简单的发布管理工具(aka Go15VENDOREXPERIMENT), 基于 gb-vendor.")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/VividCortex/johnny-deps",target:"_blank",rel:"noopener noreferrer"}},[r._v("johnny-deps"),t("OutboundLink")],1),r._v(" - 极简的依赖版本管理工具，使用 git")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/jingweno/nut",target:"_blank",rel:"noopener noreferrer"}},[r._v("nut"),t("OutboundLink")],1),r._v(" - Go 语言依赖管理")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/DamnWidget/VenGo",target:"_blank",rel:"noopener noreferrer"}},[r._v("VenGo"),t("OutboundLink")],1),r._v(" - 创建并管理可以导出的，隔离的 Go 语言虚拟环境")])])])])]),t("div",{staticClass:"masonry-card"},[t("div",{staticClass:"masonry-card-box"},[t("div",{staticClass:"masonry-card-content"},[t("div",{staticClass:"title"},[r._v("查询语言")]),t("ul",[t("li",[t("a",{attrs:{href:"https://github.com/tmc/graphql",target:"_blank",rel:"noopener noreferrer"}},[r._v("graphql"),t("OutboundLink")],1),r._v(" - graphql 解析器 + 实用工具")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/sevki/graphql",target:"_blank",rel:"noopener noreferrer"}},[r._v("graphql"),t("OutboundLink")],1),r._v(" - Go 语言实现的 GraphQL")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/neelance/graphql-Go",target:"_blank",rel:"noopener noreferrer"}},[r._v("graphql"),t("OutboundLink")],1),r._v(" - 专注于易用性的 GraphQL 服务器")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/graphql-Go/graphql",target:"_blank",rel:"noopener noreferrer"}},[r._v("graphql-Go"),t("OutboundLink")],1),r._v(" - 为 Go 语言实现的 GraphQL")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/elgs/jsonql",target:"_blank",rel:"noopener noreferrer"}},[r._v("jsonql"),t("OutboundLink")],1),r._v(" - JSON 查询表达式库")])])])])]),t("div",{staticClass:"masonry-card"},[t("div",{staticClass:"masonry-card-box"},[t("div",{staticClass:"masonry-card-content"},[t("div",{staticClass:"title"},[r._v("资源嵌入")]),t("ul",[t("li",[t("a",{attrs:{href:"https://github.com/mjibson/esc",target:"_blank",rel:"noopener noreferrer"}},[r._v("esc"),t("OutboundLink")],1),r._v(" - 在 Go 语言程序中嵌入文件并为其提供 HTTP.FileSystem 接口")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/UnnoTed/fileb0x",target:"_blank",rel:"noopener noreferrer"}},[r._v("fileb0x"),t("OutboundLink")],1),r._v(" - 一个用于在 Go 语言程序中嵌入文件的工具，专注于可定制化和易用性")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/jteeuwen/Go-bindata",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-bindata"),t("OutboundLink")],1),r._v(" - 一个用于将文件转换为可管理的 Go 语言代码的工具")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/pyros2097/Go-embed",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-embed"),t("OutboundLink")],1),r._v(" - 生成用于嵌入资源文件到库或可执行文件的 Go 语言代码")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/omeid/Go-resources",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-resources"),t("OutboundLink")],1),r._v(" - 一个简洁的 Go 语言资源嵌入工具")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/GeertJohan/Go.rice",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go.rice"),t("OutboundLink")],1),r._v(" - Go.rice 是一个让你轻松使用 html,js,css,图片以及模板这类资源的库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/Go-playground/statics",target:"_blank",rel:"noopener noreferrer"}},[r._v("statics"),t("OutboundLink")],1),r._v(" - 将静态资源嵌入到 Go 文件中，用于单独二进制编译+使用http.FileSystem + symlinks.")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/rakyll/statik",target:"_blank",rel:"noopener noreferrer"}},[r._v("statik"),t("OutboundLink")],1),r._v(" - 将静态文件嵌入到 Go 语言可执行文件中")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/wlbr/templify",target:"_blank",rel:"noopener noreferrer"}},[r._v("templify"),t("OutboundLink")],1),r._v(" - 将外部目标文件嵌入到 Go 代码中来创建单独的二进制文件")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/shurcooL/vfsgen",target:"_blank",rel:"noopener noreferrer"}},[r._v("vfsgen"),t("OutboundLink")],1),r._v(" - 生成一个 vfsdata.Go 文件，静态实现了一个虚拟文件系统")])])])])]),t("div",{staticClass:"masonry-card"},[t("div",{staticClass:"masonry-card-box"},[t("div",{staticClass:"masonry-card-content"},[t("div",{staticClass:"title"},[r._v("科学及数据分析")]),t("p",[t("em",[r._v("用于科学计算和数据分析的库")])]),r._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://github.com/ziutek/blas",target:"_blank",rel:"noopener noreferrer"}},[r._v("blas"),t("OutboundLink")],1),r._v(" - BLAS (基础线性代数子程序 Linear Algebra Subprograms)的 Go 语言实现")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/vdobler/chart",target:"_blank",rel:"noopener noreferrer"}},[r._v("chart"),t("OutboundLink")],1),r._v(" - 简单的图表绘图库。支持多种图表类型")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/soniah/evaler",target:"_blank",rel:"noopener noreferrer"}},[r._v("evaler"),t("OutboundLink")],1),r._v(" - 简单浮点算数表达式求值器")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/VividCortex/ewma",target:"_blank",rel:"noopener noreferrer"}},[r._v("ewma"),t("OutboundLink")],1),r._v(" - 指数移动加权平均值")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/skelterjohn/geom",target:"_blank",rel:"noopener noreferrer"}},[r._v("geom"),t("OutboundLink")],1),r._v(" - 2D 几何")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/mjibson/Go-dsp",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-dsp"),t("OutboundLink")],1),r._v(" - 数字信号处理")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/ematvey/Go-fn",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-fn"),t("OutboundLink")],1),r._v(" - 一些没有包含在 math pkg 中的数学函数")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/ThePaw/Go-gt",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-gt"),t("OutboundLink")],1),r._v(" - 图论算法")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/skelterjohn/Go.matrix",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go.matrix"),t("OutboundLink")],1),r._v(" - 线性代数")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/varver/Gocomplex",target:"_blank",rel:"noopener noreferrer"}},[r._v("Gocomplex"),t("OutboundLink")],1),r._v(" - 复数库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/anschelsc/Gofrac",target:"_blank",rel:"noopener noreferrer"}},[r._v("Gofrac"),t("OutboundLink")],1),r._v(" - Go 语言分数库，支持基本算术")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/VividCortex/Gohistogram",target:"_blank",rel:"noopener noreferrer"}},[r._v("Gohistogram"),t("OutboundLink")],1),r._v(" - 数据流的近似直方图")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/Gonum/matrix",target:"_blank",rel:"noopener noreferrer"}},[r._v("Gonum/mat64"),t("OutboundLink")],1),r._v(" - 矩阵计算通用包。 mat64 提供了用于进行64位浮点基础线性代数操作的功能")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/Gonum/plot",target:"_blank",rel:"noopener noreferrer"}},[r._v("Gonum/plot"),t("OutboundLink")],1),r._v(" - Gonum/plot 提供了用于创建和绘制图表的 API")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/gyuho/Goraph",target:"_blank",rel:"noopener noreferrer"}},[r._v("Goraph"),t("OutboundLink")],1),r._v(" - 纯 Go 语言编写的图论库（数据结构，算法可视化）")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/ematvey/Gostat",target:"_blank",rel:"noopener noreferrer"}},[r._v("Gostat"),t("OutboundLink")],1),r._v(" - 统计库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/yourbasic/graph",target:"_blank",rel:"noopener noreferrer"}},[r._v("graph"),t("OutboundLink")],1),r._v(" - 包含基础图算法的库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/ChristopherRabotin/ode",target:"_blank",rel:"noopener noreferrer"}},[r._v("ode"),t("OutboundLink")],1),r._v(" - 普通微分方程 (ODE) 求解器。支持扩展状态及基于通道的迭代算法终止条件")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/alixaxel/pagerank",target:"_blank",rel:"noopener noreferrer"}},[r._v("pagerank"),t("OutboundLink")],1),r._v(" - Go 语言实现的加权网页排名（ PageRank）算法")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/clayGod/PiHex",target:"_blank",rel:"noopener noreferrer"}},[r._v("PiHex"),t("OutboundLink")],1),r._v(' - 贝利-波尔温-普劳夫公式（"Bailey-Borwein-Plouffe"）算法的实现，用于计算十六进制π')]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/montanaflynn/stats",target:"_blank",rel:"noopener noreferrer"}},[r._v("stats"),t("OutboundLink")],1),r._v(" - 统计库，包含一些 Go 语言标准库中漏掉的常用函数")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/nytlabs/streamtools",target:"_blank",rel:"noopener noreferrer"}},[r._v("streamtools"),t("OutboundLink")],1),r._v(" - 通用图形化工具，用于处理流数据")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/spate/vectormath",target:"_blank",rel:"noopener noreferrer"}},[r._v("vectormath"),t("OutboundLink")],1),r._v(" - 给 Go 语言用的 Vectormath , 是对索尼的矢量数学库中 C 语言函数的改写,可以在 Bullet-2.79 源码中找到 (当前不活跃)")])])])])]),t("div",{staticClass:"masonry-card"},[t("div",{staticClass:"masonry-card-box"},[t("div",{staticClass:"masonry-card-content"},[t("div",{staticClass:"title"},[r._v("安全")]),t("p",[t("em",[r._v("可以帮助你增强应用程序安全性的库")])]),r._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://github.com/hlandau/acme",target:"_blank",rel:"noopener noreferrer"}},[r._v("acmetool"),t("OutboundLink")],1),r._v(" — ACME (Let's Encrypt) 客户端工具，有自动延长功能.")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/jaredfolkins/badactor",target:"_blank",rel:"noopener noreferrer"}},[r._v("BadActor"),t("OutboundLink")],1),r._v(" - 一个驻留在内存中的，应用驱动的监控程序，受 fail2ban 的启发")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/hillu/Go-yara",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-yara"),t("OutboundLink")],1),r._v(" - "),t("a",{attrs:{href:"https://github.com/plusvic/yara",target:"_blank",rel:"noopener noreferrer"}},[r._v("YARA"),t("OutboundLink")],1),r._v('的 Go 语言接口，号称是 "对于恶意软件研究者（以及其他人）来说是模式匹配的瑞士军刀')]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/xenolf/leGo",target:"_blank",rel:"noopener noreferrer"}},[r._v("leGo"),t("OutboundLink")],1),r._v(" - 纯 Go ACME 客户端库及命令行工具")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/awnumar/memguard",target:"_blank",rel:"noopener noreferrer"}},[r._v("memguard"),t("OutboundLink")],1),r._v(" - 一个用于处理内存中敏感数据的 Go 语言库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/hlandau/passlib",target:"_blank",rel:"noopener noreferrer"}},[r._v("passlib"),t("OutboundLink")],1),r._v(" - 不过时的密码哈希库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/unrolled/secure",target:"_blank",rel:"noopener noreferrer"}},[r._v("secure"),t("OutboundLink")],1),r._v(" - Go 语言 HTTP 中间件，为 Go 提供了一些安全功能")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/elithrar/simple-scrypt",target:"_blank",rel:"noopener noreferrer"}},[r._v("simple-scrypt"),t("OutboundLink")],1),r._v(" - Scrypt 库，具有简单、易懂的 API，同时具有内置的自动校准功能")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/ssh-vault/ssh-vault",target:"_blank",rel:"noopener noreferrer"}},[r._v("ssh-vault"),t("OutboundLink")],1),r._v(" - 利用 ssh 秘钥加解密")])])])])]),t("div",{staticClass:"masonry-card"},[t("div",{staticClass:"masonry-card-box"},[t("div",{staticClass:"masonry-card-content"},[t("div",{staticClass:"title"},[r._v("序列化")]),t("p",[t("em",[r._v("用于进行二进制序列化的库和工具")])]),r._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://github.com/PromonLogicalis/asn1",target:"_blank",rel:"noopener noreferrer"}},[r._v("asn1"),t("OutboundLink")],1),r._v(" - Asn.1 BER 及 DER 编码库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/pascaldekloe/colfer",target:"_blank",rel:"noopener noreferrer"}},[r._v("colfer"),t("OutboundLink")],1),r._v(" - 用于生成 Colfer 二进制格式代码")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/glycerine/Go-capnproto",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-capnproto"),t("OutboundLink")],1),r._v(" - Go 语言用的 Cap'n Proto 库及解析器")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/glycerine/bambam",target:"_blank",rel:"noopener noreferrer"}},[r._v("bambam"),t("OutboundLink")],1),r._v(" - 用于 Go 语言生成 Cap'n Proto schemas 的生成器")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/uGorji/Go",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-codec"),t("OutboundLink")],1),r._v(" - 高性能、多功能、规范化编码解码以及 rpc 库， 用于 msgpack, cbor 和 json，支持基于运行时的 OR 码生成")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/GoGo/protobuf",target:"_blank",rel:"noopener noreferrer"}},[r._v("GoGoprotobuf"),t("OutboundLink")],1),r._v(" - Go 语言的 Protocol Buffer 库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/Golang/protobuf",target:"_blank",rel:"noopener noreferrer"}},[r._v("Goprotobuf"),t("OutboundLink")],1),r._v(" - 通过库和协议编译器插件使 Go 语言支持 Google的 protocol buffers.")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/json-iterator/Go",target:"_blank",rel:"noopener noreferrer"}},[r._v("jsoniter"),t("OutboundLink")],1),r._v(' -高性能，100% 兼容的"encoding/json" 替代品')]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/mitchellh/mapstructure",target:"_blank",rel:"noopener noreferrer"}},[r._v("mapstructure"),t("OutboundLink")],1),r._v(" - 用于对原生键值对进行解码生成 Go 语言结构体")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/yvasiyarov/php_session_decoder",target:"_blank",rel:"noopener noreferrer"}},[r._v("php_session_decoder"),t("OutboundLink")],1),r._v(" - 用于协同 PHP session 格式数据和 PHP 序列化／反序列化函数工作的go语言库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/tuvistavie/structomap",target:"_blank",rel:"noopener noreferrer"}},[r._v("structomap"),t("OutboundLink")],1),r._v(" - 用于从静态结构体简单、动态的生成键值对的库")])])])])]),t("div",{staticClass:"masonry-card"},[t("div",{staticClass:"masonry-card-box"},[t("div",{staticClass:"masonry-card-content"},[t("div",{staticClass:"title"},[r._v("服务器程序")]),t("ul",[t("li",[t("a",{attrs:{href:"https://github.com/xyproto/algernon",target:"_blank",rel:"noopener noreferrer"}},[r._v("algernon"),t("OutboundLink")],1),r._v(" - HTTP/2 web 服务器，支持 Lua、Markdown、GCSS 和 Amber.")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/mholt/caddy",target:"_blank",rel:"noopener noreferrer"}},[r._v("Caddy"),t("OutboundLink")],1),r._v(" - Caddy 是一个备选的 HTTP/2 web 服务器，配置简单，使用方便。")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://www.consul.io/",target:"_blank",rel:"noopener noreferrer"}},[r._v("consul"),t("OutboundLink")],1),r._v(" - Consul 是一个用于服务发现、监控和配置的工具")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/cortesi/devd",target:"_blank",rel:"noopener noreferrer"}},[r._v("devd"),t("OutboundLink")],1),r._v(" - 开发者使用的本地 web 服务器")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/coreos/etcd",target:"_blank",rel:"noopener noreferrer"}},[r._v("etcd"),t("OutboundLink")],1),r._v(" - 高可用性的键值存储，用于分享配置和服务发现")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/minio/minio",target:"_blank",rel:"noopener noreferrer"}},[r._v("minio"),t("OutboundLink")],1),r._v(" - Minio 是一个分布式对象存储服务器")]),r._v(" "),t("li",[t("a",{attrs:{href:"http://nsq.io/",target:"_blank",rel:"noopener noreferrer"}},[r._v("nsq"),t("OutboundLink")],1),r._v(" - 一个实时的分布式消息平台")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/sci4me/yakvs",target:"_blank",rel:"noopener noreferrer"}},[r._v("yakvs"),t("OutboundLink")],1),r._v(" - 小型化、网络化、基于内存的键值存储")])])])])]),t("div",{staticClass:"masonry-card"},[t("div",{staticClass:"masonry-card-box"},[t("div",{staticClass:"masonry-card-content"},[t("div",{staticClass:"title"},[r._v("模板引擎")]),t("p",[t("em",[r._v("模板库及工具")])]),r._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://github.com/yosssi/ace",target:"_blank",rel:"noopener noreferrer"}},[r._v("ace"),t("OutboundLink")],1),r._v(" - Ace 是一个 Go 语言的 HTML 模板引擎，受到了 Slim 和 Jade 的启发。 Ace 是对Gold的一种改进。")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/eknkc/amber",target:"_blank",rel:"noopener noreferrer"}},[r._v("amber"),t("OutboundLink")],1),r._v(" - Amber 是一个优雅的模板引擎，受到 HAML 和 Jade的启发")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/dskinner/damsel",target:"_blank",rel:"noopener noreferrer"}},[r._v("damsel"),t("OutboundLink")],1),r._v(" - 标记语言，通过css选择器实现了 html 框架 ，并可以通过 pkg html/template 等进行扩展")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/benbjohnson/eGo",target:"_blank",rel:"noopener noreferrer"}},[r._v("eGo"),t("OutboundLink")],1),r._v(" - 轻量级模板语言，让你可以使用 Go 语言来创建模板。模板会被转化为 Go 语言并编译")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/valyala/fasttemplate",target:"_blank",rel:"noopener noreferrer"}},[r._v("fasttemplate"),t("OutboundLink")],1),r._v(" - 简单快速的模板引擎。进行模板元素替换时，速度是"),t("a",{attrs:{href:"http://Golang.org/pkg/text/template/",target:"_blank",rel:"noopener noreferrer"}},[r._v("text/template"),t("OutboundLink")],1),r._v("的十倍")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/jung-kurt/Gofpdf",target:"_blank",rel:"noopener noreferrer"}},[r._v("Gofpdf"),t("OutboundLink")],1),r._v(" - PDF 文档生成器，支持文本，绘图和图片")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/dannyvankooten/grender",target:"_blank",rel:"noopener noreferrer"}},[r._v("grender"),t("OutboundLink")],1),r._v(" - 对 html/template 进行了简单的封装，支持基于文件的模板可以利用其他模板文件进行扩展")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/shiyanhui/hero",target:"_blank",rel:"noopener noreferrer"}},[r._v("hero"),t("OutboundLink")],1),r._v(" Hero 是一个趁手的、快速的、强大的 Go 语言模板引擎")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/CloudyKit/jet",target:"_blank",rel:"noopener noreferrer"}},[r._v("jet"),t("OutboundLink")],1),r._v(" - Jet 模板引擎")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/ziutek/kasia.Go",target:"_blank",rel:"noopener noreferrer"}},[r._v("kasia.Go"),t("OutboundLink")],1),r._v(" - 一个用于HTML 和其他文本文件的模板系统，使用go语言实现")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/osteele/liquid",target:"_blank",rel:"noopener noreferrer"}},[r._v("liquid"),t("OutboundLink")],1),r._v(" - Go 语言实现的 Shopify Liquid 模板.")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/hoisie/mustache",target:"_blank",rel:"noopener noreferrer"}},[r._v("mustache"),t("OutboundLink")],1),r._v(" - Go 语言实现的 Mustache 模板语言")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/flosch/ponGo2",target:"_blank",rel:"noopener noreferrer"}},[r._v("ponGo2"),t("OutboundLink")],1),r._v(" - 类似 DjanGo 的模板引擎")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/valyala/quicktemplate",target:"_blank",rel:"noopener noreferrer"}},[r._v("quicktemplate"),t("OutboundLink")],1),r._v(" - 快速、强大且易用的模板引擎。将模板转化为 Go 语言并进行编译")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/aymerick/raymond",target:"_blank",rel:"noopener noreferrer"}},[r._v("raymond"),t("OutboundLink")],1),r._v(" - 使用 Go 语言实现的完整的 handlebars")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/sipin/Gorazor",target:"_blank",rel:"noopener noreferrer"}},[r._v("GoRazor"),t("OutboundLink")],1),r._v(" - Go 语言的 Razor 视图引擎")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/robfig/soy",target:"_blank",rel:"noopener noreferrer"}},[r._v("Soy"),t("OutboundLink")],1),r._v(" -  Go 语言实现的谷歌闭包模板(也就是 Soy templates) , 参见"),t("a",{attrs:{href:"https://developers.Google.com/closure/templates/",target:"_blank",rel:"noopener noreferrer"}},[r._v("official spec"),t("OutboundLink")],1)]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/Gobuffalo/velvet",target:"_blank",rel:"noopener noreferrer"}},[r._v("velvet"),t("OutboundLink")],1),r._v(" - 使用 Go 语言实现的完整的 handlebars")])])])])]),t("div",{staticClass:"masonry-card"},[t("div",{staticClass:"masonry-card-box"},[t("div",{staticClass:"masonry-card-content"},[t("div",{staticClass:"title"},[r._v("测试")]),t("p",[t("em",[r._v("测试及用于生成测试数据的库.")])]),r._v(" "),t("ul",[t("li",[r._v("测试框架")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/Go-playground/assert",target:"_blank",rel:"noopener noreferrer"}},[r._v("assert"),t("OutboundLink")],1),r._v(" - 基础断言库，用于对 Go 语言程序进行测试，提供了一些用于自定义断言的代码块")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/cavaliercoder/badio",target:"_blank",rel:"noopener noreferrer"}},[r._v("badio"),t("OutboundLink")],1),r._v(" - Go 语言 "),t("code",[r._v("testing/iotest")]),r._v(" 包的扩展")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/h2non/baloo",target:"_blank",rel:"noopener noreferrer"}},[r._v("baloo"),t("OutboundLink")],1),r._v(" - 表达性强、多功能的、端到端的HTTP API 测试工具")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/marioidival/bro",target:"_blank",rel:"noopener noreferrer"}},[r._v("bro"),t("OutboundLink")],1),r._v(" - 监控目录中的文件并对其进行测试")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/khaiql/dbcleaner",target:"_blank",rel:"noopener noreferrer"}},[r._v("dbcleaner"),t("OutboundLink")],1),r._v(" - 清空数据库用于测试，受到"),t("code",[r._v("database_cleaner")]),r._v(" 的启发")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/viant/dsunit",target:"_blank",rel:"noopener noreferrer"}},[r._v("dsunit"),t("OutboundLink")],1),r._v(" - 数据库测试，针对 SQL、 NoSQL、 结构化文件.")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/verdverm/frisby",target:"_blank",rel:"noopener noreferrer"}},[r._v("frisby"),t("OutboundLink")],1),r._v(" - REST API 测试框架")]),r._v(" "),t("li",[t("a",{attrs:{href:"http://onsi.github.io/ginkGo/",target:"_blank",rel:"noopener noreferrer"}},[r._v("ginkGo"),t("OutboundLink")],1),r._v(" - BDD 测试框架")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/msoap/Go-carpet",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-carpet"),t("OutboundLink")],1),r._v(" - 用于在终端中查看测试覆盖率的工具")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/zimmski/Go-mutesting",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-mutesting"),t("OutboundLink")],1),r._v(" - Go 语言源代码突变测试（Mutation testing ）")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/dnaeon/Go-vcr",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-vcr"),t("OutboundLink")],1),r._v(" - 记录并重放 HTTP 交互，用于快速的、确定性的、准确的测试")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/franela/Goblin",target:"_blank",rel:"noopener noreferrer"}},[r._v("Goblin"),t("OutboundLink")],1),r._v(" - 类似 Mocha 的测试框架")]),r._v(" "),t("li",[t("a",{attrs:{href:"http://labix.org/Gocheck",target:"_blank",rel:"noopener noreferrer"}},[r._v("Gocheck"),t("OutboundLink")],1),r._v(" - 更加高级的测试框架，用于替换 Gotest.")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/smartystreets/Goconvey/",target:"_blank",rel:"noopener noreferrer"}},[r._v("GoConvey"),t("OutboundLink")],1),r._v(" - BDD 风格的测试框架，具有 web 界面和计时刷新功能")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/DATA-DOG/Godog",target:"_blank",rel:"noopener noreferrer"}},[r._v("Godog"),t("OutboundLink")],1),r._v(" - 类似 Cucumber 或 Behat 的 BDD 框架")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/appleboy/Gofight",target:"_blank",rel:"noopener noreferrer"}},[r._v("Gofight"),t("OutboundLink")],1),r._v(" - 对 Go 语言的路由框架进行 API 测试")]),r._v(" "),t("li",[t("a",{attrs:{href:"http://onsi.github.io/Gomega/",target:"_blank",rel:"noopener noreferrer"}},[r._v("Gomega"),t("OutboundLink")],1),r._v(" - 类似 Rspec 的 matcher/assertion 库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/orfjackal/Gospec",target:"_blank",rel:"noopener noreferrer"}},[r._v("GoSpec"),t("OutboundLink")],1),r._v(" - BDD 风格的测试框架")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/stesla/Gospecify",target:"_blank",rel:"noopener noreferrer"}},[r._v("Gospecify"),t("OutboundLink")],1),r._v(" - 支持 BDD 语法 。对于任何使用过 rspec 等库的人来说应该非常熟悉")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/pavlo/Gosuite",target:"_blank",rel:"noopener noreferrer"}},[r._v("Gosuite"),t("OutboundLink")],1),r._v(" - 轻量级测试套，为 Go1.7's Subtests 带来了setup/teardown 功能")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/rdrdr/hamcrest",target:"_blank",rel:"noopener noreferrer"}},[r._v("Hamcrest"),t("OutboundLink")],1),r._v(" - fluent framework for declarative Matcher objects that, when applied to input values, produce self-describing results.")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/gavv/httpexpect",target:"_blank",rel:"noopener noreferrer"}},[r._v("httpexpect"),t("OutboundLink")],1),r._v(" - 简洁的、声明式的、易用的端到端HTTP 及 REST API 测试")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/yookoala/restit",target:"_blank",rel:"noopener noreferrer"}},[r._v("restit"),t("OutboundLink")],1),r._v(" - 帮助编写 RESTful API 集成测试的 Go 语言微型框架.")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/Go-testfixtures/testfixtures",target:"_blank",rel:"noopener noreferrer"}},[r._v("testfixtures"),t("OutboundLink")],1),r._v(" - 类似 Rails 的测试工具，用于测试数据库应用")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/stretchr/testify",target:"_blank",rel:"noopener noreferrer"}},[r._v("Testify"),t("OutboundLink")],1),r._v(" - 对标准测试包的扩展")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/posener/wstest",target:"_blank",rel:"noopener noreferrer"}},[r._v("wstest"),t("OutboundLink")],1),r._v(" - Websocket 客户端，用于对于 websocket HTTP.Handler 进行单元测试")]),r._v(" "),t("li",[r._v("Mock")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/maxbrunsfeld/counterfeiter",target:"_blank",rel:"noopener noreferrer"}},[r._v("counterfeiter"),t("OutboundLink")],1),r._v(" - 用于生成自包含 mock 对象的工具")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/DATA-DOG/Go-sqlmock",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-sqlmock"),t("OutboundLink")],1),r._v(" - Mock SQL ，用于测试数据库交互")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/DATA-DOG/Go-txdb",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-txdb"),t("OutboundLink")],1),r._v(" - 基于单事物的数据库驱动，主要用于测试目的")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/h2non/Gock",target:"_blank",rel:"noopener noreferrer"}},[r._v("Gock"),t("OutboundLink")],1),r._v(" - 多功能、易用 HTTP mock")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/Golang/mock",target:"_blank",rel:"noopener noreferrer"}},[r._v("Gomock"),t("OutboundLink")],1),r._v(" - 给 Go 语言用的 Mock框架")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/seborama/Govcr",target:"_blank",rel:"noopener noreferrer"}},[r._v("Govcr"),t("OutboundLink")],1),r._v(" - HTTP mock : 离线测试时记录和重放浏览器的动作")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/Gojuno/minimock",target:"_blank",rel:"noopener noreferrer"}},[r._v("minimock"),t("OutboundLink")],1),r._v(" - Mock 生成器")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/tv42/mockhttp",target:"_blank",rel:"noopener noreferrer"}},[r._v("mockhttp"),t("OutboundLink")],1),r._v(" - Go HTTP.ResponseWriter 使用的 Mock 对象")]),r._v(" "),t("li",[r._v("Fuzzing and delta-debugging/reducing/shrinking")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/dvyukov/Go-fuzz",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-fuzz"),t("OutboundLink")],1),r._v(" - 随机化测试系统")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/Google/Gofuzz",target:"_blank",rel:"noopener noreferrer"}},[r._v("Gofuzz"),t("OutboundLink")],1),r._v(" - 用于生成随机值来初始化 Go 语言对象的库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/zimmski/tavor",target:"_blank",rel:"noopener noreferrer"}},[r._v("Tavor"),t("OutboundLink")],1),r._v(" - 通用模糊测试框架")]),r._v(" "),t("li",[r._v("Selenium 及浏览器控制工具")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/mafredri/cdp",target:"_blank",rel:"noopener noreferrer"}},[r._v("cdp"),t("OutboundLink")],1),r._v(" - 类型安全的 Chrome debug协议的 Go 语言接口，可以用于浏览器或任何实现了该协议的其他待调试对象")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/knq/chromedp",target:"_blank",rel:"noopener noreferrer"}},[r._v("chromedp"),t("OutboundLink")],1),r._v(" - 用于驱动和测试 Chrome, Safari, Edge, Android Webviews, 以及其他支持 Chrome 调试协议的产品")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/aandryashin/ggr",target:"_blank",rel:"noopener noreferrer"}},[r._v("ggr"),t("OutboundLink")],1),r._v(" - 一个轻量级服务器，可以将 Selenium Wedriver 的请求路由或代理到多个 Selenium hubs.")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/aandryashin/selenoid",target:"_blank",rel:"noopener noreferrer"}},[r._v("selenoid"),t("OutboundLink")],1),r._v(" - Selenium hub 服务器的替代品，在容器中启动浏览器")])])])])]),t("div",{staticClass:"masonry-card"},[t("div",{staticClass:"masonry-card-box"},[t("div",{staticClass:"masonry-card-content"},[t("div",{staticClass:"title"},[r._v("文本处理")]),t("p",[t("em",[r._v("解析和操作文本的库")])]),r._v(" "),t("p",[r._v("特殊格式")]),r._v(" "),t("ul",[t("li",[t("p",[t("a",{attrs:{href:"https://github.com/sbstjn/allot",target:"_blank",rel:"noopener noreferrer"}},[r._v("allot"),t("OutboundLink")],1),r._v(" - 占位符及通配符文本解析")])]),r._v(" "),t("li",[t("p",[t("a",{attrs:{href:"https://github.com/CalebQ42/bbConvert",target:"_blank",rel:"noopener noreferrer"}},[r._v("bbConvert"),t("OutboundLink")],1),r._v(" - 将 bbCode 转换为 HTML")])]),r._v(" "),t("li",[t("p",[t("a",{attrs:{href:"https://github.com/russross/blackfriday",target:"_blank",rel:"noopener noreferrer"}},[r._v("blackfriday"),t("OutboundLink")],1),r._v(" - Markdown 解析器")])]),r._v(" "),t("li",[t("p",[t("a",{attrs:{href:"https://github.com/microcosm-cc/bluemonday",target:"_blank",rel:"noopener noreferrer"}},[r._v("bluemonday"),t("OutboundLink")],1),r._v(" - HTML 清理工具")])]),r._v(" "),t("li",[t("p",[t("a",{attrs:{href:"https://github.com/editorconfig/editorconfig-core-Go",target:"_blank",rel:"noopener noreferrer"}},[r._v("editorconfig-core-Go"),t("OutboundLink")],1),r._v(" - Go 语言用的Editorconfig 文件解析和操作库")])]),r._v(" "),t("li",[t("p",[t("a",{attrs:{href:"https://github.com/endeveit/enca",target:"_blank",rel:"noopener noreferrer"}},[r._v("enca"),t("OutboundLink")],1),r._v(" - "),t("a",{attrs:{href:"http://cihar.com/software/enca/",target:"_blank",rel:"noopener noreferrer"}},[r._v("libenca"),t("OutboundLink")],1),r._v("的极简的 cGo 接口")])]),r._v(" "),t("li",[t("p",[t("a",{attrs:{href:"https://github.com/alixaxel/genex",target:"_blank",rel:"noopener noreferrer"}},[r._v("genex"),t("OutboundLink")],1),r._v(" - 计算并展开正则表达式为所有匹配的字符串")])]),r._v(" "),t("li",[t("p",[t("a",{attrs:{href:"https://Godoc.org/github.com/shurcooL/github_flavored_markdown",target:"_blank",rel:"noopener noreferrer"}},[r._v("github_flavored_markdown"),t("OutboundLink")],1),r._v(" - GitHub 风格的 Markdown 渲染器 (使用 blackfriday) ，支持代码块高亮以及可点击的锚点")])]),r._v(" "),t("li",[t("p",[t("a",{attrs:{href:"https://github.com/dustin/Go-humanize",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-humanize"),t("OutboundLink")],1),r._v(" - 时间、数字及内存大小格式化工具")])]),r._v(" "),t("li",[t("p",[t("a",{attrs:{href:"https://github.com/adrianmo/Go-nmea",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-nmea"),t("OutboundLink")],1),r._v(" - NMEA 解析库")])]),r._v(" "),t("li",[t("p",[t("a",{attrs:{href:"https://github.com/jteeuwen/Go-pkg-rss",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-pkg-rss"),t("OutboundLink")],1),r._v(" - 这个库可以读取 RSS 以及 Atom feeds，并且提供了一种缓存机制，遵守 feed 标准。")])]),r._v(" "),t("li",[t("p",[t("a",{attrs:{href:"https://github.com/mattn/Go-runewidth",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-runewidth"),t("OutboundLink")],1),r._v(" - 用于获取字符或字符串固定宽度的函数")])]),r._v(" "),t("li",[t("p",[t("a",{attrs:{href:"https://github.com/mozillazg/Go-slugify",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-slugify"),t("OutboundLink")],1),r._v(" - 生成漂亮的固定链接地址（slug），支持多种语言")])]),r._v(" "),t("li",[t("p",[t("a",{attrs:{href:"https://github.com/emersion/Go-vcard",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-vcard"),t("OutboundLink")],1),r._v(" - 解析并且格式化vCard")])]),r._v(" "),t("li",[t("p",[t("a",{attrs:{href:"https://github.com/mmcdole/Gofeed",target:"_blank",rel:"noopener noreferrer"}},[r._v("Gofeed"),t("OutboundLink")],1),r._v(" - 使用 Go 语言解析RSS 和 Atom")])]),r._v(" "),t("li",[t("p",[t("a",{attrs:{href:"https://github.com/awalterschulze/Gographviz",target:"_blank",rel:"noopener noreferrer"}},[r._v("Gographviz"),t("OutboundLink")],1),r._v(" - 用以解析 Graphviz DOT 语言")])]),r._v(" "),t("li",[t("p",[t("a",{attrs:{href:"https://github.com/labstack/Gommon/tree/master/bytes",target:"_blank",rel:"noopener noreferrer"}},[r._v("Gommon/bytes"),t("OutboundLink")],1),r._v(" - 格式化二进制为字符串")])]),r._v(" "),t("li",[t("p",[t("a",{attrs:{href:"https://github.com/polera/Gonameparts",target:"_blank",rel:"noopener noreferrer"}},[r._v("Gonameparts"),t("OutboundLink")],1),r._v(" - 将人名解析为几个独立的部分")])]),r._v(" "),t("li",[t("p",[t("a",{attrs:{href:"https://github.com/andrewstuart/Goq",target:"_blank",rel:"noopener noreferrer"}},[r._v("Goq"),t("OutboundLink")],1),r._v(" - 声明式 HTML 编组，使用结构标签和 jQuery 语法 (使用 GoQuery).")])]),r._v(" "),t("li",[t("p",[t("a",{attrs:{href:"https://github.com/PuerkitoBio/Goquery",target:"_blank",rel:"noopener noreferrer"}},[r._v("GoQuery"),t("OutboundLink")],1),r._v(" - GoQuery 为 Go 语言带来了一组类似 jQuery 的语法和功能")])]),r._v(" "),t("li",[t("p",[t("a",{attrs:{href:"https://github.com/zach-klippenstein/Goregen",target:"_blank",rel:"noopener noreferrer"}},[r._v("Goregen"),t("OutboundLink")],1),r._v(" - 根据正则表达式生成随机字符串")])]),r._v(" "),t("li",[t("p",[t("a",{attrs:{href:"https://github.com/leonelquinteros/Gotext",target:"_blank",rel:"noopener noreferrer"}},[r._v("Gotext"),t("OutboundLink")],1),r._v(" - GNU gettext 工具")])]),r._v(" "),t("li",[t("p",[t("a",{attrs:{href:"https://github.com/endeveit/guesslanguage",target:"_blank",rel:"noopener noreferrer"}},[r._v("guesslanguage"),t("OutboundLink")],1),r._v(" - 通过一个 unicode 文本来猜测该文本使用的语言")])]),r._v(" "),t("li",[t("p",[t("a",{attrs:{href:"https://github.com/facebookGo/inject",target:"_blank",rel:"noopener noreferrer"}},[r._v("inject"),t("OutboundLink")],1),r._v(" - inject 提供来一个基于反射对注入器")])]),r._v(" "),t("li",[t("p",[t("a",{attrs:{href:"https://github.com/clbanning/mxj",target:"_blank",rel:"noopener noreferrer"}},[r._v("mxj"),t("OutboundLink")],1),r._v(" - 将 XML 编解码为 JSON 或 map[string]interface{}; 通过点分路径和通配符来提取值。用于替代Replaces x2j 和 j2x 包.")])]),r._v(" "),t("li",[t("p",[t("a",{attrs:{href:"https://github.com/mvdan/sh",target:"_blank",rel:"noopener noreferrer"}},[r._v("sh"),t("OutboundLink")],1),r._v(" - Shell 解析器及格式化工具")])]),r._v(" "),t("li",[t("p",[t("a",{attrs:{href:"https://github.com/Gosimple/slug",target:"_blank",rel:"noopener noreferrer"}},[r._v("slug"),t("OutboundLink")],1),r._v(" - URL 友好的 slug 化工具，支持多种语言")])]),r._v(" "),t("li",[t("p",[t("a",{attrs:{href:"https://github.com/avelino/slugify",target:"_blank",rel:"noopener noreferrer"}},[r._v("Slugify"),t("OutboundLink")],1),r._v(" - Go 语言静态地址生成器，可以处理字符串")])]),r._v(" "),t("li",[t("p",[t("a",{attrs:{href:"https://github.com/BurntSushi/toml",target:"_blank",rel:"noopener noreferrer"}},[r._v("toml"),t("OutboundLink")],1),r._v(" - TOML 配置格式 format (encoder/decoder with reflection).\n工具")])]),r._v(" "),t("li",[t("p",[t("a",{attrs:{href:"https://github.com/bndr/Gotabulate",target:"_blank",rel:"noopener noreferrer"}},[r._v("Gotabulate"),t("OutboundLink")],1),r._v(" - 使用 Go 语言简单、美观的打印表格数据")])]),r._v(" "),t("li",[t("p",[t("a",{attrs:{href:"https://github.com/codemodus/kace",target:"_blank",rel:"noopener noreferrer"}},[r._v("kace"),t("OutboundLink")],1),r._v(" - 通用大小写转换工具")])]),r._v(" "),t("li",[t("p",[t("a",{attrs:{href:"https://github.com/nproc/parseargs-Go",target:"_blank",rel:"noopener noreferrer"}},[r._v("parseargs-Go"),t("OutboundLink")],1),r._v(" - 字符串参数解析器，能够理解引用及反斜杠")])]),r._v(" "),t("li",[t("p",[t("a",{attrs:{href:"https://github.com/codemodus/parth",target:"_blank",rel:"noopener noreferrer"}},[r._v("parth"),t("OutboundLink")],1),r._v(" - URL 路径分割解析")])]),r._v(" "),t("li",[t("p",[t("a",{attrs:{href:"https://github.com/yourbasic/radix",target:"_blank",rel:"noopener noreferrer"}},[r._v("radix"),t("OutboundLink")],1),r._v(" - 快速的字符串排序算法")])]),r._v(" "),t("li",[t("p",[t("a",{attrs:{href:"https://github.com/mvdan/xurls",target:"_blank",rel:"noopener noreferrer"}},[r._v("xurls"),t("OutboundLink")],1),r._v(" - 从文本中提取 URL")])])])])])]),t("div",{staticClass:"masonry-card"},[t("div",{staticClass:"masonry-card-box"},[t("div",{staticClass:"masonry-card-content"},[t("div",{staticClass:"title"},[r._v("第三方 APIs")]),t("p",[t("em",[r._v("用于访问第三方 APIs 的库")])]),r._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://github.com/ngs/Go-amazon-product-advertising-api",target:"_blank",rel:"noopener noreferrer"}},[r._v("amazon-product-advertising-api"),t("OutboundLink")],1),r._v(" - "),t("a",{attrs:{href:"https://affiliate-program.amazon.com/gp/advertising/api/detail/main.html",target:"_blank",rel:"noopener noreferrer"}},[r._v("Amazon Product Advertising API"),t("OutboundLink")],1),r._v(" 的 go 语言客户端")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/ChimeraCoder/anaconda",target:"_blank",rel:"noopener noreferrer"}},[r._v("anaconda"),t("OutboundLink")],1),r._v(" - Twitter 1.1 API 的 go 语言客户端")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/aws/aws-sdk-Go",target:"_blank",rel:"noopener noreferrer"}},[r._v("aws-sdk-Go"),t("OutboundLink")],1),r._v(" - AWS 提供的官方go语言 SDK")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/naegelejd/brewerydb",target:"_blank",rel:"noopener noreferrer"}},[r._v("brewerydb"),t("OutboundLink")],1),r._v(" - 用于访问 BreweryDB API的 Go 语言库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/andygrunwald/cachet",target:"_blank",rel:"noopener noreferrer"}},[r._v("cachet"),t("OutboundLink")],1),r._v(" - "),t("a",{attrs:{href:"https://cachethq.io/",target:"_blank",rel:"noopener noreferrer"}},[r._v("Cachet (open source status page system)"),t("OutboundLink")],1),r._v("的 Go 语言客户端")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/jszwedko/Go-circleci",target:"_blank",rel:"noopener noreferrer"}},[r._v("circleci"),t("OutboundLink")],1),r._v(" - 用于和 with CircleCI's API 进行交互的 Go 语言客户端")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/samuelcouch/clarifai",target:"_blank",rel:"noopener noreferrer"}},[r._v("clarifai"),t("OutboundLink")],1),r._v(" - 用语和 Clarifai API 交互的 Go 语言库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/bwmarrin/discordGo",target:"_blank",rel:"noopener noreferrer"}},[r._v("discordGo"),t("OutboundLink")],1),r._v(" - Discord Chat API 的 Go 语言接口")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/huandu/facebook",target:"_blank",rel:"noopener noreferrer"}},[r._v("facebook"),t("OutboundLink")],1),r._v(" - 支持 Facebook Graph API 的库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/maddevsio/fcm",target:"_blank",rel:"noopener noreferrer"}},[r._v("fcm"),t("OutboundLink")],1),r._v(" - Firebase Cloud Messaging 的 Go 语言库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/emiddleton/gads",target:"_blank",rel:"noopener noreferrer"}},[r._v("gads"),t("OutboundLink")],1),r._v(" - Google Adwords 非官方 API")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/bit4bit/gami",target:"_blank",rel:"noopener noreferrer"}},[r._v("gami"),t("OutboundLink")],1),r._v(" - Asterisk Manager Interface 的 Go 语言库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/Aorioli/gcm",target:"_blank",rel:"noopener noreferrer"}},[r._v("gcm"),t("OutboundLink")],1),r._v(" - Google Cloud Messaging 库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/codingsince1985/geo-Golang",target:"_blank",rel:"noopener noreferrer"}},[r._v("geo-Golang"),t("OutboundLink")],1),r._v(" - 用于与 "),t("a",{attrs:{href:"https://developers.Google.com/maps/documentation/geocoding/intro",target:"_blank",rel:"noopener noreferrer"}},[r._v("Google Maps"),t("OutboundLink")],1),r._v(", "),t("a",{attrs:{href:"http://open.mapquestapi.com/geocoding/",target:"_blank",rel:"noopener noreferrer"}},[r._v("MapQuest"),t("OutboundLink")],1),r._v(", "),t("a",{attrs:{href:"http://open.mapquestapi.com/nominatim/",target:"_blank",rel:"noopener noreferrer"}},[r._v("Nominatim"),t("OutboundLink")],1),r._v(", "),t("a",{attrs:{href:"http://geocoder.opencagedata.com/api.html",target:"_blank",rel:"noopener noreferrer"}},[r._v("OpenCage"),t("OutboundLink")],1),r._v(", "),t("a",{attrs:{href:"https://developer.here.com/rest-apis/documentation/geocoder",target:"_blank",rel:"noopener noreferrer"}},[r._v("HERE"),t("OutboundLink")],1),r._v(", "),t("a",{attrs:{href:"https://msdn.microsoft.com/en-us/library/ff701715.aspx",target:"_blank",rel:"noopener noreferrer"}},[r._v("Bing"),t("OutboundLink")],1),r._v(", "),t("a",{attrs:{href:"https://www.mapbox.com/developers/api/geocoding/",target:"_blank",rel:"noopener noreferrer"}},[r._v("Mapbox"),t("OutboundLink")],1),r._v(", 及 "),t("a",{attrs:{href:"https://wiki.openstreetmap.org/wiki/Nominatim",target:"_blank",rel:"noopener noreferrer"}},[r._v("OpenStreetMap"),t("OutboundLink")],1),r._v(" 地理编码 / 反编码 APIs 交互的库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/neuegram/ghost",target:"_blank",rel:"noopener noreferrer"}},[r._v("ghost"),t("OutboundLink")],1),r._v(" - 用于和 Snapchat API 交互的库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/Google/Go-github",target:"_blank",rel:"noopener noreferrer"}},[r._v("github"),t("OutboundLink")],1),r._v(" - 用于和 GitHub REST API v3 交互的库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/shurcooL/githubql",target:"_blank",rel:"noopener noreferrer"}},[r._v("githubql"),t("OutboundLink")],1),r._v(" - 用于和GitHub GraphQL API v4 交互的库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/koffeinsource/Go-imgur",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-imgur"),t("OutboundLink")],1),r._v(" - "),t("a",{attrs:{href:"https://imgur.com",target:"_blank",rel:"noopener noreferrer"}},[r._v("imgur"),t("OutboundLink")],1),r._v(" 的 Go 语言客户端")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/andygrunwald/Go-jira",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-jira"),t("OutboundLink")],1),r._v(" - "),t("a",{attrs:{href:"https://www.atlassian.com/software/jira",target:"_blank",rel:"noopener noreferrer"}},[r._v("Atlassian JIRA"),t("OutboundLink")],1),r._v(" 的 Go 语言客户端")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/gambol99/Go-marathon",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-marathon"),t("OutboundLink")],1),r._v(" - 用于和 Mesosphere's Marathon PAAS 交互的 Go 语言库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/nstratos/Go-myanimelist",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-myanimelist"),t("OutboundLink")],1),r._v(" - 用于和 "),t("a",{attrs:{href:"http://myanimelist.net/modules.php?Go=api",target:"_blank",rel:"noopener noreferrer"}},[r._v("MyAnimeList API"),t("OutboundLink")],1),r._v("交互的库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/toby3d/Go-telegraph",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-telegraph"),t("OutboundLink")],1),r._v(" - Telegraph 发布平台 API 客户端")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/olebedev/Go-tgbot",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-tgbot"),t("OutboundLink")],1),r._v(" - 纯 Go 语言的Telegram 机器人 API 封装，通过 swagger 文件，基会话的路由和中间件")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/andygrunwald/Go-trending",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-trending"),t("OutboundLink")],1),r._v(" - 用于获取 Github 上面 "),t("a",{attrs:{href:"https://github.com/trending",target:"_blank",rel:"noopener noreferrer"}},[r._v("当前流行的代码库"),t("OutboundLink")],1),r._v(" 及 "),t("a",{attrs:{href:"https://github.com/trending/developers",target:"_blank",rel:"noopener noreferrer"}},[r._v("开发者"),t("OutboundLink")],1)]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/knspriggs/Go-twitch",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-twitch"),t("OutboundLink")],1),r._v(" - 用于和推特v3 API 进行交互的 Go 语言客户端")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/dghubble/Go-twitter",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-twitter"),t("OutboundLink")],1),r._v(" - 用于和推特v1.1 API 进行交互的 Go 语言客户端")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/hbagdi/Go-unsplash",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-unsplash"),t("OutboundLink")],1),r._v(" - "),t("a",{attrs:{href:"https://unsplash.com",target:"_blank",rel:"noopener noreferrer"}},[r._v("Unsplash.com"),t("OutboundLink")],1),r._v(" API 的 Go 语言客户端")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/nishanths/Go-xkcd",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-xkcd"),t("OutboundLink")],1),r._v(" - xkcd API 的 Go 语言客户端")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/mitchellh/Goamz",target:"_blank",rel:"noopener noreferrer"}},[r._v("Goamz"),t("OutboundLink")],1),r._v(" - "),t("a",{attrs:{href:"https://launchpad.net/Goamz",target:"_blank",rel:"noopener noreferrer"}},[r._v("Goamz"),t("OutboundLink")],1),r._v(" 的一个fork分支，添加了一些缺失的 API，用于调用特定的软件包。")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/mamal72/Golyrics",target:"_blank",rel:"noopener noreferrer"}},[r._v("Golyrics"),t("OutboundLink")],1),r._v(" - Golyrics 是一个 Go 语言库，用于从 Wikia 上获取歌词")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/michiwend/Gomusicbrainz",target:"_blank",rel:"noopener noreferrer"}},[r._v("GoMusicBrainz"),t("OutboundLink")],1),r._v(" - Go MusicBrainz WS2 客户端")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/Google/Google-api-Go-client",target:"_blank",rel:"noopener noreferrer"}},[r._v("Google"),t("OutboundLink")],1),r._v(" - 为go语言自动生成 Google api")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/chonthu/Go-Google-analytics",target:"_blank",rel:"noopener noreferrer"}},[r._v("Google-analytics"),t("OutboundLink")],1),r._v(" - Google 分析报告的一个简单的封装")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/GoogleCloudPlatform/gcloud-Golang",target:"_blank",rel:"noopener noreferrer"}},[r._v("Google-cloud"),t("OutboundLink")],1),r._v(" - Google Cloud APIs Go 语言客户端库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/ngs/Go-Google-email-audit-api",target:"_blank",rel:"noopener noreferrer"}},[r._v("Google-email-audit-api"),t("OutboundLink")],1),r._v(" - "),t("a",{attrs:{href:"https://developers.Google.com/admin-sdk/email-audit/",target:"_blank",rel:"noopener noreferrer"}},[r._v("Google G Suite Email Audit API"),t("OutboundLink")],1),r._v("的 Go 语言客户端库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/jsgilmore/Gostorm",target:"_blank",rel:"noopener noreferrer"}},[r._v("Gostorm"),t("OutboundLink")],1),r._v(" - GoStorm 是一个 Go 语言库，实现了在 Go 语言里面编写 Spout 和 Bolt 的协议，用于和 Storm  shells 进行通信")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/nikepan/Govkbot",target:"_blank",rel:"noopener noreferrer"}},[r._v("Govkbot"),t("OutboundLink")],1),r._v(" - 简单的 Go "),t("a",{attrs:{href:"https://vk.com",target:"_blank",rel:"noopener noreferrer"}},[r._v("VK"),t("OutboundLink")],1),r._v(" 机器人库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/andybons/hipchat",target:"_blank",rel:"noopener noreferrer"}},[r._v("hipchat"),t("OutboundLink")],1),r._v(" - 这个项目实行了Hipchat API 的 Go 语言客户端")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/daneharrigan/hipchat",target:"_blank",rel:"noopener noreferrer"}},[r._v("hipchat (xmpp)"),t("OutboundLink")],1),r._v(" - 通过使用 XMPP 与 HipChat 进行通信的库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/Medium/medium-sdk-Go",target:"_blank",rel:"noopener noreferrer"}},[r._v("Medium"),t("OutboundLink")],1),r._v(" - Medium OAuth2 API 的 sdk")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/andygrunwald/meGos",target:"_blank",rel:"noopener noreferrer"}},[r._v("meGos"),t("OutboundLink")],1),r._v(" - 用于访问 "),t("a",{attrs:{href:"http://mesos.apache.org/",target:"_blank",rel:"noopener noreferrer"}},[r._v("Apache Mesos"),t("OutboundLink")],1),r._v(" 集群的客户端")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/onrik/micha",target:"_blank",rel:"noopener noreferrer"}},[r._v("micha"),t("OutboundLink")],1),r._v(" - 用于"),t("a",{attrs:{href:"https://core.telegram.org/bots/api",target:"_blank",rel:"noopener noreferrer"}},[r._v("Telegram bot api"),t("OutboundLink")],1),r._v("的go语言库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/minio/minio-Go",target:"_blank",rel:"noopener noreferrer"}},[r._v("minio-Go"),t("OutboundLink")],1),r._v(" - go 语言 Minio 客户端，用于 Amazon S3 兼容的云存储")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/dukex/mixpanel",target:"_blank",rel:"noopener noreferrer"}},[r._v("mixpanel"),t("OutboundLink")],1),r._v(" - Mixpanel 是一个用于追踪事件并发送 Mixpanel profile 的更新到 Mixpanel 的库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/mxpv/patreon-Go",target:"_blank",rel:"noopener noreferrer"}},[r._v("patreon-Go"),t("OutboundLink")],1),r._v(" - Patreon API.")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/logpacker/paypalsdk",target:"_blank",rel:"noopener noreferrer"}},[r._v("paypal"),t("OutboundLink")],1),r._v(" - PayPal 支付 API")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/playlyfe/playlyfe-Go-sdk",target:"_blank",rel:"noopener noreferrer"}},[r._v("playlyfe"),t("OutboundLink")],1),r._v(" - Playlyfe Rest API 的 Go 语言 SDK")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/gregdel/pushover",target:"_blank",rel:"noopener noreferrer"}},[r._v("pushover"),t("OutboundLink")],1),r._v(" - Pushover API 的 Go 语言封装")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/Omie/rrdaclient",target:"_blank",rel:"noopener noreferrer"}},[r._v("rrdaclient"),t("OutboundLink")],1),r._v(" - 用于接入 statdns.com API 的库——RRDA API。通过HTTP协议进行 DNS查询")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/rapito/Go-shopify",target:"_blank",rel:"noopener noreferrer"}},[r._v("shopify"),t("OutboundLink")],1),r._v(" - 一个用于通过 Shopify API 进行增删改查的 Go 语言库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/nlopes/slack",target:"_blank",rel:"noopener noreferrer"}},[r._v("slack"),t("OutboundLink")],1),r._v(" - Slack API")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/sergiotapia/smiteGo",target:"_blank",rel:"noopener noreferrer"}},[r._v("smite"),t("OutboundLink")],1),r._v(" - 对 Smite game API 的封装")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/rapito/Go-spotify",target:"_blank",rel:"noopener noreferrer"}},[r._v("spotify"),t("OutboundLink")],1),r._v(" - 用于接入 Spotify WEB API 的 Go 语言库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/sostronk/Go-steam",target:"_blank",rel:"noopener noreferrer"}},[r._v("steam"),t("OutboundLink")],1),r._v(" - 用于与Steam服务器进行交互的库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/stripe/stripe-Go",target:"_blank",rel:"noopener noreferrer"}},[r._v("stripe"),t("OutboundLink")],1),r._v(" - Stripe API 的 Go 语言客户端")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/yanzay/tbot",target:"_blank",rel:"noopener noreferrer"}},[r._v("tbot"),t("OutboundLink")],1),r._v(" - Telegram bot 服务器，有类似 net/http 的 api")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/tucnak/telebot",target:"_blank",rel:"noopener noreferrer"}},[r._v("telebot"),t("OutboundLink")],1),r._v(" - go语言编写的 Telegram bot 框架")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/Syfaro/telegram-bot-api",target:"_blank",rel:"noopener noreferrer"}},[r._v("telegram-bot-api"),t("OutboundLink")],1),r._v(" - 简洁的 Telegram bot 客户端.")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/dietsche/textbelt",target:"_blank",rel:"noopener noreferrer"}},[r._v("textbelt"),t("OutboundLink")],1),r._v(" - textbelt.com txt messaging API 的go语言客户端")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/jbrodriguez/Go-tmdb",target:"_blank",rel:"noopener noreferrer"}},[r._v("TheMovieDb"),t("OutboundLink")],1),r._v(" - 用于和 "),t("a",{attrs:{href:"https://themoviedb.org",target:"_blank",rel:"noopener noreferrer"}},[r._v("themoviedb.org"),t("OutboundLink")],1),r._v(" 通信的一个简单的 Go 语言软件包")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/poorny/translate",target:"_blank",rel:"noopener noreferrer"}},[r._v("translate"),t("OutboundLink")],1),r._v(" - Go 在线翻译包")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/adlio/trello",target:"_blank",rel:"noopener noreferrer"}},[r._v("Trello"),t("OutboundLink")],1),r._v(" - Trello API的 Go 语言封装")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/mattcunningham/gumblr",target:"_blank",rel:"noopener noreferrer"}},[r._v("tumblr"),t("OutboundLink")],1),r._v(" - Tumblr v2 API 的 Go 语言封装")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/Go-playground/webhooks",target:"_blank",rel:"noopener noreferrer"}},[r._v("webhooks"),t("OutboundLink")],1),r._v(" - GitHub 和 Bitbucket 的Webhook接收器")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/Gojuno/Go-zooz",target:"_blank",rel:"noopener noreferrer"}},[r._v("zooz"),t("OutboundLink")],1),r._v(" - Zooz API 的 Go 语言客户端")])])])])]),t("div",{staticClass:"masonry-card"},[t("div",{staticClass:"masonry-card-box"},[t("div",{staticClass:"masonry-card-content"},[t("div",{staticClass:"title"},[r._v("实用工具")]),t("p",[t("em",[r._v("可以让你的生活变得更简单的实用工具.")])]),r._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://github.com/bahlo/abutil",target:"_blank",rel:"noopener noreferrer"}},[r._v("abutil"),t("OutboundLink")],1),r._v(" - 常用 Go 语言工具的集合")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/topfreegames/apm",target:"_blank",rel:"noopener noreferrer"}},[r._v("apm"),t("OutboundLink")],1),r._v(" - Go 语言进程管理工具具有HTTP API.")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/tmrts/boilr",target:"_blank",rel:"noopener noreferrer"}},[r._v("boilr"),t("OutboundLink")],1),r._v(" - 一个超快的命令行工具，用于从模板文件生成项目")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/rubyist/circuitbreaker",target:"_blank",rel:"noopener noreferrer"}},[r._v("circuitbreaker"),t("OutboundLink")],1),r._v(" - Go 语言断路器模式")]),r._v(" "),t("li",[t("a",{attrs:{href:"http://github.com/onatm/clockwerk",target:"_blank",rel:"noopener noreferrer"}},[r._v("clockwerk"),t("OutboundLink")],1),r._v(" - 使用简单、流畅的语法来调度周期性任务")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/txgruppi/command",target:"_blank",rel:"noopener noreferrer"}},[r._v("command"),t("OutboundLink")],1),r._v(" - 命令模式，支持线程安全的串行、并行调度")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/rakyll/coop",target:"_blank",rel:"noopener noreferrer"}},[r._v("coop"),t("OutboundLink")],1),r._v(" - Go 语言中常见的并发流程速查表")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/jutkko/copy-pasta",target:"_blank",rel:"noopener noreferrer"}},[r._v("copy-pasta"),t("OutboundLink")],1),r._v(" - 通用多工作站剪切板，使用类似 S3 的后端作为存储")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/bcicen/ctop",target:"_blank",rel:"noopener noreferrer"}},[r._v("ctop"),t("OutboundLink")],1),r._v(" - "),t("a",{attrs:{href:"http://ctop.sh",target:"_blank",rel:"noopener noreferrer"}},[r._v("类似Top"),t("OutboundLink")],1),r._v("的接口 (例如 htop) ，用于容器数据收集")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/vrecan/death",target:"_blank",rel:"noopener noreferrer"}},[r._v("Death"),t("OutboundLink")],1),r._v(" - 利用信号管理应用程序的关闭")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/ulule/deepcopier",target:"_blank",rel:"noopener noreferrer"}},[r._v("Deepcopier"),t("OutboundLink")],1),r._v(" - 结构体拷贝")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/derekparker/delve",target:"_blank",rel:"noopener noreferrer"}},[r._v("delve"),t("OutboundLink")],1),r._v(" - Go 语言调试器")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/kirillDanshin/dlog",target:"_blank",rel:"noopener noreferrer"}},[r._v("dlog"),t("OutboundLink")],1),r._v(" - 编译时控制的日志，让你的 release 包变得更小而不需移除 debug 调用")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/Luxurioust/excelize",target:"_blank",rel:"noopener noreferrer"}},[r._v("excelize"),t("OutboundLink")],1),r._v(" - 用于读写 Microsoft Excel (XLSX) 文件的库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/digitalcrab/fastlz",target:"_blank",rel:"noopener noreferrer"}},[r._v("fastlz"),t("OutboundLink")],1),r._v(" - "),t("a",{attrs:{href:"http://fastlz.org/",target:"_blank",rel:"noopener noreferrer"}},[r._v("FastLz"),t("OutboundLink")],1),r._v(" (免费，开源，可移植实时压缩库) 的一个封装")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/h2non/filetype",target:"_blank",rel:"noopener noreferrer"}},[r._v("filetype"),t("OutboundLink")],1),r._v(" - 通过数字签名来推测文件类型")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/yaronsumel/filler",target:"_blank",rel:"noopener noreferrer"}},[r._v("filler"),t("OutboundLink")],1),r._v(' - 使用 "fill" 标记来填充结构体的小工具')]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/junegunn/fzf",target:"_blank",rel:"noopener noreferrer"}},[r._v("fzf"),t("OutboundLink")],1),r._v(" - 命令行模糊查找工具")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/Go-playground/generate",target:"_blank",rel:"noopener noreferrer"}},[r._v("generate"),t("OutboundLink")],1),r._v(" - 针对一个路径或环境变量，递归的执行 Go generate，可以通过正则表达式来进行过滤")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/h2non/gentleman",target:"_blank",rel:"noopener noreferrer"}},[r._v("gentleman"),t("OutboundLink")],1),r._v(" - 全功能、插件驱动的 HTTP 客户端库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/git-time-metric/gtm",target:"_blank",rel:"noopener noreferrer"}},[r._v("git-time-metric"),t("OutboundLink")],1),r._v(" - 简单、无缝、轻量级的 Git 时间追踪工具")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/tidwall/gjson",target:"_blank",rel:"noopener noreferrer"}},[r._v("GJSON"),t("OutboundLink")],1),r._v(" - 一行代码获取 JSON")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/asticode/Go-astitodo",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-astitodo"),t("OutboundLink")],1),r._v(" - 解析你 Go 语言代码中的 TODOs（待办事项）")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/wendiGo/Go-bind-plugin",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-bind-plugin"),t("OutboundLink")],1),r._v(" - Go:generate 工具，用于构建 Go 语言插件(1.8 only)，并对导出的符号进行包装")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/rk/Go-cron",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-cron"),t("OutboundLink")],1),r._v(" - 简单的 Go 语言 Cron 库，可以以不同的时间间隔来执行闭包或函数，从一秒到某年某月某日都可以。主要针对的是 Web 应用或者长期运行的守护进程")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/tj/Go-debug",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-debug"),t("OutboundLink")],1),r._v(" - 条件调试日志，用于 Go 语言库和应用程序")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/ungerik/Go-dry",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-dry"),t("OutboundLink")],1),r._v(" - DRY (don't repeat yourself)")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/thoas/Go-funk",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-funk"),t("OutboundLink")],1),r._v(" - 现代 Go 语言工具库，提供了很多有用的工具 (map, find, contains, filter, chunk, reverse, ...)")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/mozillazg/Go-httpheader",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-httpheader"),t("OutboundLink")],1),r._v(" - 用于将结构体编码进 http 头的 Go 语言库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/beefsack/Go-rate",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-rate"),t("OutboundLink")],1),r._v(" - Go 语言版本的限速器")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/nicklaw5/Go-respond",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-respond"),t("OutboundLink")],1),r._v(" - 用于处理常见 HTTP JSON 响应的库.")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/ikeikeikeike/Go-sitemap-generator",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-sitemap-generator"),t("OutboundLink")],1),r._v(" - XML 网站地图生成器")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/uber/Go-torch",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-torch"),t("OutboundLink")],1),r._v(" - 为 Go 语言程序生成火焰图")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/sadlil/Go-trigger",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-trigger"),t("OutboundLink")],1),r._v(" - Go 语言全局事件触发器，通过 id 和触发器，在程序的任何地方注册事件")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/tobyhede/Go-underscore",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-underscore"),t("OutboundLink")],1),r._v(" - 一些有用的 Go 语言工具的集合")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/carlescere/Goback",target:"_blank",rel:"noopener noreferrer"}},[r._v("Goback"),t("OutboundLink")],1),r._v(" - 一个 Go 语言的简单的指数补偿包")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/VividCortex/Godaemon",target:"_blank",rel:"noopener noreferrer"}},[r._v("Godaemon"),t("OutboundLink")],1),r._v(" - 用于编写守护进程的工具")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/dropbox/Godropbox",target:"_blank",rel:"noopener noreferrer"}},[r._v("Godropbox"),t("OutboundLink")],1),r._v(" - 用于编写 Go 语言服务／应用的库，来自 Dropbox.")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/cosiner/Gohper",target:"_blank",rel:"noopener noreferrer"}},[r._v("Gohper"),t("OutboundLink")],1),r._v(" - 多种能够帮助你进行软件开发的工具和模块")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/elgs/Gojq",target:"_blank",rel:"noopener noreferrer"}},[r._v("Gojq"),t("OutboundLink")],1),r._v(" - 通过 Go 语言进行 JSON 查询")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/ChimeraCoder/Gojson",target:"_blank",rel:"noopener noreferrer"}},[r._v("Gojson"),t("OutboundLink")],1),r._v(" - 通过 JSON 自动生成 Go 语言结构体")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/msempere/Golarm",target:"_blank",rel:"noopener noreferrer"}},[r._v("Golarm"),t("OutboundLink")],1),r._v(" - 告警（支持系统事件）")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/mlimaloureiro/Golog",target:"_blank",rel:"noopener noreferrer"}},[r._v("Golog"),t("OutboundLink")],1),r._v(" - 简单、轻量级的命令后工具，用于对你的计划任务进行跟踪")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/bndr/Gopencils",target:"_blank",rel:"noopener noreferrer"}},[r._v("Gopencils"),t("OutboundLink")],1),r._v(" - 简单小巧的 Go 语言库，能够很容易的使用各种 REST APIs.")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/michiwend/Goplaceholder",target:"_blank",rel:"noopener noreferrer"}},[r._v("Goplaceholder"),t("OutboundLink")],1),r._v(" - 一个小巧的 Go 语言库用于生成占位图片")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/Goreleaser/Goreleaser",target:"_blank",rel:"noopener noreferrer"}},[r._v("Goreleaser"),t("OutboundLink")],1),r._v(" - 尽可能快速的发布 Go 语言二进制文件")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/wgliang/Goreporter",target:"_blank",rel:"noopener noreferrer"}},[r._v("Goreporter"),t("OutboundLink")],1),r._v(" - 进行代码静态分析，单元测试，代码检视并生成代码质量报告的工具")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/franela/Goreq",target:"_blank",rel:"noopener noreferrer"}},[r._v("Goreq"),t("OutboundLink")],1),r._v(" - 简洁的 Go 语言 http 请求库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/smallnest/Goreq",target:"_blank",rel:"noopener noreferrer"}},[r._v("Goreq"),t("OutboundLink")],1),r._v(" - 更加简化的 http客户端，基于 Gorequest.")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/parnurzeal/Gorequest",target:"_blank",rel:"noopener noreferrer"}},[r._v("Gorequest"),t("OutboundLink")],1),r._v(" - 简化的 http 客户端，具有丰富的特性")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/linxGnu/Goseaweedfs",target:"_blank",rel:"noopener noreferrer"}},[r._v("Goseaweedfs"),t("OutboundLink")],1),r._v(" - conseilSeaweedFS 客户端，几乎具有全部的特性")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/subosito/Gotenv",target:"_blank",rel:"noopener noreferrer"}},[r._v("Gotenv"),t("OutboundLink")],1),r._v(" - 从 "),t("code",[r._v(".env")]),r._v(" 或者任何 "),t("code",[r._v("io.Reader")]),r._v("中加载环境变量")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/fterrag/Goxlsxwriter",target:"_blank",rel:"noopener noreferrer"}},[r._v("Goxlsxwriter"),t("OutboundLink")],1),r._v(" - 用于操作 XLSX (Microsoft Excel) 文件的 libxlsxwriter 库的 Go 语言接口")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/tenntenn/gpath",target:"_blank",rel:"noopener noreferrer"}},[r._v("gpath"),t("OutboundLink")],1),r._v(" - 用于简化结构体域访问的库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/levigross/grequests",target:"_blank",rel:"noopener noreferrer"}},[r._v("grequests"),t("OutboundLink")],1),r._v(" - 简单优雅的 "),t("code",[r._v("net/HTTP")]),r._v(" 封装，紧随 Python 的 requests 的步伐")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/roylee0704/gron",target:"_blank",rel:"noopener noreferrer"}},[r._v("gron"),t("OutboundLink")],1),r._v(" - 使用简单的 Go 语言 API 和 Gron 调度器创建定时任务")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/htcat/htcat",target:"_blank",rel:"noopener noreferrer"}},[r._v("htcat"),t("OutboundLink")],1),r._v(" - 并行及流水线的 HTTP GET 工具")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/facebookGo/httpcontrol",target:"_blank",rel:"noopener noreferrer"}},[r._v("httpcontrol"),t("OutboundLink")],1),r._v(" - httpcontrol 包，运行进行 HTTP 传输层超时和重传控制")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/github/hub",target:"_blank",rel:"noopener noreferrer"}},[r._v("hub"),t("OutboundLink")],1),r._v(" - 封装了 git 命令，提供了额外的功能用于在终端中和 Github 进行交互")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/afex/hystrix-Go",target:"_blank",rel:"noopener noreferrer"}},[r._v("hystrix-Go"),t("OutboundLink")],1),r._v(" - 实现 Hystrix 风格的、程序员预定义的 fallback 机制（熔断）")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/immortal/immortal",target:"_blank",rel:"noopener noreferrer"}},[r._v("immortal"),t("OutboundLink")],1),r._v(" - *nix 跨平台 (与操作系统无关的)监控程序")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/mengzhuo/intrinsic",target:"_blank",rel:"noopener noreferrer"}},[r._v("intrinsic"),t("OutboundLink")],1),r._v(" - 不需要编写任何汇编代码就能使用 x86 SIMD")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/bamzi/jobrunner",target:"_blank",rel:"noopener noreferrer"}},[r._v("JobRunner"),t("OutboundLink")],1),r._v(" - 智能的、多功能的定时任务调度器，具有任务队列和实时监控功能")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/AmuzaTkts/jsonapi-errors",target:"_blank",rel:"noopener noreferrer"}},[r._v("jsonapi-errors"),t("OutboundLink")],1),r._v(" -  JSON API errors 的 Go 语言接口.")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/miolini/jsonf",target:"_blank",rel:"noopener noreferrer"}},[r._v("jsonf"),t("OutboundLink")],1),r._v(" - 控制台工具，用于高亮及 JSON 查询功能")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/ricardolonga/jsonGo",target:"_blank",rel:"noopener noreferrer"}},[r._v("jsonGo"),t("OutboundLink")],1),r._v(" - 用于更加方便的构建 JSON 对象的 API")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/RichardKnop/jsonhal",target:"_blank",rel:"noopener noreferrer"}},[r._v("jsonhal"),t("OutboundLink")],1),r._v(" - 一个简单的 Go 语言软件包，用于将自定义结构体转换为 HAL 兼容的 JSON 响应")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/Qntfy/kazaam",target:"_blank",rel:"noopener noreferrer"}},[r._v("kazaam"),t("OutboundLink")],1),r._v(" - 用于传输任意 JSON 文件的 API")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/jaschaephraim/lrserver",target:"_blank",rel:"noopener noreferrer"}},[r._v("lrserver"),t("OutboundLink")],1),r._v(" - LiveReload 服务器")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/minio/mc",target:"_blank",rel:"noopener noreferrer"}},[r._v("mc"),t("OutboundLink")],1),r._v(" - Minio Client 提供了一组工具，用于操作 Amazon S3 兼容云存储和文件系统")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/imdario/merGo",target:"_blank",rel:"noopener noreferrer"}},[r._v("merGo"),t("OutboundLink")],1),r._v(" - 用于将结构体和map合并进 Go 语言的工具。对于配置默认值，避免杂乱的if语句很有帮助")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/tdewolff/minify",target:"_blank",rel:"noopener noreferrer"}},[r._v("minify"),t("OutboundLink")],1),r._v(" - 快速压缩 HTML, CSS, JS, XML, JSON 以及 SVG 文件格式")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/tj/mmake",target:"_blank",rel:"noopener noreferrer"}},[r._v("mmake"),t("OutboundLink")],1),r._v(" - 现代 Make 工具")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/StabbyCutyou/moldova",target:"_blank",rel:"noopener noreferrer"}},[r._v("moldova"),t("OutboundLink")],1),r._v(" - 基于输入目标生成随机数据的工具")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/sanbornm/mp",target:"_blank",rel:"noopener noreferrer"}},[r._v("mp"),t("OutboundLink")],1),r._v(" - 简单的命令行邮件解析器，当前支持标准输入并输出JSON.")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/linxGnu/mssqlx",target:"_blank",rel:"noopener noreferrer"}},[r._v("mssqlx"),t("OutboundLink")],1),r._v(" - HA 客户端，用于主-从 (或主-主) 数据库，集成了简单的、轻量级的轮询调度负载均衡。基于 sqlx.")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/VividCortex/multitick",target:"_blank",rel:"noopener noreferrer"}},[r._v("multitick"),t("OutboundLink")],1),r._v(" - 用于 aligned tickers 的多路复用")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/e-dard/netbug",target:"_blank",rel:"noopener noreferrer"}},[r._v("netbug"),t("OutboundLink")],1),r._v(" - 远程对你的服务进行性能分析")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/inconshreveable/ngrok",target:"_blank",rel:"noopener noreferrer"}},[r._v("ngrok"),t("OutboundLink")],1),r._v(" - 创建到 localhost 的隧道")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/xta/okrun",target:"_blank",rel:"noopener noreferrer"}},[r._v("okrun"),t("OutboundLink")],1),r._v(" - 当 Go 文件运行报错时尝试修复并运行")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/adelowo/onecache",target:"_blank",rel:"noopener noreferrer"}},[r._v("onecache"),t("OutboundLink")],1),r._v(" - 支持多种后端存储的缓存库(Redis, Memcached, 文件系统等)")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/maruel/panicparse",target:"_blank",rel:"noopener noreferrer"}},[r._v("panicparse"),t("OutboundLink")],1),r._v(" - 将类似的协程分组并对调用栈进行着色")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/peco/peco",target:"_blank",rel:"noopener noreferrer"}},[r._v("peco"),t("OutboundLink")],1),r._v(" - 简单的交互式过滤工具")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/sethgrid/pester",target:"_blank",rel:"noopener noreferrer"}},[r._v("pester"),t("OutboundLink")],1),r._v(" - Go HTTP 客户端，具有重传，补偿和并发功能")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/VividCortex/pm",target:"_blank",rel:"noopener noreferrer"}},[r._v("pm"),t("OutboundLink")],1),r._v(" - 基于 HTTP API 的进程管理 (i.e. Goroutine)")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/pkg/profile",target:"_blank",rel:"noopener noreferrer"}},[r._v("profile"),t("OutboundLink")],1),r._v(" - 一个简单的性能分析软件包")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/zpatrick/rclient",target:"_blank",rel:"noopener noreferrer"}},[r._v("rclient"),t("OutboundLink")],1),r._v(" - 可读性良好、灵活、易用的 REST APIs 客户端")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/tockins/realize",target:"_blank",rel:"noopener noreferrer"}},[r._v("realize"),t("OutboundLink")],1),r._v(" - Go 语言构建系统，可以监控文件变化并重新加载。运行，构建，监控文件并支持自定义路径")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/mozillazg/request",target:"_blank",rel:"noopener noreferrer"}},[r._v("request"),t("OutboundLink")],1),r._v(" - Go 语言版的 HTTP Requests for Humans™.")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/abo/rerate",target:"_blank",rel:"noopener noreferrer"}},[r._v("rerate"),t("OutboundLink")],1),r._v(" - 基于 Redis 的速率计数器和限速器")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/ivpusic/rerun",target:"_blank",rel:"noopener noreferrer"}},[r._v("rerun"),t("OutboundLink")],1),r._v(" - 当源码变化时，重新编译并重新运行 Go 语言编写的 app")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/Go-resty/resty",target:"_blank",rel:"noopener noreferrer"}},[r._v("resty"),t("OutboundLink")],1),r._v(" - 简单的 HTTP 和 REST 客户端，受到 Ruby rest-client 的启发")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/kamilsk/retry",target:"_blank",rel:"noopener noreferrer"}},[r._v("retry"),t("OutboundLink")],1),r._v(" - 基于上下文的功能机制，反复执行命令直到成功")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/VividCortex/robustly",target:"_blank",rel:"noopener noreferrer"}},[r._v("robustly"),t("OutboundLink")],1),r._v(" - 有弹性的执行函数，遇到错误时捕获并重新运行")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/carlescere/scheduler",target:"_blank",rel:"noopener noreferrer"}},[r._v("scheduler"),t("OutboundLink")],1),r._v(" - 从容的进行 Cronjobs 任务调度")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/dghubble/sling",target:"_blank",rel:"noopener noreferrer"}},[r._v("sling"),t("OutboundLink")],1),r._v(" - Go HTTP 请求构造器，用于 API 客户端")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/briandowns/spinner",target:"_blank",rel:"noopener noreferrer"}},[r._v("spinner"),t("OutboundLink")],1),r._v(" - 一个 Go 语言软件包，提供多种选项，方便在终端中创建加载动画")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/jmoiron/sqlx",target:"_blank",rel:"noopener noreferrer"}},[r._v("sqlx"),t("OutboundLink")],1),r._v(" - 为内建的数据库/sql 软件包提供一组扩展")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/asdine/storm",target:"_blank",rel:"noopener noreferrer"}},[r._v("Storm"),t("OutboundLink")],1),r._v(" - 一个用于 BoltDB 的简单又强大的工具")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/Go-task/task",target:"_blank",rel:"noopener noreferrer"}},[r._v("Task"),t("OutboundLink")],1),r._v(' - 简单来讲就是 "Make" 的替代品')]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/viant/toolbox",target:"_blank",rel:"noopener noreferrer"}},[r._v("toolbox"),t("OutboundLink")],1),r._v(" - 切片, map, multimap, 结构体, 函数,数据转换工具。服务路由，宏求值和标记器")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/alxrm/uGo",target:"_blank",rel:"noopener noreferrer"}},[r._v("uGo"),t("OutboundLink")],1),r._v(" - uGo 是一个切片工具箱，有着和 Go 语言一致的语法")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/esemplastic/unis",target:"_blank",rel:"noopener noreferrer"}},[r._v("UNIS"),t("OutboundLink")],1),r._v(" - Go 语言字符串处理函数的通用架构")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/knq/usql",target:"_blank",rel:"noopener noreferrer"}},[r._v("usql"),t("OutboundLink")],1),r._v(" - usql 是一个通用的命令行接口，用于操作 sql 数据库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/shomali11/util",target:"_blank",rel:"noopener noreferrer"}},[r._v("util"),t("OutboundLink")],1),r._v(" - 收集了很多有用的函数")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/asciimoo/wuzz",target:"_blank",rel:"noopener noreferrer"}},[r._v("wuzz"),t("OutboundLink")],1),r._v(" - 交互式命令行程序，用于进行 HTTP 检查")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/monmohan/xferspdy",target:"_blank",rel:"noopener noreferrer"}},[r._v("xferspdy"),t("OutboundLink")],1),r._v(" - Xferspdy 提供了二进制对比功能以及 Go 语言补丁库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/tealeg/xlsx",target:"_blank",rel:"noopener noreferrer"}},[r._v("xlsx"),t("OutboundLink")],1),r._v(" - 简化了在 Go 语言程序中读取 xml 格式文件的操作")])])])])]),t("div",{staticClass:"masonry-card"},[t("div",{staticClass:"masonry-card-box"},[t("div",{staticClass:"masonry-card-content"},[t("div",{staticClass:"title"},[r._v("验证")]),t("p",[t("em",[r._v("用于验证的库")])]),r._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://github.com/asaskevich/Govalidator",target:"_blank",rel:"noopener noreferrer"}},[r._v("Govalidator"),t("OutboundLink")],1),r._v(" - 数据验证及清晰工具，用于字符串，数字， 数组切片及结构体")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/Go-ozzo/ozzo-validation",target:"_blank",rel:"noopener noreferrer"}},[r._v("ozzo-validation"),t("OutboundLink")],1),r._v(" - 支持多种数据类型的验证 (结构体，字符串，键值对，数组切片等等)，具有可配置、可扩展的验证规则——使用常用代码结构定义，而非结构体标签")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/markbates/validate",target:"_blank",rel:"noopener noreferrer"}},[r._v("validate"),t("OutboundLink")],1),r._v(" - 提供了一个用于为 Go 语言英语程序编写验证工具的框架")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/Go-playground/validator",target:"_blank",rel:"noopener noreferrer"}},[r._v("validator"),t("OutboundLink")],1),r._v(" - Go 结构体及域验证，包括：跨域、跨结构体, Map, 切片和数组")])])])])]),t("div",{staticClass:"masonry-card"},[t("div",{staticClass:"masonry-card-box"},[t("div",{staticClass:"masonry-card-content"},[t("div",{staticClass:"title"},[r._v("版本控制")]),t("p",[t("em",[r._v("用于版本控制的库")])]),r._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://github.com/rjeczalik/gh",target:"_blank",rel:"noopener noreferrer"}},[r._v("gh"),t("OutboundLink")],1),r._v(" - 用于 GitHub Webhooks 的可编程服务器以及 net/HTTP 中间件")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/libgit2/git2Go",target:"_blank",rel:"noopener noreferrer"}},[r._v("git2Go"),t("OutboundLink")],1),r._v(" - libgit2 的 Go 语言接口")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/sourcegraph/Go-vcs",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-vcs"),t("OutboundLink")],1),r._v(" - 通过 Go 语言来操作和检视 VCS 代码仓库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/beyang/hGo",target:"_blank",rel:"noopener noreferrer"}},[r._v("hGo"),t("OutboundLink")],1),r._v(" - HGo 是一个 Go 语言软件包集合，提供了对本地 Mercurial 仓库的读取能力.")])])])])]),t("div",{staticClass:"masonry-card"},[t("div",{staticClass:"masonry-card-box"},[t("div",{staticClass:"masonry-card-content"},[t("div",{staticClass:"title"},[r._v("视频")]),t("p",[t("em",[r._v("用于操作视频的库")])]),r._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://github.com/3d0c/gmf",target:"_blank",rel:"noopener noreferrer"}},[r._v("gmf"),t("OutboundLink")],1),r._v(" - FFmpeg av* 库的 Go 语言接口.")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/asticode/Go-astisub",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-astisub"),t("OutboundLink")],1),r._v(" - 使用 Go 语言操作字幕(.srt, .stl, .ttml, .webvtt, .ssa/.ass, teletext, .smi, etc.).")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/giorgisio/Goav",target:"_blank",rel:"noopener noreferrer"}},[r._v("Goav"),t("OutboundLink")],1),r._v(" - 易用的 FFmpeg Go 语言接口")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/ziutek/gst",target:"_blank",rel:"noopener noreferrer"}},[r._v("gst"),t("OutboundLink")],1),r._v(" - GStreamer 的 Go 语言接口")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/korandiz/v4l",target:"_blank",rel:"noopener noreferrer"}},[r._v("v4l"),t("OutboundLink")],1),r._v(" - Linux 下使用的视频截图库，Go 语言编写")])])])])]),t("div",{staticClass:"masonry-card"},[t("div",{staticClass:"masonry-card-box"},[t("div",{staticClass:"masonry-card-content"},[t("div",{staticClass:"title"},[r._v("Web 框架")]),t("p",[t("em",[r._v("全栈 web 框架")])]),r._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://aahframework.org",target:"_blank",rel:"noopener noreferrer"}},[r._v("aah"),t("OutboundLink")],1),r._v(" - 可扩展、高性能、快速发布的 Go 语言 web 框架")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/sheng/air",target:"_blank",rel:"noopener noreferrer"}},[r._v("Air"),t("OutboundLink")],1),r._v(" - 理想的 RESTful web 框架")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/astaxie/beeGo",target:"_blank",rel:"noopener noreferrer"}},[r._v("BeeGo"),t("OutboundLink")],1),r._v(" - beeGo 是一个开源的、高性能的 Go 语言 web 框架")]),r._v(" "),t("li",[t("a",{attrs:{href:"http://Gobuffalo.io",target:"_blank",rel:"noopener noreferrer"}},[r._v("Buffalo"),t("OutboundLink")],1),r._v(" - 为 Go 语言带来堪比 Rails 的高生产效率")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/labstack/echo",target:"_blank",rel:"noopener noreferrer"}},[r._v("Echo"),t("OutboundLink")],1),r._v(" - 高性能、极简的 Go 语言 web 框架")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/zpatrick/fireball",target:"_blank",rel:"noopener noreferrer"}},[r._v("Fireball"),t("OutboundLink")],1),r._v(" - 感觉更加自然的 web 框架")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/jabong/florest-core",target:"_blank",rel:"noopener noreferrer"}},[r._v("Florest"),t("OutboundLink")],1),r._v(" - 高性能的、基于工作流的 REST API 框架")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/Go-gem/gem",target:"_blank",rel:"noopener noreferrer"}},[r._v("Gem"),t("OutboundLink")],1),r._v(" - 简单快速的 web 框架，对 REST API 很友好")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/gin-Gonic/gin",target:"_blank",rel:"noopener noreferrer"}},[r._v("Gin"),t("OutboundLink")],1),r._v(" - Gin 是一个 Go 语言编写的 web 框架！提供了一组类似 martini 的 API ，具有更好的性能（40倍）。如果你需要高性能和高生产率，这个框架很适合你")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/NYTimes/gizmo",target:"_blank",rel:"noopener noreferrer"}},[r._v("Gizmo"),t("OutboundLink")],1),r._v(" - 纽约时报正在使用对微服务工具集")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/ant0ine/Go-json-rest",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-json-rest"),t("OutboundLink")],1),r._v(" - 快速、简单的创建 RESTful JSON API.")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/codehack/Go-relax",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-relax"),t("OutboundLink")],1),r._v(" - 具有可插拔组建的框架，用于构建 RESTful API's.")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/ungerik/Go-rest",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-rest"),t("OutboundLink")],1),r._v(" - Go 语言 REST 框架中的小恶魔")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/raphael/Goa",target:"_blank",rel:"noopener noreferrer"}},[r._v("Goa"),t("OutboundLink")],1),r._v(" - 用于开发微服务的框架，基于 Ruby 的 Praxis 的设计")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/dinever/Golf",target:"_blank",rel:"noopener noreferrer"}},[r._v("Golf"),t("OutboundLink")],1),r._v(" - Golf 是一个快速、简单、轻量级的 Go 语言微型 web 框架。具有强大的功能且没有标准库以外的依赖")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/rainycape/Gondola",target:"_blank",rel:"noopener noreferrer"}},[r._v("Gondola"),t("OutboundLink")],1),r._v(" - 用于快速编写高性能网站的框架")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/mustafaakin/Gongular",target:"_blank",rel:"noopener noreferrer"}},[r._v("Gongular"),t("OutboundLink")],1),r._v(" - 快速 Go web 框架，支持输入映射／验证以及依赖注入")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/Go-macaron/macaron",target:"_blank",rel:"noopener noreferrer"}},[r._v("Macaron"),t("OutboundLink")],1),r._v(" - Macaron 是一个高效的模块化设计的web框架")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/paulbellamy/manGo",target:"_blank",rel:"noopener noreferrer"}},[r._v("manGo"),t("OutboundLink")],1),r._v(" - ManGo 是一个模块化 web 应用框架，受到 Rack 和 PEP333 的启发")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/clayGod/microservice",target:"_blank",rel:"noopener noreferrer"}},[r._v("Microservice"),t("OutboundLink")],1),r._v(" - 用于创建微服务的框架，使用 Go 语言编写")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/ivpusic/neo",target:"_blank",rel:"noopener noreferrer"}},[r._v("neo"),t("OutboundLink")],1),r._v(" - 是一个极小且快速的 Go 语言 web 框架，具有及其简单的 API")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/resoursea/api",target:"_blank",rel:"noopener noreferrer"}},[r._v("Resoursea"),t("OutboundLink")],1),r._v(" - 用于快速编写基于资源对服务的 REST 框架")]),r._v(" "),t("li",[t("a",{attrs:{href:"http://rest-layer.io",target:"_blank",rel:"noopener noreferrer"}},[r._v("REST Layer"),t("OutboundLink")],1),r._v(" - 用于构建在数据库之上构建 REST/GraphQL API 且大多数配置都可以通过代码完成")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/revel/revel",target:"_blank",rel:"noopener noreferrer"}},[r._v("Revel"),t("OutboundLink")],1),r._v(" - go语言高生产率框架")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/Goanywhere/rex",target:"_blank",rel:"noopener noreferrer"}},[r._v("rex"),t("OutboundLink")],1),r._v(" - Rex 是一个用于进行模块化开发的库，基于Gorilla/mux 完全兼容大多数的 "),t("code",[r._v("net/HTTP")]),r._v(".")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/jaybill/sawsij",target:"_blank",rel:"noopener noreferrer"}},[r._v("sawsij"),t("OutboundLink")],1),r._v(" - 轻量级、开源的 web 框架，用于构建高性能、数据驱动的web应用")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/lunny/tanGo",target:"_blank",rel:"noopener noreferrer"}},[r._v("tanGo"),t("OutboundLink")],1),r._v(" - 微型的、支持插件的 web 框架")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/rcrowley/Go-tigertonic",target:"_blank",rel:"noopener noreferrer"}},[r._v("tigertonic"),t("OutboundLink")],1),r._v(" - 用于构建 JSON web 服务的 Go 语言框架，受到 Dropwizard 的启发")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/pilu/traffic",target:"_blank",rel:"noopener noreferrer"}},[r._v("traffic"),t("OutboundLink")],1),r._v(" - 受到 Sinatra 启发的 Go 语言 web 框架")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/gernest/utron",target:"_blank",rel:"noopener noreferrer"}},[r._v("utron"),t("OutboundLink")],1),r._v(" - 轻量级的go语言 MVC 框架")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/nbari/violetear",target:"_blank",rel:"noopener noreferrer"}},[r._v("violetear"),t("OutboundLink")],1),r._v(" - Go HTTP 路由库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/yarf-framework/yarf",target:"_blank",rel:"noopener noreferrer"}},[r._v("YARF"),t("OutboundLink")],1),r._v(" - 快速的微型框架，用于快速、简单地构建 REST APIs 以及 web 服务")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/cosiner/zerver",target:"_blank",rel:"noopener noreferrer"}},[r._v("Zerver"),t("OutboundLink")],1),r._v(" - Zerver 是一个富有表达力的、模块化的、全功能的 RESTful 框架.")])])])])]),t("div",{staticClass:"masonry-card"},[t("div",{staticClass:"masonry-card-box"},[t("div",{staticClass:"masonry-card-content"},[t("div",{staticClass:"title"},[r._v("Windows")]),t("ul",[t("li",[t("a",{attrs:{href:"https://github.com/Gonutz/d3d9",target:"_blank",rel:"noopener noreferrer"}},[r._v("d3d9"),t("OutboundLink")],1),r._v(" - Direct3D9 的 Go 语言接口")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/Go-ole/Go-ole",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-ole"),t("OutboundLink")],1),r._v(" - 为 Go 语言实现的 Win32 OLE")])])])])]),t("div",{staticClass:"masonry-card"},[t("div",{staticClass:"masonry-card-box"},[t("div",{staticClass:"masonry-card-content"},[t("div",{staticClass:"title"},[r._v("XML")]),t("p",[t("em",[r._v("Libraries and tools for manipulating XML.")])]),r._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://github.com/jteeuwen/Go-pkg-xmlx",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-pkg-xmlx"),t("OutboundLink")],1),r._v(" - 对 Go 语言 XML 标准库的扩展。维护来一个节点树，允许前进和后退浏览以及一些简单的单／多节点搜索函数")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/xml-comp/xml-comp",target:"_blank",rel:"noopener noreferrer"}},[r._v("XML-Comp"),t("OutboundLink")],1),r._v(" - 简单的命令行 XML 比较工具，可以生成关于目录、文件和标签对差异信息")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/shabbyrobe/xmlwriter",target:"_blank",rel:"noopener noreferrer"}},[r._v("xmlwriter"),t("OutboundLink")],1),r._v(" - Procedural XML 生成 API 基于 libxml2 的 xmlwriter 模块.")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/antchfx/xpath",target:"_blank",rel:"noopener noreferrer"}},[r._v("xpath"),t("OutboundLink")],1),r._v(" - XPath 库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/antchfx/xquery",target:"_blank",rel:"noopener noreferrer"}},[r._v("xquery"),t("OutboundLink")],1),r._v(" - XQuery 使你可以从 HTML/XML文档中抽取数据和求值，使用 XPath 表达式")])])])])]),t("div",{staticClass:"masonry-card"},[t("div",{staticClass:"masonry-card-box"},[t("div",{staticClass:"masonry-card-content"},[t("div",{staticClass:"title"},[r._v("中间件")]),t("ul",[t("li",[t("a",{attrs:{href:"https://github.com/rs/cors",target:"_blank",rel:"noopener noreferrer"}},[r._v("CORS"),t("OutboundLink")],1),r._v(" - 非常方便地向你的 api 中添加 CORS 功能")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/rs/formjson",target:"_blank",rel:"noopener noreferrer"}},[r._v("formjson"),t("OutboundLink")],1),r._v(" - 将 JSON 输入看作说一个标准的表单 POST 来处理")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/ulule/limiter",target:"_blank",rel:"noopener noreferrer"}},[r._v("Limiter"),t("OutboundLink")],1),r._v(" - 超级简单的限速中间件")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/didip/tollbooth",target:"_blank",rel:"noopener noreferrer"}},[r._v("Tollbooth"),t("OutboundLink")],1),r._v(" - HTTP 请求限速中间件")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/sebest/xff",target:"_blank",rel:"noopener noreferrer"}},[r._v("XFF"),t("OutboundLink")],1),r._v(" - 处理 "),t("code",[r._v("X-Forwarded-For")]),r._v(" 头的中间件")])])])])]),t("div",{staticClass:"masonry-card"},[t("div",{staticClass:"masonry-card-box"},[t("div",{staticClass:"masonry-card-content"},[t("div",{staticClass:"title"},[r._v("用于创建 HTTP 中间件的库")]),t("ul",[t("li",[t("a",{attrs:{href:"https://github.com/justinas/alice",target:"_blank",rel:"noopener noreferrer"}},[r._v("alice"),t("OutboundLink")],1),r._v(" - 用于连接中间件的库，简单无痛苦")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/codemodus/catena",target:"_blank",rel:"noopener noreferrer"}},[r._v("catena"),t("OutboundLink")],1),r._v(" - HTTP.Handler wrapper catenation (和chain具有相同的 API ).")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/codemodus/chain",target:"_blank",rel:"noopener noreferrer"}},[r._v("chain"),t("OutboundLink")],1),r._v(' - Handler wrapper chaining with scoped data (net/context-based "middleware").')]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/Go-on/wrap",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-wrap"),t("OutboundLink")],1),r._v(" - 小型中间件库，用于net/HTTP.")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/alioygur/Gores",target:"_blank",rel:"noopener noreferrer"}},[r._v("Gores"),t("OutboundLink")],1),r._v(" - 用于处理 HTML, JSON, XML 等。对于 RESTful APIs 很有用。")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/carbocation/interpose",target:"_blank",rel:"noopener noreferrer"}},[r._v("interpose"),t("OutboundLink")],1),r._v(" - 极简的 net/HTTP 中间件")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/stephens2424/muxchain",target:"_blank",rel:"noopener noreferrer"}},[r._v("muxchain"),t("OutboundLink")],1),r._v(" - 用于net/HTTP的轻量级中间件")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/urfave/negroni",target:"_blank",rel:"noopener noreferrer"}},[r._v("negroni"),t("OutboundLink")],1),r._v(" - 符合语言习惯的 HTTP 中间件库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/unrolled/render",target:"_blank",rel:"noopener noreferrer"}},[r._v("render"),t("OutboundLink")],1),r._v(" - 用于轻松渲染 JSON, XML, 及 HTML 模板响应的库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/InVisionApp/rye",target:"_blank",rel:"noopener noreferrer"}},[r._v("rye"),t("OutboundLink")],1),r._v(" - 小型 Go 语言中间件库 ，支持 JWT, CORS, Statsd, 及 Go 1.7 context")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/thoas/stats",target:"_blank",rel:"noopener noreferrer"}},[r._v("stats"),t("OutboundLink")],1),r._v(" - Go 语言中间件，用于存储web应用的多种信息")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/volatile/core",target:"_blank",rel:"noopener noreferrer"}},[r._v("Volatile"),t("OutboundLink")],1),r._v(" - 极简的go语言中间件技术栈，强调灵活性、优秀实践及简洁代码")])])])])]),t("div",{staticClass:"masonry-card"},[t("div",{staticClass:"masonry-card-box"},[t("div",{staticClass:"masonry-card-content"},[t("div",{staticClass:"title"},[r._v("路由")]),t("ul",[t("li",[t("a",{attrs:{href:"https://github.com/gernest/alien",target:"_blank",rel:"noopener noreferrer"}},[r._v("alien"),t("OutboundLink")],1),r._v(" - 轻量级、超快速的 HTTP 路由，来自外星科技")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/Go-zoo/bone",target:"_blank",rel:"noopener noreferrer"}},[r._v("Bone"),t("OutboundLink")],1),r._v(" - 轻量级快速 Fast HTTP Multiplexer.")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/clayGod/Bxog",target:"_blank",rel:"noopener noreferrer"}},[r._v("Bxog"),t("OutboundLink")],1),r._v(" - 为go语言编写的简单快速点 HTTP 路由。能够配合多种不同复杂度、长度和嵌套的路由工作。同时它能够根据接收到的参数创建 URL")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/Go-chi/chi",target:"_blank",rel:"noopener noreferrer"}},[r._v("chi"),t("OutboundLink")],1),r._v(" - 小巧、快速、具有丰富表达力的 HTTP 路由，基于net/context.")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/buaazp/fasthttprouter",target:"_blank",rel:"noopener noreferrer"}},[r._v("fasthttprouter"),t("OutboundLink")],1),r._v(" - 从"),t("code",[r._v("httprouter")]),r._v(" fork出来的高性能路由，是第一个适配 "),t("code",[r._v("fasthttp")]),r._v("的路由")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/Gocraft/web",target:"_blank",rel:"noopener noreferrer"}},[r._v("Gocraft/web"),t("OutboundLink")],1),r._v(" - Mux 及中间件包")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/Goji/Goji",target:"_blank",rel:"noopener noreferrer"}},[r._v("Goji"),t("OutboundLink")],1),r._v(" - Goji 是一个极简的、灵活的HTTP 请求数据分选器，支持 "),t("code",[r._v("net/context")]),r._v(".")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/vardius/Gorouter",target:"_blank",rel:"noopener noreferrer"}},[r._v("GoRouter"),t("OutboundLink")],1),r._v(" - GoRouter 是一个服务器/API 微型框架、HTTP 请求路由 router, 数据分选器，提供了支持"),t("code",[r._v("net/context")]),r._v("的中间件")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/Gowww/router",target:"_blank",rel:"noopener noreferrer"}},[r._v("Gowww/router"),t("OutboundLink")],1),r._v(" - 超快的HTTP 路由，完全兼容 net/HTTP.Handler 接口.")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/julienschmidt/httprouter",target:"_blank",rel:"noopener noreferrer"}},[r._v("httprouter"),t("OutboundLink")],1),r._v(" - 高性能路由。使用这个库和标准http处理工具可以构建一个非常高性能大web框架")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/dimfeld/httptreemux",target:"_blank",rel:"noopener noreferrer"}},[r._v("httptreemux"),t("OutboundLink")],1),r._v(" - 高速，灵活，基于树的 HTTP 路由。受到了 httprouter 的启发")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/Go-playground/lars",target:"_blank",rel:"noopener noreferrer"}},[r._v("lars"),t("OutboundLink")],1),r._v(" - 树一个轻量级、快速、可扩展、零分配的HTTP路由，用于创建定制化的框架")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/imdario/medeina",target:"_blank",rel:"noopener noreferrer"}},[r._v("medeina"),t("OutboundLink")],1),r._v(" - Medeina是一个HTTP路由树，基于 HttpRouter 。基于 Roda 和 Cuba.")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/Gorilla/mux",target:"_blank",rel:"noopener noreferrer"}},[r._v("mux"),t("OutboundLink")],1),r._v(" - 强大的 URL 路由和分发库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/Go-ozzo/ozzo-routing",target:"_blank",rel:"noopener noreferrer"}},[r._v("ozzo-routing"),t("OutboundLink")],1),r._v(" - 一个极快的go语言http路由，支持正则路由匹配。完全支持创建 RESTful APIs.")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/bmizerany/pat",target:"_blank",rel:"noopener noreferrer"}},[r._v("pat"),t("OutboundLink")],1),r._v(" - Sinatra 风格的模式 muxer ，用于go语言 net/http库，由 Sinatra的作者编写。")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/Go-playground/pure",target:"_blank",rel:"noopener noreferrer"}},[r._v("pure"),t("OutboundLink")],1),r._v(' - 是一个轻量级http路由，严格符合标准"net/HTTP"实现')]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/VividCortex/siesta",target:"_blank",rel:"noopener noreferrer"}},[r._v("Siesta"),t("OutboundLink")],1),r._v(" - 具有可组合性的框架，用于编写中间件和 handlers")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/husobee/vestiGo",target:"_blank",rel:"noopener noreferrer"}},[r._v("vestiGo"),t("OutboundLink")],1),r._v(" - 高性能、独立的、符合 HTTP 标准的 URL 路由，用于构建go语言web应用")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/rs/xmux",target:"_blank",rel:"noopener noreferrer"}},[r._v("xmux"),t("OutboundLink")],1),r._v(" - 高性能 muxer，基于 "),t("code",[r._v("httprouter")]),r._v(" ，支持 "),t("code",[r._v("net/context")])]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/daryl/zeus",target:"_blank",rel:"noopener noreferrer"}},[r._v("zeus"),t("OutboundLink")],1),r._v(" - 非常简单快速的http路由")])])])])]),t("div",{staticClass:"masonry-card"},[t("div",{staticClass:"masonry-card-box"},[t("div",{staticClass:"masonry-card-content"},[t("div",{staticClass:"title"},[r._v("代码分析")]),t("ul",[t("li",[t("a",{attrs:{href:"https://github.com/bradleyfalzon/apicompat",target:"_blank",rel:"noopener noreferrer"}},[r._v("apicompat"),t("OutboundLink")],1),r._v(" - 检测一个go语言项目最近的变化，用于监测不能向后兼容的改动")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/mibk/dupl",target:"_blank",rel:"noopener noreferrer"}},[r._v("dupl"),t("OutboundLink")],1),r._v(" - 用于检测重复代码的工具")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/kisielk/errcheck",target:"_blank",rel:"noopener noreferrer"}},[r._v("errcheck"),t("OutboundLink")],1),r._v(" - Errcheck 是一个用于检测go语言程序中未处理错误的程序")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/davecheney/gcvis",target:"_blank",rel:"noopener noreferrer"}},[r._v("gcvis"),t("OutboundLink")],1),r._v(" - 实时地将 Go 语言垃圾回收进行可视化")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/alecthomas/Gometalinter",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go Metalinter"),t("OutboundLink")],1),r._v(" - Metalinter 会自动应用全部的静态分析工具，并生成形式一致的分析报告")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/qiniu/checkstyle",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-checkstyle"),t("OutboundLink")],1),r._v(" checkstyle是一个代码风格检查工具，类似 java checkstyle 。这个工具就是受到 java checkstyle 和 Golint 的启发")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/roblaszczak/Go-cleanarch",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-cleanarch"),t("OutboundLink")],1),r._v(" - Go-cleanarch 用于检查代码是否符合简洁架构的相关法则，比如依赖法则以及你的Go语言项目中各个库的交互情况")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/firstrow/Go-outdated",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-outdated"),t("OutboundLink")],1),r._v(" - 这是一个命令行程序，用于显示过时的库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/yuroyoro/Goast-viewer",target:"_blank",rel:"noopener noreferrer"}},[r._v("Goast-viewer"),t("OutboundLink")],1),r._v(" - 基于 Web 的 Golang AST 可视化工具.")]),r._v(" "),t("li",[t("a",{attrs:{href:"http://Gocover.io/",target:"_blank",rel:"noopener noreferrer"}},[r._v("GoCover.io"),t("OutboundLink")],1),r._v(" - GoCover.io 可以查看任何go语言软件包的代码覆盖率")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://Godoc.org/Golang.org/x/tools/cmd/Goimports",target:"_blank",rel:"noopener noreferrer"}},[r._v("Goimports"),t("OutboundLink")],1),r._v(" - 用于自动修复，添加，删除你的 Go 语言项目的 import")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/Golang/lint",target:"_blank",rel:"noopener noreferrer"}},[r._v("GoLint"),t("OutboundLink")],1),r._v(" - Golint 是一个针对 Go 语言源码的 lint 工具")]),r._v(" "),t("li",[t("a",{attrs:{href:"http://Go-lint.appspot.com/",target:"_blank",rel:"noopener noreferrer"}},[r._v("Golint online"),t("OutboundLink")],1),r._v(" - 使用golint对GitHub, Bitbucket 以及 Google Project Hosting上面的 Go 语言源文件进行静态分析")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://sourcegraph.com/github.com/sqs/Goreturns",target:"_blank",rel:"noopener noreferrer"}},[r._v("Goreturns"),t("OutboundLink")],1),r._v(" - 添加零值 return 语句以符合函数返回值类型")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/dominikh/Go-tools/tree/master/cmd/Gosimple",target:"_blank",rel:"noopener noreferrer"}},[r._v("Gosimple"),t("OutboundLink")],1),r._v(" - Gosimple 是一个针对 Go 语言的lint工具，专注于简化代码")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/shurcooL/Gostatus",target:"_blank",rel:"noopener noreferrer"}},[r._v("Gostatus"),t("OutboundLink")],1),r._v(" - 命令行工具，查看当前 Go 语言软件包仓库的状态")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/mvdan/interfacer",target:"_blank",rel:"noopener noreferrer"}},[r._v("interfacer"),t("OutboundLink")],1),r._v(" - 可以提供接口类型建议的 Lint 工具")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/surullabs/lint",target:"_blank",rel:"noopener noreferrer"}},[r._v("lint"),t("OutboundLink")],1),r._v(" - 将lint作为go语言测试的一部分来执行")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/dominikh/Go-tools/tree/master/cmd/staticcheck",target:"_blank",rel:"noopener noreferrer"}},[r._v("staticcheck"),t("OutboundLink")],1),r._v(" - staticcheck is "),t("code",[r._v("Go vet")]),r._v(" on steroids, applying a ton of static analysis checks you might be used to from tools like ReSharper for C#.")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/mdempsky/unconvert",target:"_blank",rel:"noopener noreferrer"}},[r._v("unconvert"),t("OutboundLink")],1),r._v(" - 从go语言代码中移除不必要的类型转换")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/dominikh/Go-tools/tree/master/cmd/unused",target:"_blank",rel:"noopener noreferrer"}},[r._v("unused"),t("OutboundLink")],1),r._v(" - unused 会检查 Go 语言代码中没有用到的常量，变量，函数和类型")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/mccoyst/validate",target:"_blank",rel:"noopener noreferrer"}},[r._v("validate"),t("OutboundLink")],1),r._v(" - 自动验证结构体类型")])])])])]),t("div",{staticClass:"masonry-card"},[t("div",{staticClass:"masonry-card-box"},[t("div",{staticClass:"masonry-card-content"},[t("div",{staticClass:"title"},[r._v("编辑器插件")]),t("ul",[t("li",[t("a",{attrs:{href:"https://plugins.jetbrains.com/plugin/9568-Go",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go plugin for JetBrains IDEs"),t("OutboundLink")],1),r._v(" - JetBrains IDEs 使用的 Go 语言插件")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/Go-lang-plugin-org/Go-lang-idea-plugin",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-lang-idea-plugin"),t("OutboundLink")],1),r._v(" (废弃) - IntelliJ (JetBrains) IDEA 之前使用的插件，现在已经被上面的官方插件所取代")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/dominikh/Go-mode.el",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-mode"),t("OutboundLink")],1),r._v(" - GNU/Emacs的 Go 语言模式")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/joefitzgerald/Go-plus",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-plus"),t("OutboundLink")],1),r._v(" - 供Atom 使用的自动补全、格式化、语法检查、lint 及 Vetting 的软件包")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/GoClipse/Goclipse",target:"_blank",rel:"noopener noreferrer"}},[r._v("Goclipse"),t("OutboundLink")],1),r._v(" - Eclipse 的 Go 语言插件")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/nsf/Gocode",target:"_blank",rel:"noopener noreferrer"}},[r._v("Gocode"),t("OutboundLink")],1),r._v(" - go语言自动补全")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/DisposaBoy/GoSublime",target:"_blank",rel:"noopener noreferrer"}},[r._v("GoSublime"),t("OutboundLink")],1),r._v(" - SublimeText 2 使用的 Go 语言插件，支持代码补全以及一些类似 IDE 的特性")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/velour/velour",target:"_blank",rel:"noopener noreferrer"}},[r._v("velour"),t("OutboundLink")],1),r._v(" - acme 编辑器使用的 IRC 客户端")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/rjohnsondev/vim-compiler-Go",target:"_blank",rel:"noopener noreferrer"}},[r._v("vim-compiler-Go"),t("OutboundLink")],1),r._v(" - Vim插件，在保存时高亮语法错误")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/fatih/vim-Go",target:"_blank",rel:"noopener noreferrer"}},[r._v("vim-Go"),t("OutboundLink")],1),r._v(" - Vim 使用的 Go 语言开发插件")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/Microsoft/vscode-Go",target:"_blank",rel:"noopener noreferrer"}},[r._v("vscode-Go"),t("OutboundLink")],1),r._v(" - Visual Studio Code (VS Code) 使用的一个扩展，为 Go 语言提供了支持")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/eaburns/Watch",target:"_blank",rel:"noopener noreferrer"}},[r._v("Watch"),t("OutboundLink")],1),r._v(" - 当文件变动时，在 acme 窗口中执行命令")])])])])]),t("div",{staticClass:"masonry-card"},[t("div",{staticClass:"masonry-card-box"},[t("div",{staticClass:"masonry-card-content"},[t("div",{staticClass:"title"},[r._v("Go 语言工具")]),t("ul",[t("li",[t("a",{attrs:{href:"https://github.com/songgao/colorGo",target:"_blank",rel:"noopener noreferrer"}},[r._v("colorGo"),t("OutboundLink")],1),r._v(" - 对 "),t("code",[r._v("Go")]),r._v(" 命令进行了封装，用于为"),t("code",[r._v("Go build")]),r._v("的输出结果添加颜色")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/KyleBanks/depth",target:"_blank",rel:"noopener noreferrer"}},[r._v("depth"),t("OutboundLink")],1),r._v(" - 通过分析导入的库，将某个包的依赖关系用树状结构进行显示")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://getgb.io/",target:"_blank",rel:"noopener noreferrer"}},[r._v("gb"),t("OutboundLink")],1),r._v(" - 一个简单易用的基于项目的构建工具，用于 Go 语言")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/TrueFurby/Go-callvis",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-callvis"),t("OutboundLink")],1),r._v(" - 使用 dot 语言将你的 Go 语言程序函数调用关系可视化")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/skelterjohn/Go-pkg-complete",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-pkg-complete"),t("OutboundLink")],1),r._v(" - Bash 代码补全，用于Go 和 wGo.")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/Go-swagger/Go-swagger",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-swagger"),t("OutboundLink")],1),r._v(" - 为 Go 语言实现的Swagger 2.0， Swagger 是一个简单但强大的工具，用于展示你的 RESTful API.")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/OctoLinker/browser-extension",target:"_blank",rel:"noopener noreferrer"}},[r._v("OctoLinker"),t("OutboundLink")],1),r._v(" - 使用 github 的浏览器插件 OctoLinker 高效浏览 Go 语言文件")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/galeone/rts",target:"_blank",rel:"noopener noreferrer"}},[r._v("rts"),t("OutboundLink")],1),r._v(" - RTS（是response to struct的缩写）用于根据服务器的响应生成 Go 语言结构体")])])])])]),t("div",{staticClass:"masonry-card"},[t("div",{staticClass:"masonry-card-box"},[t("div",{staticClass:"masonry-card-content"},[t("div",{staticClass:"title"},[r._v("DevOps 工具")]),t("ul",[t("li",[t("a",{attrs:{href:"https://github.com/smira/aptly",target:"_blank",rel:"noopener noreferrer"}},[r._v("aptly"),t("OutboundLink")],1),r._v(" - aptly 是一个 Debian 库管理工具")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/Luxurioust/aurora",target:"_blank",rel:"noopener noreferrer"}},[r._v("aurora"),t("OutboundLink")],1),r._v(" - 跨平台、基于web的 Beanstalkd 队列服务器控制台")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/soniah/awsenv",target:"_blank",rel:"noopener noreferrer"}},[r._v("awsenv"),t("OutboundLink")],1),r._v(" - 加载 Amazon (AWS) 环境变量作为 profile 文件")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/eleme/banshee",target:"_blank",rel:"noopener noreferrer"}},[r._v("Banshee"),t("OutboundLink")],1),r._v(" - 异常检测系统，用于周期性数据测量")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/codesenberg/bombardier",target:"_blank",rel:"noopener noreferrer"}},[r._v("bombardier"),t("OutboundLink")],1),r._v(" - 快速的、跨平台的HTTP 基准工具.")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/bosun-monitor/bosun",target:"_blank",rel:"noopener noreferrer"}},[r._v("bosun"),t("OutboundLink")],1),r._v(" - 时间序列告警框架")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/liudng/doGo",target:"_blank",rel:"noopener noreferrer"}},[r._v("doGo"),t("OutboundLink")],1),r._v(" - 监控源文件中的变化并自动编译和执行")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/appleboy/drone-jenkins",target:"_blank",rel:"noopener noreferrer"}},[r._v("drone-jenkins"),t("OutboundLink")],1),r._v(" - 触发下游 Jenkins 任务， 可以通过二进制文件、 docker 或者 Drone CI来使用")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/appleboy/drone-scp",target:"_blank",rel:"noopener noreferrer"}},[r._v("drone-scp"),t("OutboundLink")],1),r._v(" - 通过 SSH 拷贝文件及可执行程序,可以通过二进制文件、 docker 或者 Drone CI来使用")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/chrismckenzie/dropship",target:"_blank",rel:"noopener noreferrer"}},[r._v("Dropship"),t("OutboundLink")],1),r._v(" - 通过 cdn 部署代码的工具")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/appleboy/easyssh-proxy",target:"_blank",rel:"noopener noreferrer"}},[r._v("easyssh-proxy"),t("OutboundLink")],1),r._v(" - 一个用于通过 ssh 远程执行命令以及通过"),t("code",[r._v("ProxyCommand")]),r._v(" 来进行 SCP 下载")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/Go-gitea/gitea",target:"_blank",rel:"noopener noreferrer"}},[r._v("Gitea"),t("OutboundLink")],1),r._v(" - Gogs的fork，完全社区驱动")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/rcrowley/Go-metrics",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go Metrics"),t("OutboundLink")],1),r._v(" - Coda Hale 的 Metrics library的 Go 语言接口: https://github.com/codahale/metrics.")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/sanbornm/Go-selfupdate",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-selfupdate"),t("OutboundLink")],1),r._v(" - 让你的 Go 语言程序可以自我更新")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/cryptojuice/Gobrew",target:"_blank",rel:"noopener noreferrer"}},[r._v("Gobrew"),t("OutboundLink")],1),r._v(" - Gobrew 让你可以在不同版本的 Go 语言之间轻松切换")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/sirnewton01/Godbg",target:"_blank",rel:"noopener noreferrer"}},[r._v("Godbg"),t("OutboundLink")],1),r._v(" - 基于 Web 的前端 gdb 应用程序")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://Gogs.io/",target:"_blank",rel:"noopener noreferrer"}},[r._v("Gogs"),t("OutboundLink")],1),r._v(" - 自我托管的Git服务")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/inconshreveable/Gonative",target:"_blank",rel:"noopener noreferrer"}},[r._v("Gonative"),t("OutboundLink")],1),r._v(" - 为 Go 语言创建可以在多平台进行交叉编译的工具，使用 CGo-enabled 标准库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/ahmetalpbalkan/Govvv",target:"_blank",rel:"noopener noreferrer"}},[r._v("Govvv"),t("OutboundLink")],1),r._v(" - 对“Go build”进行了封装，用于轻松的向 Go 语言二进制文件中添加版本信息")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/mitchellh/Gox",target:"_blank",rel:"noopener noreferrer"}},[r._v("Gox"),t("OutboundLink")],1),r._v(" - 非常简单的 Go 语言交叉编译工具")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/laher/Goxc",target:"_blank",rel:"noopener noreferrer"}},[r._v("Goxc"),t("OutboundLink")],1),r._v(" - Go 语言构建工具，专注于交叉编译和打包")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/yaronsumel/grapes",target:"_blank",rel:"noopener noreferrer"}},[r._v("grapes"),t("OutboundLink")],1),r._v(" - 一款轻量级工具，用于通过 ssh 发送命令")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/moovweb/gvm",target:"_blank",rel:"noopener noreferrer"}},[r._v("GVM"),t("OutboundLink")],1),r._v(" - GVM 提供了用于管理 Go 语言版本的接口")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/rakyll/hey",target:"_blank",rel:"noopener noreferrer"}},[r._v("Hey"),t("OutboundLink")],1),r._v(" - Hey 是一个微型程序，用于向 web 应用发送一些載荷")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/ajvb/kala",target:"_blank",rel:"noopener noreferrer"}},[r._v("kala"),t("OutboundLink")],1),r._v(" - 极简、现代的、高效的任务调度")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/kubernetes/kubernetes",target:"_blank",rel:"noopener noreferrer"}},[r._v("kubernetes"),t("OutboundLink")],1),r._v(" - 来自 Google 的容器集群管理器")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/moby/moby",target:"_blank",rel:"noopener noreferrer"}},[r._v("Moby"),t("OutboundLink")],1),r._v(" - 为容器生态系统创建的一个合作项目，用于构建基于容器的系统")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/emicklei/mora",target:"_blank",rel:"noopener noreferrer"}},[r._v("Mora"),t("OutboundLink")],1),r._v(" - REST 服务器，用于获取 MonGoDB 文件和元数据")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/ostrost/ostent",target:"_blank",rel:"noopener noreferrer"}},[r._v("ostent"),t("OutboundLink")],1),r._v(" - 收集并显示系统数据，可以作 Graphite 和／或 InfluxDB 的中继")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/mitchellh/packer",target:"_blank",rel:"noopener noreferrer"}},[r._v("Packer"),t("OutboundLink")],1),r._v(" - Packer 通过单一的配置文件，为不同的平台创建独立机器镜像")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/bengadbois/pewpew",target:"_blank",rel:"noopener noreferrer"}},[r._v("Pewpew"),t("OutboundLink")],1),r._v(" - 灵活的 HTTP 命令行压力测试 工具")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/alouche/rodent",target:"_blank",rel:"noopener noreferrer"}},[r._v("Rodent"),t("OutboundLink")],1),r._v(" - Rodent 帮助你管理 Go 语言版本，项目病追踪依赖")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/rlmcpherson/s3Gof3r",target:"_blank",rel:"noopener noreferrer"}},[r._v("s3Gof3r"),t("OutboundLink")],1),r._v(" - 为了从 Amazon S3中高速存取大型对象而特别优化的库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/scaleway/scaleway-cli",target:"_blank",rel:"noopener noreferrer"}},[r._v("Scaleway-cli"),t("OutboundLink")],1),r._v(" - 通过命令行来管理 BareMetal 服务器 (和使用 Docker 一样容易).")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/ChristopherRabotin/sg",target:"_blank",rel:"noopener noreferrer"}},[r._v("sg"),t("OutboundLink")],1),r._v(" - 对一组 HTTP 端点 (比如 ab)进行了基准测试， with possibility to use the reponse code and data between each call for specific server stress based on its previous response.")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/sanathp/statusok",target:"_blank",rel:"noopener noreferrer"}},[r._v("StatusOK"),t("OutboundLink")],1),r._v(" - 监控你的网站和 REST APIs。如果你的服务器挂了或是响应时间超过预期，则会通过 Slack, E-mail 来通知你")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/tsenart/vegeta",target:"_blank",rel:"noopener noreferrer"}},[r._v("Vegeta"),t("OutboundLink")],1),r._v(" - HTTP 加载测试工具和库")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/adnanh/webhook",target:"_blank",rel:"noopener noreferrer"}},[r._v("webhook"),t("OutboundLink")],1),r._v(" - 允许用户创建 HTTP 端点，在服务器上执行命令")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://wide.b3log.org/login",target:"_blank",rel:"noopener noreferrer"}},[r._v("Wide"),t("OutboundLink")],1),r._v(" - 基于 Web 的 IDE，为使用 Go 语言的团队设计")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/masterzen/winrm-cli",target:"_blank",rel:"noopener noreferrer"}},[r._v("winrm-cli"),t("OutboundLink")],1),r._v(" - 命令行工具，可以远程在 windows 机器上执行命令")])])])])]),t("div",{staticClass:"masonry-card"},[t("div",{staticClass:"masonry-card-box"},[t("div",{staticClass:"masonry-card-content"},[t("div",{staticClass:"title"},[r._v("其他软件")]),t("ul",[t("li",[t("a",{attrs:{href:"https://github.com/crufter/borg",target:"_blank",rel:"noopener noreferrer"}},[r._v("borg"),t("OutboundLink")],1),r._v(" - 基于终端的搜索引擎，用于搜索 bash 代码 片段")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/tejo/boxed",target:"_blank",rel:"noopener noreferrer"}},[r._v("boxed"),t("OutboundLink")],1),r._v(" - 基于Dropbox 的博客引擎")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/rafael-santiaGo/cherry",target:"_blank",rel:"noopener noreferrer"}},[r._v("Cherry"),t("OutboundLink")],1),r._v(" - Go 语言实现的一个微型网络聊天服务器")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/Gocircuit/circuit",target:"_blank",rel:"noopener noreferrer"}},[r._v("Circuit"),t("OutboundLink")],1),r._v(" - Circuit 是一个可编程的 PaaS 以及 IaaS,用于管理、发现以及编排各种云端应用的服务及主机")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/tylertreat/Comcast",target:"_blank",rel:"noopener noreferrer"}},[r._v("Comcast"),t("OutboundLink")],1),r._v(" - 模拟不佳的网络连接")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/kelseyhightower/confd",target:"_blank",rel:"noopener noreferrer"}},[r._v("confd"),t("OutboundLink")],1),r._v(" - 使用 etcd 或 consul 的模板及数据管理本地应用的配置文件")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/skibish/ddns",target:"_blank",rel:"noopener noreferrer"}},[r._v("DDNS"),t("OutboundLink")],1),r._v(" - 个人 DDNS 客户端，使用 Digital Ocean DNS 作为后端")]),r._v(" "),t("li",[t("a",{attrs:{href:"http://www.docker.com/",target:"_blank",rel:"noopener noreferrer"}},[r._v("Docker"),t("OutboundLink")],1),r._v(" - 一个为开发者和系统管理员提供的分布式应用开放平台")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/documize/community",target:"_blank",rel:"noopener noreferrer"}},[r._v("Documize"),t("OutboundLink")],1),r._v(" - 现代维基百科软件，可以继承 SaaS 工具提供的数据")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/coreos/fleet",target:"_blank",rel:"noopener noreferrer"}},[r._v("fleet"),t("OutboundLink")],1),r._v(" - 分布式初始化系统")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/shurcooL/Go-Package-Store#Go-package-store-",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go Package Store"),t("OutboundLink")],1),r._v(" - 一个可以显示你的 GoPATH 路径下 Go 软件包的更新的应用")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/Goccmack/Gocc",target:"_blank",rel:"noopener noreferrer"}},[r._v("Gocc"),t("OutboundLink")],1),r._v(" - Gocc 是一个用 Go 语言编写的 Go 语言编辑器工具集")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/diankong/GoDocTooltip",target:"_blank",rel:"noopener noreferrer"}},[r._v("GoDocTooltip"),t("OutboundLink")],1),r._v(" - 一个Chrome 浏览器扩展，可以在浏览 Go 语言文档时以工具提示的方式显示函数的描述信息")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://jetbrains.com/Go",target:"_blank",rel:"noopener noreferrer"}},[r._v("Gogland"),t("OutboundLink")],1),r._v(" - 跨平台、全功能 Go 语言集成开发环境")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/buger/Gor",target:"_blank",rel:"noopener noreferrer"}},[r._v("Gor"),t("OutboundLink")],1),r._v(" - Http 流量复制工具，用于将生产环境的流量在开发环境实施重现")]),r._v(" "),t("li",[t("a",{attrs:{href:"http://ambrevar.bitbucket.org/hsync/",target:"_blank",rel:"noopener noreferrer"}},[r._v("hsync"),t("OutboundLink")],1),r._v(" - 文件系统同步工具")]),r._v(" "),t("li",[t("a",{attrs:{href:"http://GohuGo.io/",target:"_blank",rel:"noopener noreferrer"}},[r._v("huGo"),t("OutboundLink")],1),r._v(" - 快速、现代的静态 web 引擎")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/dimiro1/ipe",target:"_blank",rel:"noopener noreferrer"}},[r._v("ipe"),t("OutboundLink")],1),r._v(" - 开源 Pusher 服务器，Go 语言编写，兼容 Pusher 客户端，由 Go 语言编写")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/yazgazan/jaydiff",target:"_blank",rel:"noopener noreferrer"}},[r._v("JayDiff"),t("OutboundLink")],1),r._v(" - Go 语言编写的JSON对比工具")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://jujucharms.com/",target:"_blank",rel:"noopener noreferrer"}},[r._v("Juju"),t("OutboundLink")],1),r._v(" - 服务部署及编排工具，，支持 EC2, Azure, Openstack, MAAS 等等")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/jeffail/leaps",target:"_blank",rel:"noopener noreferrer"}},[r._v("Leaps"),t("OutboundLink")],1),r._v(" - 结对编程服务，使用操作变换来避免冲突。")]),r._v(" "),t("li",[t("a",{attrs:{href:"http://limetext.org/",target:"_blank",rel:"noopener noreferrer"}},[r._v("limetext"),t("OutboundLink")],1),r._v(" Lime Text 是一个强大又优雅的编辑器，主要使用 Go 语言开发，意在成为 Sublime Text的继承者。")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/visualfc/liteide",target:"_blank",rel:"noopener noreferrer"}},[r._v("LiteIDE"),t("OutboundLink")],1),r._v(" - LiteIDE 是一个简单、开源、跨平台的 Go 语言 IDE")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/quii/mockingjay-server",target:"_blank",rel:"noopener noreferrer"}},[r._v("mockingjay"),t("OutboundLink")],1),r._v(" - 伪 HTTP 服务器，通过单一配置文件创建消费驱动。同时你还可以让服务器搞点事情，以进行更加符合现实情况的性能测试")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/mehrdadrad/mylg",target:"_blank",rel:"noopener noreferrer"}},[r._v("myLG"),t("OutboundLink")],1),r._v(" - Go 语言编写的命令行网络诊断工具")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/unix4fun/naclpipe",target:"_blank",rel:"noopener noreferrer"}},[r._v("naclpipe"),t("OutboundLink")],1),r._v(" - 简单的基于NaCL EC25519 的加密管道工具")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/fogleman/nes",target:"_blank",rel:"noopener noreferrer"}},[r._v("nes"),t("OutboundLink")],1),r._v(" - Go 语言编写的任天堂娱乐系统(NES)模拟器")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/noraesae/orange-cat",target:"_blank",rel:"noopener noreferrer"}},[r._v("orange-cat"),t("OutboundLink")],1),r._v(" - Go 语言编写的 Markdown 预览工具")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/pointlander/peg",target:"_blank",rel:"noopener noreferrer"}},[r._v("peg"),t("OutboundLink")],1),r._v(" - Peg（Parsing Expression Grammar）是一个 Packrat parser generator 的实现")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/zachlatta/postman",target:"_blank",rel:"noopener noreferrer"}},[r._v("Postman"),t("OutboundLink")],1),r._v(" - 一个批量发送邮件的命令行工具")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/restic/restic",target:"_blank",rel:"noopener noreferrer"}},[r._v("restic"),t("OutboundLink")],1),r._v(" - 解耦备份程序")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/coreos/rkt",target:"_blank",rel:"noopener noreferrer"}},[r._v("rkt"),t("OutboundLink")],1),r._v(" - App 容器运行时，集成了初始化系统，和其他容器兼容，比如 Docker，并且支持其他执行引擎，例如 KVM")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/chrislusf/seaweedfs",target:"_blank",rel:"noopener noreferrer"}},[r._v("Seaweed File System"),t("OutboundLink")],1),r._v(" - 快速、简单、可扩展的分布式文件系统，具有O(1)的磁盘查找效率")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/msoap/shell2http",target:"_blank",rel:"noopener noreferrer"}},[r._v("shell2http"),t("OutboundLink")],1),r._v(" - 通过 HTTP 服务器执行 shell 命令行(用于原型验证或远程控制).")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/intelsdi-x/snap",target:"_blank",rel:"noopener noreferrer"}},[r._v("snap"),t("OutboundLink")],1),r._v(" - 强大的遥测框架")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/pressly/sup",target:"_blank",rel:"noopener noreferrer"}},[r._v("Stack Up"),t("OutboundLink")],1),r._v(" - Stack Up 是一个超级简单的开发工具，就好比是服务器网络的 ‘make’ 工具")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://syncthing.net/",target:"_blank",rel:"noopener noreferrer"}},[r._v("syncthing"),t("OutboundLink")],1),r._v(" - 开源、去中心化的文件同步工具和协议")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/kyleterry/tenyks",target:"_blank",rel:"noopener noreferrer"}},[r._v("Tenyks"),t("OutboundLink")],1),r._v(" - 面向服务的 IRC 机器人，使用 Redis 和 JSON 来发送消息")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/blogcin/ToTo",target:"_blank",rel:"noopener noreferrer"}},[r._v("toto"),t("OutboundLink")],1),r._v(" - Go 语言编写的简单代理服务器，可以和浏览器一起使用")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/shopify/toxiproxy",target:"_blank",rel:"noopener noreferrer"}},[r._v("toxiproxy"),t("OutboundLink")],1),r._v(" - 模拟网络和系统状态的代理，用于自动化测试")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://tsuru.io/",target:"_blank",rel:"noopener noreferrer"}},[r._v("tsuru"),t("OutboundLink")],1),r._v(" - 可扩展的、开源的 SAAS 软件")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/VerizonDigital/vflow",target:"_blank",rel:"noopener noreferrer"}},[r._v("vFlow"),t("OutboundLink")],1),r._v(" - 高性能、可扩展、可靠的 IPFIX, sFlow 和 Netflow 集合.")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/ian-kent/websysd",target:"_blank",rel:"noopener noreferrer"}},[r._v("websysd"),t("OutboundLink")],1),r._v(" - 基于 web 的进程管理工具(类似 Marathon 或 Upstart).")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/wellington/wellington",target:"_blank",rel:"noopener noreferrer"}},[r._v("wellington"),t("OutboundLink")],1),r._v(" - Sass 项目管理工具， 通过支持一些功能（例如Compass）扩展了这门语言")])]),r._v(" "),t("p",[t("em",[r._v("可以找到新的 Go 语言库和软件的地方")])])])])]),t("div",{staticClass:"masonry-card"},[t("div",{staticClass:"masonry-card-box"},[t("div",{staticClass:"masonry-card-content"},[t("div",{staticClass:"title"},[r._v("基准测试")]),t("ul",[t("li",[t("a",{attrs:{href:"https://github.com/davecheney/autobench",target:"_blank",rel:"noopener noreferrer"}},[r._v("autobench"),t("OutboundLink")],1),r._v(" - 用于比较各个不同版本 Go 语言之间的性能的框架")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/mrLSD/Go-benchmark-app",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-benchmark-app"),t("OutboundLink")],1),r._v(" - 强大的 HTTP 基准测试工具，集成来 Аb, Wrk, Siege 工具。收集来统计数据以及多种参数用于基准测试和结果比较")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/tylertreat/Go-benchmarks",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-benchmarks"),t("OutboundLink")],1),r._v(" - 一些基准程序的大杂烩。用于比较一些语言特性以及它们的替代方法.")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/julienschmidt/Go-HTTP-routing-benchmark",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-HTTP-routing-benchmark"),t("OutboundLink")],1),r._v(" - Go HTTP 请求路由基准和比较")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/hgfischer/Go-type-assertion-benchmark",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-type-assertion-benchmark"),t("OutboundLink")],1),r._v(" - 对在 Go 语言中使用断言的两种方法进行了性能测试")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/smallnest/Go-web-framework-benchmark",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go-web-framework-benchmark"),t("OutboundLink")],1),r._v(" - Go web 框架基准")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/alecthomas/Go_serialization_benchmarks",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go_serialization_benchmarks"),t("OutboundLink")],1),r._v(" - Go 语言序列化方法基准测试")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/PuerkitoBio/Gocostmodel",target:"_blank",rel:"noopener noreferrer"}},[r._v("Gocostmodel"),t("OutboundLink")],1),r._v(" - Go 语言基础操作基准测试")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/amscanne/Golang-micro-benchmarks",target:"_blank",rel:"noopener noreferrer"}},[r._v("Golang-micro-benchmarks"),t("OutboundLink")],1),r._v(" - 一些go语言微基准测试的集合，目的是比较各种语言特性。")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/tyler-smith/Golang-sql-benchmark",target:"_blank",rel:"noopener noreferrer"}},[r._v("Golang-sql-benchmark"),t("OutboundLink")],1),r._v(" - 对一些流行的 Go database/SQL 工具进行基准测试")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/feyeleanor/GoSpeed",target:"_blank",rel:"noopener noreferrer"}},[r._v("Gospeed"),t("OutboundLink")],1),r._v(" - Go 语言微型基准测试工具，用于测试语言结构的速度")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/jimrobinson/kvbench",target:"_blank",rel:"noopener noreferrer"}},[r._v("kvbench"),t("OutboundLink")],1),r._v(" - 键值数据库基准测试")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/atemerev/skynet",target:"_blank",rel:"noopener noreferrer"}},[r._v("skynet"),t("OutboundLink")],1),r._v(" - Skynet 1M 线程微基准")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/fawick/speedtest-resize",target:"_blank",rel:"noopener noreferrer"}},[r._v("speedtest-resize"),t("OutboundLink")],1),r._v(" - 比较了 Go 语言的多种图片缩放算法")])])])])]),t("div",{staticClass:"masonry-card"},[t("div",{staticClass:"masonry-card-box"},[t("div",{staticClass:"masonry-card-content"},[t("div",{staticClass:"title"},[r._v("会议")]),t("ul",[t("li",[t("a",{attrs:{href:"http://www.capitalGolang.com",target:"_blank",rel:"noopener noreferrer"}},[r._v("Capital Go"),t("OutboundLink")],1),r._v(" - 美国华盛顿")]),r._v(" "),t("li",[t("a",{attrs:{href:"http://www.dotGo.eu",target:"_blank",rel:"noopener noreferrer"}},[r._v("dotGo"),t("OutboundLink")],1),r._v(" - 法国巴黎")]),r._v(" "),t("li",[t("a",{attrs:{href:"http://Gocon.connpass.com/",target:"_blank",rel:"noopener noreferrer"}},[r._v("GoCon"),t("OutboundLink")],1),r._v(" - 日本东京")]),r._v(" "),t("li",[t("a",{attrs:{href:"http://Golanguk.com/",target:"_blank",rel:"noopener noreferrer"}},[r._v("GolangUK"),t("OutboundLink")],1),r._v(" - 英国伦敦")]),r._v(" "),t("li",[t("a",{attrs:{href:"http://Gopherchina.org",target:"_blank",rel:"noopener noreferrer"}},[r._v("GopherChina"),t("OutboundLink")],1),r._v(" - 中国上海")]),r._v(" "),t("li",[t("a",{attrs:{href:"http://www.Gophercon.com/",target:"_blank",rel:"noopener noreferrer"}},[r._v("GopherCon"),t("OutboundLink")],1),r._v(" - 美国丹佛")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://Gopherconbr.org",target:"_blank",rel:"noopener noreferrer"}},[r._v("GopherCon Brazil"),t("OutboundLink")],1),r._v(" - 巴西弗洛里亚诺波利斯")]),r._v(" "),t("li",[t("a",{attrs:{href:"http://www.Gophercon.ae/",target:"_blank",rel:"noopener noreferrer"}},[r._v("GopherCon Dubai"),t("OutboundLink")],1),r._v(" - 迪拜")]),r._v(" "),t("li",[t("a",{attrs:{href:"http://www.Gophercon.in/",target:"_blank",rel:"noopener noreferrer"}},[r._v("GopherCon India"),t("OutboundLink")],1),r._v(" - 印度普纳")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://Gophercon.sg",target:"_blank",rel:"noopener noreferrer"}},[r._v("GopherCon Singapore"),t("OutboundLink")],1),r._v(" - 新加坡丰树商业城")]),r._v(" "),t("li",[t("a",{attrs:{href:"http://GothamGo.com/",target:"_blank",rel:"noopener noreferrer"}},[r._v("GothamGo"),t("OutboundLink")],1),r._v(" - 美国纽约")])])])])]),t("div",{staticClass:"masonry-card"},[t("div",{staticClass:"masonry-card-box"},[t("div",{staticClass:"masonry-card-content"},[t("div",{staticClass:"title"},[r._v("E-Books")]),t("ul",[t("li",[t("a",{attrs:{href:"https://leanpub.com/GoNotebook/read",target:"_blank",rel:"noopener noreferrer"}},[r._v("A Go Developer's Notebook"),t("OutboundLink")],1)]),r._v(" "),t("li",[t("a",{attrs:{href:"http://www.Golang-book.com/",target:"_blank",rel:"noopener noreferrer"}},[r._v("An Introduction to Programming in Go"),t("OutboundLink")],1)]),r._v(" "),t("li",[t("a",{attrs:{href:"https://www.gitbook.com/book/astaxie/build-web-application-with-Golang/details",target:"_blank",rel:"noopener noreferrer"}},[r._v("Build Web Application with Golang"),t("OutboundLink")],1)]),r._v(" "),t("li",[t("a",{attrs:{href:"https://www.gitbook.com/book/codegangsta/building-web-apps-with-Go/details",target:"_blank",rel:"noopener noreferrer"}},[r._v("Building Web Apps With Go"),t("OutboundLink")],1)]),r._v(" "),t("li",[t("a",{attrs:{href:"http://Golangbootcamp.com",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go Bootcamp"),t("OutboundLink")],1)]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/dariubs/GoBooks",target:"_blank",rel:"noopener noreferrer"}},[r._v("GoBooks"),t("OutboundLink")],1),r._v(" - Go 语言书籍列表")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://www.miek.nl/downloads/Go/Learning-Go-latest.pdf",target:"_blank",rel:"noopener noreferrer"}},[r._v("Learning Go"),t("OutboundLink")],1)]),r._v(" "),t("li",[t("a",{attrs:{href:"https://jan.newmarch.name/Go/",target:"_blank",rel:"noopener noreferrer"}},[r._v("Network Programming With Go"),t("OutboundLink")],1)]),r._v(" "),t("li",[t("a",{attrs:{href:"http://www.Gopl.io/",target:"_blank",rel:"noopener noreferrer"}},[r._v("The Go Programming Language"),t("OutboundLink")],1)]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/thewhitetulip/web-dev-Golang-anti-textbook/",target:"_blank",rel:"noopener noreferrer"}},[r._v("Web Application with Go the Anti-Textbook"),t("OutboundLink")],1)])])])])]),t("div",{staticClass:"masonry-card"},[t("div",{staticClass:"masonry-card-box"},[t("div",{staticClass:"masonry-card-content"},[t("div",{staticClass:"title"},[r._v("Twitter")]),t("ul",[t("li",[t("a",{attrs:{href:"https://twitter.com/Golang",target:"_blank",rel:"noopener noreferrer"}},[r._v("@Golang"),t("OutboundLink")],1)]),r._v(" "),t("li",[t("a",{attrs:{href:"https://twitter.com/Golang_news",target:"_blank",rel:"noopener noreferrer"}},[r._v("@Golang_news"),t("OutboundLink")],1)]),r._v(" "),t("li",[t("a",{attrs:{href:"https://twitter.com/Golangflow",target:"_blank",rel:"noopener noreferrer"}},[r._v("@Golangflow"),t("OutboundLink")],1)]),r._v(" "),t("li",[t("a",{attrs:{href:"https://twitter.com/Golangweekly",target:"_blank",rel:"noopener noreferrer"}},[r._v("@Golangweekly"),t("OutboundLink")],1)])])])])]),t("div",{staticClass:"masonry-card"},[t("div",{staticClass:"masonry-card-box"},[t("div",{staticClass:"masonry-card-content"},[t("div",{staticClass:"title"},[r._v("网站")]),t("ul",[t("li",[t("a",{attrs:{href:"https://Go.libhunt.com",target:"_blank",rel:"noopener noreferrer"}},[r._v("Awesome Go @LibHunt"),t("OutboundLink")],1),r._v(" - Your Go-to Go Toolbox.")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/lukasz-madon/awesome-remote-job",target:"_blank",rel:"noopener noreferrer"}},[r._v("Awesome Remote Job"),t("OutboundLink")],1),r._v(" - 一个发布远程工作的列表。上面有很多人都在寻找 Go 语言程序员")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/bayandin/awesome-awesomeness",target:"_blank",rel:"noopener noreferrer"}},[r._v("awesome-awesomeness"),t("OutboundLink")],1),r._v(" - 汇集了其他 Awesome 系列列表的聚合列表")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://flipboard.com/section/the-Golang-magazine-bVP7nS",target:"_blank",rel:"noopener noreferrer"}},[r._v("Flipboard - Go Magazine"),t("OutboundLink")],1),r._v(" - 汇集了 Go 语言的教程和文章")]),r._v(" "),t("li",[t("a",{attrs:{href:"http://blog.Golang.org",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go Blog"),t("OutboundLink")],1),r._v(" - Go 语言官方博客")]),r._v(" "),t("li",[t("a",{attrs:{href:"http://Golang-challenge.org/",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go Challenge"),t("OutboundLink")],1),r._v(" - 通过解题来学习 Go 语言，同时获得专家们的反馈")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://forum.Golangbridge.org",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go Forum"),t("OutboundLink")],1),r._v(" - 讨论 Go 的论坛.")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://www.Goin5minutes.com/",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go In 5 Minutes"),t("OutboundLink")],1),r._v(" - 5 分钟分享如何做好一件事")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/Golang/Go/wiki/Projects",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go Projects"),t("OutboundLink")],1),r._v(" - Go 语言社区 wiki 列表中的项目")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/ninedraft/Gocryforhelp",target:"_blank",rel:"noopener noreferrer"}},[r._v("Gocryforhelp"),t("OutboundLink")],1),r._v(" - 汇集了一些需要帮助的 Go 语言项目。一个开始你的开源之路的好地方")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://Godoc.org/",target:"_blank",rel:"noopener noreferrer"}},[r._v("Godoc.org"),t("OutboundLink")],1),r._v(" - 开源 Go 语言软件包的文档库.")]),r._v(" "),t("li",[t("a",{attrs:{href:"http://Golangflow.io",target:"_blank",rel:"noopener noreferrer"}},[r._v("Golang Flow"),t("OutboundLink")],1),r._v(" - 不断更新的博客、新闻、软件等等")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://Golangnews.com",target:"_blank",rel:"noopener noreferrer"}},[r._v("Golang News"),t("OutboundLink")],1),r._v(" - 关于 Go 语言编程的一些链接.")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/mholt/Golang-graphics",target:"_blank",rel:"noopener noreferrer"}},[r._v("Golang-graphics"),t("OutboundLink")],1),r._v(" - 关于 Go 语言的图片及艺术作品")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://groups.Google.com/forum/#!forum/Golang-nuts",target:"_blank",rel:"noopener noreferrer"}},[r._v("Golang-nuts"),t("OutboundLink")],1),r._v(" - Go 邮件列表")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://plus.Google.com/communities/114112804251407510571",target:"_blank",rel:"noopener noreferrer"}},[r._v("Google Plus Community"),t("OutboundLink")],1),r._v(" - Go 语言爱好者的 Google+ 社区")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://Gowalker.org",target:"_blank",rel:"noopener noreferrer"}},[r._v("Gowalker.org"),t("OutboundLink")],1),r._v(" - Go 语言项目 API 文档")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://www.reddit.com/r/Golang",target:"_blank",rel:"noopener noreferrer"}},[r._v("r/Golang"),t("OutboundLink")],1),r._v(" - Go 语言新闻")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/trending?l=Go",target:"_blank",rel:"noopener noreferrer"}},[r._v("Trending Go repositories on GitHub today"),t("OutboundLink")],1),r._v(" - 一个寻找 Go 语言新库和软件的好地方")])])])])]),t("div",{staticClass:"masonry-card"},[t("div",{staticClass:"masonry-card-box"},[t("div",{staticClass:"masonry-card-content"},[t("div",{staticClass:"title"},[r._v("教程")]),t("ul",[t("li",[t("a",{attrs:{href:"http://tour.Golang.org/",target:"_blank",rel:"noopener noreferrer"}},[r._v("A Tour of Go"),t("OutboundLink")],1),r._v(" - 一个交互式的 Go 语言教程")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/astaxie/build-web-application-with-Golang",target:"_blank",rel:"noopener noreferrer"}},[r._v("Build web application with Golang"),t("OutboundLink")],1),r._v(" - Go 语言电子书，讲解如何编写一个 web 应用")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://semaphoreci.com/community/tutorials/building-Go-web-applications-and-microservices-using-gin",target:"_blank",rel:"noopener noreferrer"}},[r._v("Building Go Web Applications and Microservices Using Gin"),t("OutboundLink")],1),r._v(" - 学习 Gin 以及了解如何使用 Gin 帮你减少模板代码并建立一个请求处理流水线")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://Gobyexample.com/",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go By Example"),t("OutboundLink")],1),r._v(" - 通过带注解的例程帮助你动手实践学习 Go 语言")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/a8m/Go-lang-cheat-sheet",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go Cheat Sheet"),t("OutboundLink")],1),r._v(" - Go 参考手册")]),r._v(" "),t("li",[t("a",{attrs:{href:"http://Go-database-sql.org/",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go database/sql tutorial"),t("OutboundLink")],1),r._v(" - 介绍数据库及 sql")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://Golangbot.com/learn-Golang-series/",target:"_blank",rel:"noopener noreferrer"}},[r._v("Golangbot"),t("OutboundLink")],1),r._v(" - Go 语言初学者教程")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://semaphoreci.com/community/tutorials/how-to-use-Godog-for-behavior-driven-development-in-Go",target:"_blank",rel:"noopener noreferrer"}},[r._v("How to Use Godog for Behavior-driven Development in Go"),t("OutboundLink")],1),r._v(" - 学习使用 Godog — 一个行为驱动型开发框架，用于构建和测试 Go 语言应用")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/mkaz/working-with-Go",target:"_blank",rel:"noopener noreferrer"}},[r._v("Working with Go"),t("OutboundLink")],1),r._v(" - 为有经验的程序员提供的 Go 语言教程")])])])])])])}),[],!1,null,null,null);e.default=n.exports}}]);