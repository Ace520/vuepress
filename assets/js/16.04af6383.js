(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{396:function(s,t,n){"use strict";n.r(t);var a=n(17),e=Object(a.a)({},(function(){var s=this,t=s.$createElement,n=s._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("div",{staticClass:"card"},[n("div",{staticClass:"card-box"},[n("div",{staticClass:"card-content"},[n("div",{staticClass:"title"},[s._v("终端技巧")]),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("使用 Ctrl 键\nCtrl + n "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" 类似向下的键\nCtrl + p "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" 类似向上的键\nCtrl + r "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" 反向搜索命令的历史记录（按住 Ctrl + r "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nCtrl + s "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" 终端停止输出.（译者注：如 "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("apt")]),s._v(" / yum，nload，watch 等，按 Enter 继续输出）\nCtrl + q "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" 在 Ctrl + s 之后重新恢复之前的 terminal.\nCtrl + a "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" 移动光标到行的开始处\nCtrl + e "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" 移动光标到行的结尾处\nCtrl + d "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" 如果当前的 terminal 命令行有输入，Ctrl + d 或删除光标处的字符，否则会退出当前的 terminal\nCtrl + k "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" 删除从当前光标到结尾的所有字符\nCtrl + x + backspace "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" 删除当前光标到行开始的所有字符\nCtrl + t "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" 交换当前光标下的字符和其前面字符的位置。Esc + t 交换光标前面的两个单词\nCtrl + w "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" 剪切光标之前的单词，然后 Ctrl + y 粘贴它\nCtrl + u "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" 剪切光标之前的行"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" 然后 Ctrl + y 粘贴它\nCtrl + _ "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" 撤销之前的操作\nCtrl + l "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" 相当于清除\nCtrl + x + Ctrl + e "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" 召唤起 "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$EDITOR")]),s._v(" 环境变量设置的编辑器程序，对多行命令有效\n更改大小写\nEsc + u\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 将文本从光标的开始到结尾的单词转换为大写")]),s._v("\nEsc + l\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 将文本从光标的开始到结尾的单词转换为小写")]),s._v("\nEsc + c\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 将光标下的字母转换为大写")]),s._v("\n运行历史记录编号 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("例如 e.g. "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("53")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("53")]),s._v("\n运行最后一条命令\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n运行最后一个命令并且使用参入号替换之前运行的参数 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("例如最后一个命令 "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'aaa'")]),s._v(" -"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" 现在运行: "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'bbb'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#最后的一条命令: echo 'aaa'")]),s._v("\n^aaa^bbb\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#echo 'bbb'")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#bbb")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#注意只有唯一的第一个 aaa 将会被替代，如果你想替代所有的 aaa，使用「:&」替代：")]),s._v("\n^aaa^bbb^:"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#或者")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v(":gs/aaa/bbb/\n运行以开头的命令 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("e.g. "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" 文件名"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("cat\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 或者")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("c\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#再次运行cat文件名")]),s._v("\nBash 通配符\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# '*' 用作文件名扩展的 \"通配符\" 。")]),s._v("\n/b?n/?at      "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#/bin/cat")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# '?' 用作文件名扩展的单字符 \"通配符\" 。")]),s._v("\n/etc/pa*wd    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#/etc/passwd")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ‘[]’ 用于匹配范围内的字符。")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" -l "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("a-z"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("*   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#列出所有文件名中带有字母的文件。")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ‘{}’ 可用于匹配多个模式的文件名 ")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("*.sh,*.py"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#列出所有.sh和.py文件")]),s._v("\n一些方便的环境变量\n"),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$0")]),s._v("   :shell或shell脚本的名称。\n"),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$1")]),s._v(", "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$2")]),s._v(", "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$3")]),s._v(", "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(". :位置参数。\n"),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$#")]),s._v("   :位置参数的数量。\n"),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$?")]),s._v("   :最新的管道退出状态。\n$-   :为shell设置的当前选项。\n"),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$$")]),s._v("   :当前shell（不是subshell）的pid。\n"),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$!")]),s._v("   :最新后台命令的PID。\n\n"),n("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$DESKTOP_SESSION")]),s._v("     当前显示管理器\n"),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$EDITOR")]),s._v("   首选文本编辑器。\n"),n("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$LANG")]),s._v("   当前语言。\n"),n("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$PATH")]),s._v("   搜索可执行文件的目录列表（即准备运行的程序）\n"),n("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$PWD")]),s._v("    当前目录\n"),n("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$SHELL")]),s._v("  当前 shell\n"),n("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$USER")]),s._v("   当前用户名\n"),n("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$HOSTNAME")]),s._v("   当前主机名\n")])])])])])]),n("div",{staticClass:"card"},[n("div",{staticClass:"card-box"},[n("div",{staticClass:"card-content"},[n("div",{staticClass:"title"},[s._v("筛选")]),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("筛选类型\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" -G "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Basic Regular Expression (BRE)")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("fgrep")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" -F "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# fixed text, ignoring meta-charachetrs")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("egrep")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" -E "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Extended Regular Expression (ERE)")]),s._v("\npgrep "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" -P "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Perl Compatible Regular Expressions (PCRE)")]),s._v("\nrgrep "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" -r "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# recursive")]),s._v("\n筛选并计算空行数\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" -c "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"^$"')]),s._v("\n筛选且仅返回整数\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" -o "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'[0-9]*'")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#or")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" -oP "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'\\d'")]),s._v("\n筛选带一定位数的整数（例如 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("）\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" ‘"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("-9"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("’\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# or")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" -E ‘"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("-9"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("’\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# or")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" -P ‘"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("d"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("’\n筛选仅 IP 地址\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" -Eo "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}'")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# or")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" -Po "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}'")]),s._v("\n筛选整个单词（例如 “target” ）\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" -w "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'target'")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#or using RE")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'"),n("span",{pre:!0,attrs:{class:"token entity",title:"\\b"}},[s._v("\\b")]),s._v("target"),n("span",{pre:!0,attrs:{class:"token entity",title:"\\b"}},[s._v("\\b")]),s._v("'")]),s._v("\n筛选匹配前后返回的行（例如 “bbo”）\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# return also 3 lines after match")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" -A "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'bbo'")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# return also 3 lines before match")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" -B "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'bbo'")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# return also 3 lines before and after match")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" -C "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'bbo'")]),s._v("\n查找开始字符（例如 “S”）\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" -o "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'S.*'")]),s._v("\n单词中截取文本（例如 w1，w2 ）\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" -o -P "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'(?<=w1).*(?=w2)'")]),s._v("\n查找不包含单词的行（例如 bbo ）\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" -v bbo filename\n查找不以某字符串开头的行（例如 "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ）")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" -v "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'^#'")]),s._v(" file.txt\n查找变量（例如 "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("bbo")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"some strings"')]),s._v(" ）\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$boo")]),s._v('"')]),s._v(" filename\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#remember to quote the variable!")]),s._v("\n查找仅有一个或者第一个匹配（例如 bbo ）\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" -m "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" bbo filename\n查找并返回匹配的行数（例如 bb ）\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" -c bbo filename\n出现次数 （例如一行出现 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" 次则记为 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" 次）\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" -o bbo filename "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("wc")]),s._v(" -l\n区分大小写查找（例如 bbo/BBO/Bbo ）\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" -i "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"bbo"')]),s._v(" filename\n匹配颜色标记（例如 bbo "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" --color bbo filename\n查找文件夹内所有文件（例如 bbo ）\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" -R bbo /path/to/directory\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# or")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" -r bbo /path/to/directory\n查找文件夹内所有文件，不输出文件名（例如 bbo ）\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" -rh bbo /path/to/directory\n查找文件夹内所有文件，只输出匹配的文件名（例如 bbo ）\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" -rl bbo /path/to/directory\n或查找（例如 A 或 B 或 C 或 D ）\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'A\\|B\\|C\\|D'")]),s._v("\n与查找（例如 A 与 B ）\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'A.*B'")]),s._v("\n正则匹配任意字符（例如 ACB 或 AEB ）\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'A.B'")]),s._v("\n正则匹配一个确定或者不确定的字符（例如 color 或 colour ）\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" ‘colou?r’\n在文件 B 中查找文件 A 的内容\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" -f fileA fileB\n查找制表符\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" $"),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'"),n("span",{pre:!0,attrs:{class:"token entity",title:"\\t"}},[s._v("\\t")]),s._v("'")]),s._v("\n在一个变量中查找另一个变量\n"),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$long_str")]),s._v('"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" -q "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$short_str")]),s._v('"')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$?")]),s._v(" -eq "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'found'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#grep -q will output 0 if match found")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#remember to add space between []!")]),s._v("\n查找括号内的内容\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" -oP "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'\\(\\K[^\\)]+'")]),s._v("\n数字字符范围查找（例如 AAEL0000-RA ）\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" -o -w "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"\\w\\{10\\}\\-R\\w\\{1\\}"')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# \\w 文字字符 [0-9a-zA-Z_] \\W 非文字字符")]),s._v("\n跳过文件目录（例如 bbo ）\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" -d skip "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'bbo'")]),s._v(" /path/to/files/*\n")])])])])])]),n("div",{staticClass:"card"},[n("div",{staticClass:"card-box"},[n("div",{staticClass:"card-content"},[n("div",{staticClass:"title"},[s._v("流编辑器")]),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("删除第一行\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" 1d filename\n删除前 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),s._v(" 行（删除第 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("-100 行）\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(",100d filename\n删除带字符串的行 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("例如： bbo"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/bbo/d"')]),s._v(" filename\n- "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" insensitive:\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/bbo/Id"')]),s._v(" filename\n删除第 n 个字符不等于值的行（例如第 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(" 个字符不等于 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("）\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -E "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/^.{5}[^2]/d'")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#aaaa2aaa (you can stay)")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#aaaa1aaa (delete!)")]),s._v("\n编辑内嵌（编辑并保存）\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -i "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/bbo/d"')]),s._v(" filename\n使用变量（例如 "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$i")]),s._v("）时，请使用双引号 "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('" "')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# e.g. add >$i to the first line (to make a bioinformatics FASTA file)")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1i >'),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$i")]),s._v('"')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# notice the double quotes! in other examples, you can use a single quote, but here, no way!")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# '1i' means insert to first line")]),s._v("\n同时使用环境变量和尾符号\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 使用反斜杠 $ 符，同时使用双引号来标记变量")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -e "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"\\'),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$s")]),s._v("/\\$/"),n("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[s._v("\\n")]),s._v("+--"),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$3")]),s._v('-----+/"')]),s._v("\n删除空行\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/^\\s*$/d'")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 或")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/^$/d'")]),s._v("\n删除最后一行\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'"),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$d")]),s._v("'")]),s._v("\n删除文件的最后一个字符\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -i "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'$ s/.$//'")]),s._v(" filename\n文件头部添加字符（例如『"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("』）\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -i "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'1s/^/[/'")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v("\n指定的行增加字符串（例如添加「 something 」到第 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" 行和第 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" 行）\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -e "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'1isomething -e '")]),s._v("3isomething"),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'\n添加字符串到文件的结尾（例如『]』）\nsed '")]),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$s")]),s._v("/$/"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("/"),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("' filename\n添加新行到结尾\nsed '")]),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$a")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("'\n添加字符串到没一行（例如 bbo）\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -e "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/^/bbo/'")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v("\n添加字符串到没一行的结尾（例如『"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("』）\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -e "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/$/\\}\\]/'")]),s._v(" filename\n每第 n 个字符添加 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("n "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("例如每四个字符 t 添加 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/.\\{4\\}/&"),n("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[s._v("\\n")]),s._v("/g'")]),s._v("\n使用分隔符和下一行 连接 / 结合 / 合并文件。例如 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("用「,」去分割"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -s "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'"),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$a")]),s._v(",'")]),s._v(" *.json "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" all.json\n替换 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("例如用 B 去替换 A"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/A/B/g'")]),s._v(" filename\n使用通配符进行替换 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("例如 aaa "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" 开头的行替换成 "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("aaa")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/my/new/path"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"s/aaa=.*/aaa=\\/my\\/new\\/path/g"')]),s._v("\n选择以字符串开头的行 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("例如 bbo"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -n "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/^@S/p'")]),s._v("\n删除带有字符串的行\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/bbo/d'")]),s._v(" filename\n打印 / 获取 / 截取一定范围内的行 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("例如 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("500")]),s._v("-5000 之间"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -n "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("500")]),s._v(",5000p filename\n每 n 行打印一次\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -n "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'0~3p'")]),s._v(" filename\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# catch 0: start; 3: step")]),s._v("\n打印所有奇数行\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -n "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'1~2p'")]),s._v("\n每隔三行打印一次，包括第一行\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -n "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'1p;0~3p'")]),s._v("\n删除前导空格和制表符\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -e "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/^[ "),n("span",{pre:!0,attrs:{class:"token entity",title:"\\t"}},[s._v("\\t")]),s._v("]*//'")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Notice a whitespace before '\\t'!!")]),s._v("\n只删除前导空格\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/ *//'")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 注意'*'前的空格!!")]),s._v("\n删除结尾逗号\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/,$//g'")]),s._v("\n在结尾添加一列\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"s/$/'),n("span",{pre:!0,attrs:{class:"token entity",title:"\\t"}},[s._v("\\t")]),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$i")]),s._v('/"')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# $i 是你要添加的值")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 将文件名添加到文件的最后一列")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token for-or-select variable"}},[s._v("i")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -i "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"s/$/'),n("span",{pre:!0,attrs:{class:"token entity",title:"\\t"}},[s._v("\\t")]),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$i")]),s._v('/"')]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$i")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("done")]),s._v("\n将文件的扩展名添加到最后一列\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token for-or-select variable"}},[s._v("i")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" T000086_1.02.n T000086_1.02.p"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"s/$/'),n("span",{pre:!0,attrs:{class:"token entity",title:"\\t"}},[s._v("\\t")]),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${i"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("*."),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("}")]),s._v('/"')]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$i")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("done")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("T000086_1.02.np\n删除换行符\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("':a;N;"),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$!")]),s._v("ba;s/"),n("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[s._v("\\n")]),s._v("//g'")]),s._v("\n打印某一行 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("例如：第 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("123")]),s._v(" 行"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -n -e "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'123p'")]),s._v("\n打印若干行 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("例如：第 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(" 行到第 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("33")]),s._v(" 行"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -n "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'10,33p'")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("filename\n改变分隔符\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s=/="),n("span",{pre:!0,attrs:{class:"token entity",title:"\\\\"}},[s._v("\\\\")]),s._v("/=g'")]),s._v("\n使用通配符替换 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("例如: A-1-e 、 A-2-e 或者 A-3-e "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/A-.*-e//g'")]),s._v(" filename\n删除文件的最后一个字符\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'$ s/.$//'")]),s._v("\n在文件的指定位置插入字符 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("例如: AAAAAA—"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" AAA"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#AAA)")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -r -e "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/^.{3}/&#/'")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v("\n")])])])])])]),n("div",{staticClass:"card"},[n("div",{staticClass:"card-box"},[n("div",{staticClass:"card-content"},[n("div",{staticClass:"title"},[s._v("Awk")]),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("设置 tab 为分隔符\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" -F $"),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'"),n("span",{pre:!0,attrs:{class:"token entity",title:"\\t"}},[s._v("\\t")]),s._v("'")]),s._v("\n设置 tab 为输出字段分隔符\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" -v "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("OFS")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'"),n("span",{pre:!0,attrs:{class:"token entity",title:"\\t"}},[s._v("\\t")]),s._v("'")]),s._v("\n传递变量\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("a")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("bbo"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("b")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("obb"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" -v "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("a")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$a")]),s._v('"')]),s._v(" -v "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("b")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$b")]),s._v('"')]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$1")]),s._v("==a && "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$10")]),s._v('=b"')]),s._v(" filename\n输出行号和每行的字符数\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{print NR,length("),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$0")]),s._v(");}'")]),s._v(" filename\n输出列数\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{print NF}'")]),s._v("\n调整列输出顺序\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{print "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$2")]),s._v(", "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$1")]),s._v("}'")]),s._v("\n检查列中字符是否含有逗号（例如检查第一列）\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'"),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$1")]),s._v("~/,/ {print}'")]),s._v("\n切割字符，并循环输出\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{split("),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$2")]),s._v(', a,",");for (i in a) print '),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$1")]),s._v('"'),n("span",{pre:!0,attrs:{class:"token entity",title:"\\t"}},[s._v("\\t")]),s._v("\"a[i]}'")]),s._v(" filename\n在某个字符出现次数少于 N 次时，打印数据 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("例如在 bbo 出现 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),s._v(" 次之后，停止输出数据"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" -v "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("N")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{print}/bbo/&& --N<=0 {exit}'")]),s._v("\n输出目录下所有为文件名和每个文件的最后一行\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("xargs")]),s._v(" -n1 -I "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{s="),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$0")]),s._v("};END{print FILENAME,s}'")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v("\n在列的前面加字符 （例如在第三列前面加 “chr”）\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'BEGIN{OFS=\""),n("span",{pre:!0,attrs:{class:"token entity",title:"\\t"}},[s._v("\\t")]),s._v('"}'),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$3")]),s._v('="chr"'),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$3")]),s._v("'")]),s._v("\n删除含有字符的行 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("例如删除含有 bbo 的行"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'!/bbo/'")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v("\n删除最后一列\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'NF{NF-=1};1'")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v("\nNR 和 FNR 的用法\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 例如以下2个文件:")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# fileA:")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# a")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# b")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# c")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# fileB:")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# d")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# e")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'print FILENAME, NR,FNR,"),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$0")]),s._v("}'")]),s._v(" fileA fileB\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# fileA    1    1    a")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# fileA    2    2    b")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# fileA    3    3    c")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# fileB    4    1    d")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# fileB    5    2    e")]),s._v("\n逻辑与\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 比如下面这两个文件:")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 文件 A:")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 1    0")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 2    1")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 3    1")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 4    0")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 文件 B:")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 1    0")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 2    1")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 3    0")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 4    1")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" -v "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("OFS")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'"),n("span",{pre:!0,attrs:{class:"token entity",title:"\\t"}},[s._v("\\t")]),s._v("'")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'NR=FNR{a["),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$1")]),s._v("]="),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$2")]),s._v(";next} NF {print "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$1")]),s._v(",((a["),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$1")]),s._v("]="),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$2")]),s._v(")? "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$2")]),s._v(':"0")}\'')]),s._v(" fileA 文件 B\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 1    0")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 2    1")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 3    0")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 4    0")]),s._v("\n将文件中所有的数字进行四舍五入操作\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{while (match("),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$0")]),s._v(', /[0-9]+\\[0-9]+/)){\n    \\printf "%s%.2f", substr('),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$0")]),s._v(",0,RSTART-1),substr("),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$0")]),s._v(",RSTART,RLENGTH)\n    \\"),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$0")]),s._v("=substr("),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$0")]),s._v(", RSTART+RLENGTH)\n    \\}\n    \\print\n    \\}'")]),s._v("\n给每一行编码 / 索引\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{printf(\"%s"),n("span",{pre:!0,attrs:{class:"token entity",title:"\\t"}},[s._v("\\t")]),s._v("%s"),n("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[s._v("\\n")]),s._v('",NR,'),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$0")]),s._v(")}'")]),s._v("\n将列数据分解为行\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#例如分开一下内容:")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# David    cat,dog")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# into")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# David    cat")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# David    dog")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{split("),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$2")]),s._v(',a,",");for(i in a)print '),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$1")]),s._v('"'),n("span",{pre:!0,attrs:{class:"token entity",title:"\\t"}},[s._v("\\t")]),s._v("\"a[i]}'")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 详情介绍请点击这里:　http://stackoverflow.com/questions/33408762/bash-turning-single-comma-separated-column-into-multi-line-string")]),s._v("\n平均一个文件 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("每一行只能包含一个数字"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{s+="),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$1")]),s._v("}END{print s/NR}'")]),s._v("\n以字符串开始打印字段 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("例如 Linux"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'"),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$1")]),s._v(" ~ /^Linux/'")]),s._v("\n排序一行数字 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("例如 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("40")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("35")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("12")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("23")]),s._v(" --"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("12")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("23")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("35")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("40")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("' {split( "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$0")]),s._v(', a, "'),n("span",{pre:!0,attrs:{class:"token entity",title:"\\t"}},[s._v("\\t")]),s._v('" ); asort( a ); for( i = 1; i <= length(a); i++ ) printf( "%s'),n("span",{pre:!0,attrs:{class:"token entity",title:"\\t"}},[s._v("\\t")]),s._v('", a[i] ); printf( "'),n("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[s._v("\\n")]),s._v("\" ); }'")]),s._v("\n减去之前的行值 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("column6，它等于 column4 减去最后一列 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{"),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$6")]),s._v(" = "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$4")]),s._v(" - prev5; prev5 = "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$5")]),s._v("; print;}'")]),s._v("\n")])])])])])]),n("div",{staticClass:"card"},[n("div",{staticClass:"card-box"},[n("div",{staticClass:"card-content"},[n("div",{staticClass:"title"},[s._v("Xargs")]),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("将选项卡设置为分隔符 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("默认：空格"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("xargs")]),s._v(" -d"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("t\n每行显示三个项目\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("xargs")]),s._v(" -n "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 1 2 3")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 4 5 6")]),s._v("\n提示在执行之前\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" a b c "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("xargs")]),s._v(" -p -n "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\n打印命令和输出\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("xargs")]),s._v(" -t abcd\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# bin/echo abcd")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# abcd")]),s._v("\n查找且删除\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("find")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v(" -name "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"*.html"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("xargs")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# when using a backtick")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("find")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v(" -name "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"*.html"')]),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v("\n删除文件名中有空格的文件 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("例如 「hello "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2001")]),s._v("」"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("find")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v(" -name "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"*.c"')]),s._v(" -print0"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("xargs")]),s._v(" -0 "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" -rf\n显示限制\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("xargs")]),s._v(" --show-limits\n从文件夹中移除文件\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("find")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v(" -name "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"*.bak"')]),s._v(" -print "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("xargs")]),s._v(" -0 -I "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("mv")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" ~/old\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# or")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("find")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v(" -name "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"*.bak"')]),s._v(" -print "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("xargs")]),s._v(" -0 -I "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("mv")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v(" ~/old\n将第 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),s._v(" 个文件移到另一个目录\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("head")]),s._v(" -100"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("xargs")]),s._v(" -I "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("mv")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" d1\n平行\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("time")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("xargs")]),s._v(" -n "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" -P "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sleep")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# a lot faster than:")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("time")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("xargs")]),s._v(" -n1 "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sleep")]),s._v("\n将所有文件从 A 复制到 B\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("find")]),s._v(" /dir/to/A -type f -name "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"*.py"')]),s._v(" -print "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("xargs")]),s._v(" -0 -r -I "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("cp")]),s._v(" -v -p "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v(" --target-directory"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/path/to/B\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# v: verbose|")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# p: keep detail (e.g. owner)")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" 相关\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("xargs")]),s._v(" -n1 -I "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -i "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/^Pos/d'")]),s._v(" filename\n在文件的第一行增加文件的名称\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/.txt//g'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("xargs")]),s._v(" -n1 -I "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -i -e "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'1 i\\>file\\' file.txt\n统计所有的文件\nls |xargs -n1 wc -l\n将输出变成一行\nls -l| xargs\n对目录中的文件进行统计\necho mso{1..8}|xargs -n1 bash -c '")]),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" -n "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$1")]),s._v(':"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" -la "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$1")]),s._v('"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" -w "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("74")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("wc")]),s._v(" -l"),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("' --\n# \"--\" 信号选项结束，并进一步进行选项的处理\n计算所有文件中的行数，也统计总行数。\nls|xargs wc -l\nXargs 以及 grep 命令\ncat grep_list |xargs -I{} grep {} filename\nXargs 和 sed 命令 (将所有旧的 ip 地址替换成在 etc 文件下面新的 ip 地址)\ngrep -rl '")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".1.111"),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("' /etc | xargs sed -i '")]),s._v("s/192.168.1.111/192.168.2.111/g'\n")])])])])])]),n("div",{staticClass:"card"},[n("div",{staticClass:"card-box"},[n("div",{staticClass:"card-content"},[n("div",{staticClass:"title"},[s._v("Find（查询）")]),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("列出当前目录中的所有子目录 / 文件\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("find")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v("\n列出当前目录下的所有文件\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("find")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v(" -type f\n列出当前文件下的所有目录\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("find")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v(" -type d\n编辑当前目录下的所有文件（例如，将 “www” 替换为 “ww”）\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("find")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v(" -name "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'*.php'")]),s._v(" -exec "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -i "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/www/w/g'")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 如果没有子目录")]),s._v("\nreplace "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"www"')]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"w"')]),s._v(" -- *\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# a space before *")]),s._v("\n查询文件 并 打印文件名（例如 “mso”）\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("find")]),s._v(" mso*/ -name M* -printf "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%f'),n("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[s._v("\\n")]),s._v('"')]),s._v("\n查找 并 删除 文件大小 小于（例如 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("74")]),s._v(" 字节）的文件\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("find")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v(" -name "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"*.mso"')]),s._v(" -size -74c -delete\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# M 代表 MB, 等等")]),s._v("\n")])])])])])]),n("div",{staticClass:"card"},[n("div",{staticClass:"card-box"},[n("div",{staticClass:"card-content"},[n("div",{staticClass:"title"},[s._v("Condition and loop (条件与循环)")]),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("If 语句\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 使用 if 和 else 来进行条件判断 ")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$c")]),s._v('"')]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"read"')]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("outputdir")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"seq"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("outputdir")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"write"')]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 判断myfile是否包含字符串“test”")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" -q hello myfile"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v(" …\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 判断mydir 是否是一个目录, 修改 mydir 的内容 并且 执行其他操作:")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" mydir"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'some content'")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("myfile\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),n("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("&2")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Fatal error. This script requires mydir."')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 判断 variable(变量)  是否为空")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v(" -s "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"myvariable"')]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('#返回指定对象的长度  如果是 "字符串"  返回 0.')]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 判断文件是否存在")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" -e "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'filename'")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" -e "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"file exists!"')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 判断 myfile 文件是否存在   或者  myfile 连接是否存在 ")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" -e myfile "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("||")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" -L myfile "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" -e "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"file exists!"')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 判断 变量 x  是否大于 等于 5")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$x")]),s._v('"')]),s._v(" -ge "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v(" …\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  在 bash/ksh/zsh 中 判断 变量 x 是否大于等于 5,:")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("((")]),s._v("x "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("))")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v(" …\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 使用  (( ))(双括号) 进行数学运算  将u+2的计算结果赋值给  j ")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("((")]),s._v("j"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v("u"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("))")])]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 使用 [[ ]](双中括号)  进行数值比较   在[[]] 中 会将 特殊符号 自动转换为 比较符号 （例如  = 转换为 == ）  ")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$age")]),s._v(" -gt "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("21")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\nMore "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" commands\n\nFor 语法\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token for-or-select variable"}},[s._v("i")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$i")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("done")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#或者")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token for-or-select variable"}},[s._v("i")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" *"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$i")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("done")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 按任意键继续执行遍历")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token for-or-select variable"}},[s._v("i")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" tpc_stats_0925.log "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" failed"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" -o "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'\\query\\w\\{1,2\\}'")]),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${i}")]),s._v(".log"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("read")]),s._v(" -rsp $"),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Press any key to continue..."),n("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[s._v("\\n")]),s._v("'")]),s._v(" -n1 key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("done")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 当按下一个键会逐行打印文件")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("oifs")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),n("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$IFS")]),s._v('"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[n("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("IFS")])]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("$"),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'"),n("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[s._v("\\n")]),s._v("'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token for-or-select variable"}},[s._v("line")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" myfile"),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("."),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("done")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("read")]),s._v(" -r line"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("."),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("done")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("myfile\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# If only one word a line, simply （ 遍历文件内容 一行一行的遍历）")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token for-or-select variable"}},[s._v("line")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" myfile"),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$line")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("read")]),s._v(" -n1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("done")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#遍历一个数组")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token for-or-select variable"}},[s._v("i")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${arrayName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("@"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("}")]),s._v('"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$i")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("done")]),s._v("\nWhile 语句，\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 文件的列减法 (例如 a 3 columns file)")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("read")]),s._v(" a b c"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$((")]),s._v("$c"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("$b"),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("))")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("done")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("head")]),s._v(" filename"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('#在两个 "<" 的中间有个空格 ')]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 汇总 列 减法")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("i")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("read")]),s._v(" a b c"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("((")]),s._v("i"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("$c"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("$b"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("))")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$i")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("done")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("head")]),s._v(" filename"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# 继续检查正在运行的进程（例如perl），并在启动后立即启动另一个新进程（例如python）。 （最好使用wait命令！Ctrl + F " wait"）')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),s._v("pidof perl"),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" f"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sleep")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("done")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" python timetorunpython.py\nswitch "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("case "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("bash")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("read")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("type")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$type")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'0'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'how'")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'1'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'are'")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'2'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'you'")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("esac")]),s._v("\n")])])])])])]),n("div",{staticClass:"card"},[n("div",{staticClass:"card-box"},[n("div",{staticClass:"card-content"},[n("div",{staticClass:"title"},[s._v("变量")]),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("引号内变量解析\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# foo=bar")]),s._v("\n "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"'"),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$foo")]),s._v("'\"")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#'bar'")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 单引号/双引号  quotes around single quotes make the inner single quotes expand variables（在单引号内使用变量 变量会被解析）")]),s._v("\n获取变量长度\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("var")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"some string"')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("#")]),s._v("var}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 11")]),s._v("\n获取变量的第一个字节\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("var")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("string\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${var"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("0"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("1}")]),s._v('"')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#s")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# or")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${var"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("%%")]),s._v('"${var'),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("#")]),s._v("?}")]),s._v('"'),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n从第一位 或最后一位 开始删除变量中的 n 个字节\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("var")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"some string"')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${var"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("2}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#me string")]),s._v("\n替换 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("例如。删除第一个位置的 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("var")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"0050"')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${var"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("@"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("#")]),s._v("0}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#050")]),s._v("\n替换所有 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("例如。将 字符 "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"a"')]),s._v(" 替换为 字符 "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('","')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("var/a/,"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 使用 grep ")]),s._v("\n "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("test")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"god the father"')]),s._v("\n "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${test"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("\\\\\\|}")]),s._v(" file.txt\n "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# turning the space into 'or' (\\|) in grep （在grep 的空间中将 替换   or 和 (\\|) ）")]),s._v("\n将变量中的字符串改为小写（参数扩展）\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("var")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("HelloWorld\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${var"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(",,")]),s._v("}")]),s._v("\nhelloworld\nExpand and "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v(" execute variable/argument （先执行脚本进行赋值 再输出变量内容）\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("cmd")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"bar=foo"')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("eval")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$cmd")]),s._v('"')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$bar")]),s._v('"')]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# foo")]),s._v("\n")])])])])])]),n("div",{staticClass:"card"},[n("div",{staticClass:"card-box"},[n("div",{staticClass:"card-content"},[n("div",{staticClass:"title"},[s._v("数学")]),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[s._v("bash")]),s._v(" 中的算术展开 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("运算符: +, -, *, /, %, 等等"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#总结： a++ 先运算a，后a的值加1；++a，则相反，先加一，再参与运算。同理a--,与--a")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$((")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("))")])]),s._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#15")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("x")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$((")]),s._v(" x"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("))")])]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#1 , 注意它仍然是1，因为它是后递增的")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$((")]),s._v(" x"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("))")])]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#2")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$((")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),s._v("x "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("))")])]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#4 , 注意，它不是3，因为它是预增量")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$((")]),s._v(" x"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("))")])]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#4")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$((")]),s._v(" x"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("))")])]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#3")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$((")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v("x "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("))")])]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#1")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("x")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("y")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$((")]),s._v(" x "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("**")]),s._v(" y "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("))")])]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#8")]),s._v("\n打印出一个数的质因数 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("比如： "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("50")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nfactor "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("50")]),s._v("\n用于产生从某个数到另外一个数之间的所有整数。 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("比如： "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("seq")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("seq")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("paste")]),s._v(" -sd+"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("bc")]),s._v("\n汇总一个文件（文件中每行仅包含一个数字）\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{s+="),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$1")]),s._v("} END {print s}'")]),s._v(" filename\n列减法\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" -F "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'"),n("span",{pre:!0,attrs:{class:"token entity",title:"\\t"}},[s._v("\\t")]),s._v("'")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'BEGIN {SUM=0}{SUM+="),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$3")]),s._v("-"),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$2")]),s._v("}END{print SUM}'")]),s._v("\n用 "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("expr")]),s._v(" 进行简单数学运算\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("expr")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v("+20 "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#30")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("expr")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("*20 "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#600")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("expr")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("30")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#1 (true)")]),s._v("\n更多关于 BC 的数学运算\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 小数位数/有效数字")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"scale=2;2/3"')]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("bc")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#.66")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 指数运算符")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"10^2"')]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("bc")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#100")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 使用变量")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"var=5;--var"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("bc")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#4")]),s._v("\n")])])])])])]),n("div",{staticClass:"card"},[n("div",{staticClass:"card-box"},[n("div",{staticClass:"card-content"},[n("div",{staticClass:"title"},[s._v("Time")]),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("返回执行命令所需的时间\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("time")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" hi\n等待一段时间（例如 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(" 秒）\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sleep")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v("\n在一段时间后注销你的帐户（例如 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(" 秒）\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("TMOUT")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 一旦你设置了这个变量，注销计时器开始运行！")]),s._v("\n设置您要运行命令的时长\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 仅仅运行 `sleep 10` 一秒。")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("timeout")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sleep")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v("\n设置何时要运行命令（例如，从现在开始 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" 分钟）\nat now + 1min  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 时间单位可以是 minutes, hours, days, 或 weeks")]),s._v("\n⚠️: 命令将使用 /bin/sh\nat"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" hihigithub "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("~/itworks\nat"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("EOT"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 按 Ctrl + D 退出")]),s._v("\njob "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" at Wed Apr "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("18")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("11")]),s._v(":16:00 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2018")]),s._v("\n")])])])])])]),n("div",{staticClass:"card"},[n("div",{staticClass:"card-box"},[n("div",{staticClass:"card-content"},[n("div",{staticClass:"title"},[s._v("Download")]),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("下载此 README.md 的内容 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("你正在看的内容"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("curl")]),s._v(" https://raw.githubusercontent.com/onceupon/Bash-Oneliner/master/README.md "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" pandoc -f markdown -t "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("man")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("man")]),s._v(" -l -\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 或者 w3m (一种基于文本的浏览器和呼叫器)")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("curl")]),s._v(" https://raw.githubusercontent.com/onceupon/Bash-Oneliner/master/README.md "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" pandoc "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" w3m -T text/html\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 或者使用emacs (在emac文本编辑器中)")]),s._v("\nemacs --eval "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'(org-mode)'")]),s._v(" --insert "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("curl")]),s._v(" https://raw.githubusercontent.com/onceupon/Bash-Oneliner/master/README.md "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" pandoc -t org"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 或者使用 emacs (在终端上先按Ctrl+x，再按Ctrl+c退出)")]),s._v("\nemacs -nw --eval "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'(org-mode)'")]),s._v(" --insert "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("curl")]),s._v(" https://raw.githubusercontent.com/onceupon/Bash-Oneliner/master/README.md "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" pandoc -t org"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n从一个页面上下载全部内容\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("wget")]),s._v(" -r -l1 -H -t1 -nd -N -np -A mp3 -e "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("robots")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("off http://example.com\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -r: recursive and download all links on page递归并下载页面上所有链接")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -l1: only one level link仅一级链接")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -H: span host, visit other hosts跨越主机，访问其他主机")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -t1: numbers of retries重试次数")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -nd: don't make new directories, download to here不要创建新目录，下载到这里")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -N: turn on timestamp打开时间戳")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -nd: no parent没有父级")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -A: type (separate by ,)类型（以，豆号分隔）")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -e robots=off: ignore the robots.txt file which stop wget from crashing the site, sorry example.com忽略robots.txt文件，该文件阻止wget使网站崩溃，抱歉example.com")]),s._v("\n将文件上传到 web 并下载 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("https://transfer.sh/"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  上传文件 (例如： filename.txt):")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("curl")]),s._v(" --upload-file ./filename.txt https://transfer.sh/filename.txt\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 上面的命令将返回一个url，例如：https://transfer.sh/tG8rM/filename.txt")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 接下来您可以通过以下方式下载它:")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("curl")]),s._v(" https://transfer.sh/tG8rM/filename.txt -o filename.txt\n下载文件（如有需要）\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("data")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("file.txt\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("url")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("http://www.example.com/"),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$data")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v(" -s "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$data")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"downloading test data..."')]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("wget")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$url")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\nWget 命令获取文件名 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("当文件名很长时"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("wget")]),s._v(" -O filename "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"http://example.com"')]),s._v("\nWget 命令 将文件保存到文件夹\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("wget")]),s._v(" -P /path/to/directory "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"http://example.com"')]),s._v("\n指示 "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("curl")]),s._v(" 遵循任何重定向，直到到达最终目的地:\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("curl")]),s._v(" -L google.com\n")])])])])])]),n("div",{staticClass:"card"},[n("div",{staticClass:"card-box"},[n("div",{staticClass:"card-content"},[n("div",{staticClass:"title"},[s._v("随机")]),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("随机生成密码（例如，生成 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(" 个长度为 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("13")]),s._v(" 的密码）\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("apt")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" pwgen\npwgen "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("13")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#sahcahS9dah4a xieXaiJaey7xa UuMeo0ma7eic9 Ahpah9see3zai acerae7Huigh7")]),s._v("\n从文件中随机选择 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),s._v(" 行\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("shuf")]),s._v(" -n "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),s._v(" filename\n随机排序\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token for-or-select variable"}},[s._v("i")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" a b c d e"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$i")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("done")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("shuf")]),s._v("\n随机选择在一定范围内的数字（例如，从 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("-100 内随机选择 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("15")]),s._v(" 个数字）\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("shuf")]),s._v(" -i "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("-100 -n "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("15")]),s._v("\n产生一个随机数\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$RANDOM")]),s._v("\n产生一个 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("-9 内的随机数\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$((")]),s._v("RANDOM "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("%")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("))")])]),s._v("\n产生一个 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("-10 内的随机数\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$((")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("RANDOM "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("%")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("))")])]),s._v("\n")])])])])])]),n("div",{staticClass:"card"},[n("div",{staticClass:"card-box"},[n("div",{staticClass:"card-content"},[n("div",{staticClass:"title"},[s._v("系统")]),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("跟踪服务的最新日志\njournalctl -u "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("service_name"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" -f\n消除僵尸进程\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 僵尸进程已经死了，所以你不能杀死它。您可以消除通过杀死其父进程。")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 首先，找到僵尸进程的PID")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v(" aux"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Z'")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 接下来发现僵尸的父进程的PID")]),s._v("\npstree -p -s "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("zombie_PID"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 然后你可以杀死它的父进程，你会发现僵尸进程已经不见了。")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("kill")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("9")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("parent_PID"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n显示内存使用情况\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("free")]),s._v(" -c "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(" -mhs "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 每隔1秒打印10次")]),s._v("\n显示设备和分区的 CPU 和 IO 统计信息。\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#每秒刷新一次")]),s._v("\niostat -x -t "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n显示网络接口上的带宽使用情况（例如 enp175s0f0）\niftop -i enp175s0f0\n告知系统已运行多长时间以及用户数量\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("uptime")]),s._v("\n检查是否是 root 用户运行\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),n("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$EUID")]),s._v('"')]),s._v(" -ne "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Please run this as root"')]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exit")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n更改 shell 用户 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("例如： bonnie"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nchsh -s /bin/sh bonnie\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# /etc/shells: valid login shells")]),s._v("\n更改 root / 虚拟 root / 监狱 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("e.g. 更改 root 为 newroot"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("chroot")]),s._v(" /home/newroot /bin/bash\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# To exit chroot")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exit")]),s._v("\n显示文件（例如 filename.txt）的文件状态（大小；访问、修改和更改时间等）\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("stat")]),s._v(" filename.txt\n当前进程的快照\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v(" aux\n显示进程树\npstree\n找到的最大进程数\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" /proc/sys/kernel/pid_max\n打印或控制内核环缓冲区\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("dmesg")]),s._v("\n查看 "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ip")]),s._v(" 地址\n"),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$ip")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" show\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# or")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ifconfig")]),s._v("\n打印以前和当前的 SysV 运行级别\nrunlevel\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#或者")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("who")]),s._v(" -r\n改变 SysV 运行级别 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("例如修改为 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\ninit "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#或者")]),s._v("\ntelinit "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v("\n在所有运行级别上显示所有可用的服务\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("chkconfig")]),s._v(" --list\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 相当于 ubntu 中 chkconfig 的 update-rc.d")]),s._v("\n查看系统的版本\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" /etc/*-release\nLinux 程序员的手册：文件系统的层次结构的说明\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("man")]),s._v(" hier\n控制系统和服务管理器\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  检查 cron 的状态")]),s._v("\nsystemctl status cron.service\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  停止一个 cron 服务")]),s._v("\nsystemctl stop cron.service\n任务列表\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("jobs")]),s._v(" -l\n运行一个修改优先级的程序 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("例如 ./test.sh"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 较好的值在 -20 （最有利）到 19 之间调整")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 应用程序越好，优先级越低")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 默认值:10 ,默认优先级:80")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("nice")]),s._v(" -10 ./test.sh\n导出路径\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[n("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("PATH")])]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$PATH")]),s._v(":~/path/you/want\n让文件可执行\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("chmod")]),s._v(" +x filename\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 现在你可以执行 ./filename")]),s._v("\n打印系统信息\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("uname")]),s._v(" -a\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 检查系统硬件平台 (x86-64)")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("uname")]),s._v(" -i\n上网\nlinks www.google.com\n增加用户，设置密码\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("useradd")]),s._v(" username\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("passwd")]),s._v(" username\n编辑 "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("bash")]),s._v(" 变量（例如显示整个路径）\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v(". joe ~/.bash_profile\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(". "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[n("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("PS1")])]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'\\u@\\h:\\w\\$'")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# $PS1 是一个定义命令提示符外观和样式的变量")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v(". "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("source")]),s._v(" ~/.bash_profile\n编辑环境设置 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("例如 "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("alias")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v(". joe ~/.bash_profile\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(". "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("alias")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("pd")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"pwd"')]),s._v(" //no "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("more")]),s._v(" need to "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("type")]),s._v(" that "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'w'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v(". "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("source")]),s._v(" ~/.bash_profile\n打印所有的别名\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("alias")]),s._v(" -p\n无别名 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("例如别名 "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("ls")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'ls --color=auto'")]),s._v(" 之后"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("unalias")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v("\n设置和取消设置 shell 选项\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 打印所有的 shell 选项")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("shopt")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 取消(或者停止)别名")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("shopt")]),s._v(" -u expand_aliases\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 设置(或者开始)别名")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("shopt")]),s._v(" -s expand_aliases\n列出环境变量 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("例如 "),n("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("PATH")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$PATH")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#用冒号分隔的目录列表")]),s._v("\n当前用户所有环境变量列表\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("env")]),s._v("\nUnset 环境变量 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("e.g. "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("unset")]),s._v(" 变量 "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'MYVAR'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("unset")]),s._v(" MYVAR\n显示区分格式\nlsblk\n通知系统分区表更改\npartprobe\n软链接到 bin\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ln")]),s._v(" -s /path/to/program /home/usr/bin\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 必须是程序的绝对路径")]),s._v("\n显示数据的十六进制视图\nhexdump -C filename.class\n跳转到其他节点\nrsh node_name\n检查端口（占用的网络端口）\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("netstat")]),s._v(" -tulpn\n打印已解析的符号链接或着规范文件名\nreadlink filename\n查找命令的类型及链接到的位置 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("e.g. python"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("type")]),s._v(" python\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# python 是 /usr/bin/python")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 这里有5中不同的类型，使用 'type -f' 标志进行检查")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 1\\. alias    (shell alias)")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 2\\. function (shell function, 也会打印函数主体)")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 3\\. builtin  (shell builtin)")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 4\\. file     (disk file)")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 5\\. keyword  (shell reserved word)")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 你也可以使用 `which`")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("which")]),s._v(" python\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# /usr/bin/python")]),s._v("\n列出所有的函数名\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("declare")]),s._v(" -F\n列出目录的大小信息\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("du")]),s._v(" -hs "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# or")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("du")]),s._v(" -sb\n复制使用权限目录\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("cp")]),s._v(" -rp /path/to/directory\n储存当前目录\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("pushd")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# then pop")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("popd")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#或着使用dirs显示当前所在目录的列表。")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("dirs")]),s._v(" -l\n显示磁盘使用情况\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("df")]),s._v(" -h\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 或者")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("du")]),s._v(" -h\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#或者")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("du")]),s._v(" -sk /var/log/* "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sort")]),s._v(" -rn "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("head")]),s._v(" -10\n显示当前运行状态\nrunlevel\n切换运行级别\ninit "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#或者")]),s._v("\ntelinit "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\n永久修改运行级别\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v(". edit /etc/init/rc-sysinit.conf\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(". "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("env")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("DEFAULT_RUNLEVEL")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\n切换 root 用户\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("su")]),s._v("\n切换其他用户\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("su")]),s._v(" somebody\n反馈用户状态信息\nrepquota -auvs\n获取数据库中重要信息\ngetent database_name\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# (e.g.  'passwd' 数据库)")]),s._v("\ngetent "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("passwd")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 列出所有用户帐户（所有本地帐户和LDAP）")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# (e.g. 获取用户组列表)")]),s._v("\ngetent group\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 在 'group' 数据库保存")]),s._v("\n改变文件的权限\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("chown")]),s._v(" user_name filename\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("chown")]),s._v(" -R user_name /path/to/directory/\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 改变用户组名称")]),s._v("\n挂载和取消挂载\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 例如 挂载 /dev/sdb 到 /home/test")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("mount")]),s._v(" /dev/sdb /home/test\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 例如 取消挂载 /home/test")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("umount")]),s._v(" /home/test\n列出当前挂载细节\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("mount")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 或者")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("df")]),s._v("\n列出当前用户名和用户编号\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" /etc/passwd\n获取所有的用户名\ngetent "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("passwd")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('\'{FS="[:]"; print '),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$1")]),s._v("}'")]),s._v("\n展示所有的用户\ncompgen -u\n展示所有组\ncompgen -g\n展示所有的用户组\ngroup username\n显示 uid，gid，用户组\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("id")]),s._v(" username\n检测当前是否是 root\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("id")]),s._v(" -u"),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v(" -ne "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"You are not root!"')]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exit")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 'id -u' output 0 if it's not root")]),s._v("\n找出 CPU 信息\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("more")]),s._v(" /proc/cpuinfo\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 或者")]),s._v("\nlscpu\n为用户设置配额 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("例如磁盘软大小限制: "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("120586240")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" 硬限制: "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("125829120")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nsetquota username "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("120586240")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("125829120")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" /home\n显示用户配额\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("quota")]),s._v(" -v username\n显示缓存中华当前库\nldconfig -p\n打印共享库依赖项 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("例如 "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'ls'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nldd /bin/ls\n检查用户登录\nlastlog\n编辑所有用户的路径\njoe /etc/environment\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#编辑这个文件")]),s._v("\n显示和设置用户限制\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("ulimit")]),s._v(" -u\n哪些端口正在监听来自网络的 TCP 连接\nnmap -sT -O localhost\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#notice that some companies might not like you using nmap")]),s._v("\n打印内核 / 处理器的数量\nnproc --all\n检查每一个核心状态\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v(". "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("top")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(". press "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'1'")]),s._v("\n展示任务和 PID\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("jobs")]),s._v(" -l\n列出所有正在执行服务\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("service")]),s._v(" --status-all\n计划关闭服务器\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("shutdown")]),s._v(" -r +5 "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Server will restart in 5 minutes. Please save your work."')]),s._v("\n取消与预定关闭\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("shutdown")]),s._v(" -c\n向所有用户广播\nwall -n hihi\n终止一个用户的所有进程\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("pkill")]),s._v(" -U user_name\n终止程序的所有进程\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("kill")]),s._v(" -9 "),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v(" aux "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'program_name'")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{print "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$2")]),s._v("}'")]),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v("\n在服务器上设置 gedit 首选项\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 你可能需要去安装以下软件:")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("apt-get")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" libglib2.0-bin"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 或者")]),s._v("\nyum "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" dconf dconf-editor"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nyum "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" dbus dbus-x11"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 检查列表")]),s._v("\ngsettings list-recursively\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 修改一些设置")]),s._v("\ngsettings "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" org.gnome.gedit.preferences.editor highlight-current-line "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v("\ngsettings "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" org.gnome.gedit.preferences.editor scheme "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'cobalt'")]),s._v("\ngsettings "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" org.gnome.gedit.preferences.editor use-default-font "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),s._v("\ngsettings "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" org.gnome.gedit.preferences.editor editor-font "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Cantarell Regular 12'")]),s._v("\n把用户增加到一个分组 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("例如 把用户名为「nice」的永不添加到分组「docker」, 这样此用户就可以在不用 "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" 的情况下运行 docker"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" gpasswd -a "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("nice")]),s._v(" docker\n安装没有根目录的 python 包\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v(". pip 安装 --用户 package_name\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(". 你可能需要将  ~/.local/bin/ 导出到  "),n("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("PATH")]),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[n("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("PATH")])]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$PATH")]),s._v(":~/.local/bin/\n删除旧的 Linux 内核 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("当 /boot 几乎满的时候"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("."),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v(". "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("uname")]),s._v(" -a  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#检查当前内核，哪些是不能移除的")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v(". "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("apt-get")]),s._v(" purge linux-image-X.X.X-X-generic  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#替代掉旧的版本")]),s._v("\n更改主机名\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("hostname")]),s._v(" your-new-name\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#如果不起作用，也可以:")]),s._v("\nhostnamectl set-hostname your-new-hostname\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 然后检查:")]),s._v("\nhostnamectl\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 或者检查 /etc/hostname")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 如果一直不工作....,编辑：")]),s._v("\n/etc/sysconfig/network\n/etc/sysconfig/network-scripts/ifcfg-ensxxx\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('#增加 主机名="你的新主机名称"')]),s._v("\n安装包列表\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("apt")]),s._v(" list --installed\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 或者在 Red Hat:")]),s._v("\nyum list installed\n检查哪个文件使设备繁忙\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("lsof")]),s._v(" /mnt/dir\n当声音不工作的时候\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("killall")]),s._v(" pulseaudio\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 然后按下 Alt-F2 并输入 pulseaudio")]),s._v("\n当声音不工作的时候\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("killall")]),s._v(" pulseaudio\n列出关于 SCSI 设备信息列表\nlsscsi\n设置你自己的 DNS 服务器教程\nhttp://onceuponmine.blogspot.tw/2017/08/se"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n\n创建一个简单守护进程的教程\nhttp://onceuponmine.blogspot.tw/2017/07/cr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n\n一个使用你的邮箱发送邮件的教程\nhttp://onceuponmine.blogspot.tw/2017/10/se"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n\n使用 telnet 去测试开放的端口，测试是否可以连接到服务器例如服务器 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".2.106"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 端口 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("53")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\ntelnet "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".2.106 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("53")]),s._v("\n改变网络最大可传输单位 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("mtu"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("例如修改到 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("9000")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ifconfig")]),s._v(" eth0 mtu "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("9000")]),s._v("\n或者正在执行的进程 pid "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("例如 python"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\npidof python\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 或者")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v(" aux"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" python\nNTP\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Start ntp:")]),s._v("\nntpd\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 检查 ntp:")]),s._v("\nntpq -p\n清除你服务器中不必要的文件\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("apt-get")]),s._v(" autoremove\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("apt-get")]),s._v(" clean\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" -rf ~/.cache/thumbnails/*\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除旧的内核")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" dpkg --list "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'linux-image*'")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("apt-get")]),s._v(" remove linux-image-OLDER_VERSION\n增大调整根分区的大小 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("根分区是 LVM 逻辑卷"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\npvscan\nlvextend -L +130G /dev/rhel/root -r\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 添加 -r 将在调整卷大小后增加到文件系统")]),s._v("\n创建 UEFI 可引导 USB 驱动器 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("比如；/dev/sdc1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("dd")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("if")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("~/path/to/isofile.iso "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("of")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/dev/sdc1 "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("oflag")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("direct "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("bs")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1048576")]),s._v("\n找到并删除包\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" dpkg -l "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("package_name"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" dpkg --purge "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("package_name"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n创建 "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ssh")]),s._v(" 隧道\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ssh")]),s._v(" -f -L "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("9000")]),s._v(":targetservername:8088 root@192.168.14.72 -N\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#-f: 在后台运行; -L: 监听; -N: 什么也不做")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 你计算机的9000端口现在已经连接上了目标服务器名字192.168.14.72的8088端口")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 所以你现在可以去打开浏览器输入localhost:9000去查看你的目标计算机的8088端口了")]),s._v("\n获取进程的进程 ID "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("比如： sublime_text"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#pidof 获取进程id")]),s._v("\npidof sublime_text\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#pgrep, 你不必键入整个程序名")]),s._v("\npgrep sublim\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#pgrep, 如果找到进程，则返回1；如果没有此类进程，则返回0")]),s._v("\n\npgrep -q sublime_text "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("||")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#top, 需要更长的时间")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("top")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" sublime_text\n服务器的一些基准测试工具\naio-stress - AIO benchmark. bandwidth - memory bandwidth benchmark. bonnie++ - hard drive and "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v(" system performance benchmark. dbench - generate I/O workloads to either a filesystem or to a networked CIFS or NFS server. dnsperf - authorative and recursing DNS servers. filebench - model based "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v(" system workload generator. fio - I/O benchmark. fs_mark - synchronous/async "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v(" creation benchmark. httperf - measure web server performance. interbench - linux interactivity benchmark. ioblazer - multi-platform storage stack micro-benchmark. iozone - filesystem benchmark. iperf3 - measure TCP/UDP/SCTP performance. kcbench - kernel compile benchmark, compiles a kernel and measures the "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("time")]),s._v(" it takes. lmbench - Suite of simple, portable benchmarks. netperf - measure network performance, "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("test")]),s._v(" unidirectional throughput, and end-to-end latency. netpipe - network protocol independent performance evaluator. nfsometer - NFS performance framework. nuttcp - measure network performance. phoronix-test-suite - comprehensive automated testing and benchmarking platform. seeker - portable disk seek benchmark. siege - http load tester and benchmark. sockperf - network benchmarking utility over socket API. spew - measures I/O performance and/or generates I/O load. stress - workload generator "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" POSIX systems. sysbench - scriptable database and system performance benchmark. tiobench - threaded IO benchmark. unixbench - the original BYTE UNIX benchmark suite, provide a basic indicator of the performance of a Unix-like system. wrk - HTTP benchmark.\n\n显示上次登录用户的列表。\nlastb\n显示当前登录用户的列表，打印他们的信息\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("who")]),s._v("\n显示谁登录以及他们在做什么\nw\n打印当前登录到当前主机的用户的用户名。\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("users")]),s._v("\n在终止程序上停止跟踪一个文件\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("tail")]),s._v(" -f --pid"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("PID"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" filename.txt\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 用程序的进程 ID 替换 <PID> ")]),s._v("\n列出所有已经启动的服务\nsystemctl list-unit-files"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" enabled\n")])])])])])]),n("div",{staticClass:"card"},[n("div",{staticClass:"card-box"},[n("div",{staticClass:"card-content"},[n("div",{staticClass:"title"},[s._v("Xwindow")]),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("X11 GUI 应用程序！如果你对纯文本的环境感到厌烦，这里有一些适合你的 GUI 工具。\n\n启用 X11 转发，以便在服务器上使用图形应用程序。\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ssh")]),s._v(" -X user_name@ip_address\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 或者通过 xhost 设置")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# --\x3e Install the following for Centos:")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# xorg-x11-xauth")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# xorg-x11-fonts-*")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# xorg-x11-utils")]),s._v("\n小 xwindow 工具\nxclock\nxeyes\nxcowsay\n从 "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ssh")]),s._v(" 服务器中打开图片 / 图像\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v(". "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ssh")]),s._v(" -X user_name@ip_address\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(". "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("apt-get")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" eog\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(". eog picture.png\n在服务器上观看视频\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v(". "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ssh")]),s._v(" -X user_name@ip_address\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(". "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("apt")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" mpv\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(". mpv myvideo.mp4\n在服务器上使用 gedit "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("GUI 编辑"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v(". "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ssh")]),s._v(" -X user_name@ip_address\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(". "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("apt-get")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" gedit\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(". gedit filename.txt\n从 "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ssh")]),s._v(" 服务器上打开 PDF\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v(". "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ssh")]),s._v(" -X user_name@ip_address\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(". "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("apt-get")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" evince\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(". evince filename.pdf\n从 "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ssh")]),s._v(" 服务器上使用谷歌浏览器\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v(". "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ssh")]),s._v(" -X user_name@ip_address\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(". "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("apt-get")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" libxss1 libappindicator1 libindicator7\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(". "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("wget")]),s._v(" https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(". "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("apt-get")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" -f\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(". dpkg -i google-chrome*.deb\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),s._v(". google-chrome\n")])])])])])]),n("div",{staticClass:"card"},[n("div",{staticClass:"card-box"},[n("div",{staticClass:"card-content"},[n("div",{staticClass:"title"},[s._v("硬件")]),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("收集和总结机器的所有硬件信息\nlshw -json "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("report.json\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 其他的选项: [ -html ]  [ -short ]  [ -xml ]  [ -json ]  [ -businfo ]  [ -sanitize ] ,etc")]),s._v("\n找出内存设备的细节\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" dmidecode -t memory\n打印 CPU 硬件细节\ndmidecode -t "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#          类型   信息")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#          0   BIOS")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#          1   系统")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#          2   基板")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#          3   机壳")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#          4   处理器")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#          5   内存控制器")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#          6   内存模块")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#          7   缓存")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#          8   端口连接器")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#          9   系统槽")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#         11   OEM 字符串")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#         13   BIOS 语言")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#         15   系统事件日志")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#         16   物理内存数组")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#         17   存储设备")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#         18   32位内存错误")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#         19   存储映射地址")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#         20   存储设备映射地址")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#         21   内置定位设备")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#         22   便携式电池")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#         23   系统重置")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#         24   硬件安全性")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#         25   系统电源控制")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#         26   电压探头")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#         27   冷却装置")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#         28   温度探测器")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#         29   电流探头")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#         30   待外远程访问")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#         31   引导完整性服务")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#         32   系统启动")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#         34   管理装置")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#         35   管理设备组件")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#         36   管理设备阈值数据")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#         37   内存通道")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#         38   IPMI 设备")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#         39   电力供应")]),s._v("\n计算硬盘数量\nlsscsi"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" SEAGATE"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("wc")]),s._v(" -l\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 或者")]),s._v("\nsg_map -i -x"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" SEAGATE"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("wc")]),s._v(" -l\n或者硬盘的 UUID "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("例如 sdb"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nblkid /dev/sdb\n打印所有硬盘的详细信息\nlsblk -io KNAME,TYPE,MODEL,VENDOR,SIZE,ROTA\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#其中 ROTA 表示旋转设备/旋转硬盘 (1 为真, 0 为假)")]),s._v("\n列出所有的 PCI "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("外围设置互连"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 设备\nlspci\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 列出关于 NIC 信息")]),s._v("\nlspci "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("egrep")]),s._v(" -i --color "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'network|ethernet'")]),s._v("\n列出所有 USB 设备\nlsusb\nLinux 模块\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 显示 Linux 内核中模块状态")]),s._v("\nlsmod\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 从 Linux 内核中增加或者移除模块")]),s._v("\nmodprobe\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 或者")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Remove a module")]),s._v("\nrmmod\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 插入模块")]),s._v("\ninsmod\n控制 IPMI-enabled 设备 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("e.g. BMC"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 远程查看服务器的电源状态")]),s._v("\nipmitool -U "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("bmc_username"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" -P "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("bmc_password"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" -I lanplus -H "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("bmc_ip_address"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" power status\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 远程开启服务器")]),s._v("\nipmitool -U "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("bmc_username"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" -P "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("bmc_password"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" -I lanplus -H "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("bmc_ip_address"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" power on\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 打开面板识别灯(默认 15秒)")]),s._v("\nipmitool chassis identify "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("255")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#或者服务器传感器温度")]),s._v("\nipmitool sensors "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" -i Temp\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 重置 BMC")]),s._v("\nipmitool bmc reset cold\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Prnt BMC 网络")]),s._v("\nipmitool lan print "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 设置 BMC 网络")]),s._v("\nipmitool -I bmc lan "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" ipaddr "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".0.55\nipmitool -I bmc lan "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" netmask "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("255.255")]),s._v(".255.0\nipmitool -I bmc lan "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" defgw ipaddr "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".0.1\n")])])])])])]),n("div",{staticClass:"card"},[n("div",{staticClass:"card-box"},[n("div",{staticClass:"card-content"},[n("div",{staticClass:"title"},[s._v("网络")]),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("显示 IP 地址\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ip")]),s._v(" a\n显示路由表\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ip")]),s._v(" r\n显示 ARP 缓存 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ARP 缓存显示你连接到的同一网络设备的 MAC 地址"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ip")]),s._v(" n\n增加临时 IP 地址 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("重启后重置"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("例如 增加 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".140.3/24 到 设备 eno16777736"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ip")]),s._v(" address "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".140.3/24 dev eno16777736\n持久化网络配置的更改\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("vi")]),s._v(" /etc/sysconfig/network-scripts/ifcfg-enoxxx\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 然后编辑字段: BOOTPROT, DEVICE, IPADDR, NETMASK, GATEWAY, DNS1 etc")]),s._v("\n刷新 NetworkManager\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" nmcli c reload\n重新启动所有界面\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" systemctl restart network.service\n同时查看 hostname, OS, kernal, architecture "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\nhostnamectl\n设置主机名 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("一次设置所有临时，静态，漂亮的主机名"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nhostnamectl set-hostname "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"mynode"')]),s._v("\n")])])])])])]),n("div",{staticClass:"card"},[n("div",{staticClass:"card-box"},[n("div",{staticClass:"card-content"},[n("div",{staticClass:"title"},[s._v("其他")]),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("Bash 自动完成 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("例如 当你输入「dothis」，然后按下 「tab」, 显示「now tomorrow never」"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n更多的案例\n\n完成 -W  "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"now tomorrow never"')]),s._v(" dothis\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ~$ dothis  ")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 从不     现在       明天")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 输入「n」或者「t」之后，再次按「tab」 键以自动完成")]),s._v("\n重复打印字符串 n 次 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("例如重复打印 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(" 次「hello world」"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("printf")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'hello world"),n("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[s._v("\\n")]),s._v("%.0s'")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n将字符串编码为 Base64 的字符串\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("test")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("base64\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#dGVzdAo=")]),s._v("\n不要显示末尾的换行符\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("username")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" -n "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"bashoneliner"')]),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v("\n或者当前目录的父级目录\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("dirname")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("pwd")]),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v("\n将一个文件复制到多个文件 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("例如复制文件 A 到文件 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("B-D"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("))")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("tee")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("fileA fileB fileC fileD "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("/dev/null\n删除换行符或者下一行\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("tr")]),s._v(" --delete "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'"),n("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[s._v("\\n")]),s._v("'")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("input.txt "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("output.txt\n换行\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("tr")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'"),n("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[s._v("\\n")]),s._v("'")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("' '")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("filename\n转换大写或者小写\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("tr")]),s._v(" /a-z/ /A-Z/\n转换一系列的字符 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("例如 把 a-z 都转换为 a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'something'")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("tr")]),s._v(" a-z a\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# aaaaaaaaa")]),s._v("\n比较两个文件 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("例如 fileA, fileB"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("diff")]),s._v(" fileA fileB\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# a: 被增加; d:删除; c:被修改")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 或者")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sdiff")]),s._v(" fileA fileB\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 文件差异的并排合并")]),s._v("\n比较两个文件，删除掉尾部回车 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("例如 fileA, fileB"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("diff")]),s._v(" fileA fileB --strip-trailing-cr\n给文件编号 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("例如给 fileA 编号"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("nl")]),s._v(" fileA\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#或者")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("nl")]),s._v(" -nrz fileA\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# add leading zeros")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#也可以")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("nl")]),s._v(" -w1 -s "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("' '")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# making it simple, blank separate")]),s._v("\n使用 tab 键按字段连接两个文件 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("默认连接按照文件的第一列连接，默认分隔符是空格"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 文件 A 和文件 B 应该有相同的行顺序")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("join")]),s._v(" -t "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'"),n("span",{pre:!0,attrs:{class:"token entity",title:"\\t"}},[s._v("\\t")]),s._v("'")]),s._v(" fileA fileB\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 使用指定字段加入 (例如 文件 A 的第三列和文件 B 的第五列)")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("join")]),s._v(" -1 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" -2 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(" fileA fileB\n将两个或多个文件合并 / 粘贴到列中 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("例如 fileA, fileB, fileC"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("paste")]),s._v(" fileA fileB fileC\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 默认选项分开")]),s._v("\n反向字符串\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("12345")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("rev")]),s._v("\n读取 .gz 文件但不解压\nzmore filename\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 或者")]),s._v("\nzless filename\n在后台运行命令，输出错误文件\nsome_commands  "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&>")]),s._v("log "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 或者")]),s._v("\nsome_commands "),n("span",{pre:!0,attrs:{class:"token operator"}},[n("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("2")]),s._v(">")]),s._v("log "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 或者")]),s._v("\nsome_commands "),n("span",{pre:!0,attrs:{class:"token operator"}},[n("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("2")]),s._v(">")]),n("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("&1")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("tee")]),s._v(" logfile\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 或者")]),s._v("\nsome_commands "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|&")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("tee")]),s._v(" logfile\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 还可以")]),s._v("\nsome_commands "),n("span",{pre:!0,attrs:{class:"token operator"}},[n("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("2")]),s._v(">")]),n("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("&1")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),s._v("outfile\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#0: 标准输入; 1: 标准输出; 2: 标准错误")]),s._v("\n在后台运行多个命令\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 按顺序运行")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("sleep "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sleep")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#并行运行")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sleep")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sleep")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("\n即便注销也可以运行进程 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("immune to hangups, with output to a non-tty"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 例如即便注销也会运行 myscript.sh 脚本")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("nohup")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("bash")]),s._v(" myscript.sh\n发送邮件\n下面是邮件的内容 -a /path/to/attach_file.txt -s "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'mail.subject'")]),s._v(" me@gmail.com\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# use -a flag to set send from (-a "From: some@mail.tld")')]),s._v("\n将 .xls 转换为 csv\nxls2csv filename\n附加到文件 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("例如附加 hihi 内容到指定文件"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'hihi'")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),s._v("filename\n制造 BEEP 的声音\nspeaker-test -t sine -f "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1000")]),s._v(" -l1\n设置 beep 声音的持续时间\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("speaker-test -t sine -f "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1000")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("pid")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$!")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sleep")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(".1s"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("kill")]),s._v(" -9 "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$pid")]),s._v("\n历史记录 编辑 / 删除\n~/.bash_history\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#或者")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("history")]),s._v(" -d "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("line_number"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n与历史记录的互动\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# list 5 previous command (similar to `history |tail -n 5` but wont print the history command itself)")]),s._v("\nfc -l -5\n或者文件最后的历史记录\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("head")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("$\n清洁屏幕 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("注：还挺好使"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("clear")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 或者")]),s._v("\nCtrl+l\n将数据发送到上次编辑的文件\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" /directory/to/file\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),n("span",{pre:!0,attrs:{class:"token operator"}},[n("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("0")]),s._v(">")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("$\n提取 .xf\nunxz filename.tar.xz\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 然后")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("tar")]),s._v(" -xf filename.tar\n安装 python 包\npip "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" packagename\n删除当前的 "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("bash")]),s._v(" 命令\nCtrl+U\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 或者")]),s._v("\nCtrl+C\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 或者")]),s._v("\nAlt+Shift+"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 成为历史")]),s._v("\n向历史添加一些东西 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("例如 「addmetohistory」"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# addmetodistory")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# just add a "#" before~~')]),s._v("\n睡眠一会或者稍等片刻或者安排工作\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sleep")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" hi\n使用 "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("rsync")]),s._v(" 备份\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("rsync")]),s._v(" -av filename filename.bak\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("rsync")]),s._v(" -av directory directory.bak\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("rsync")]),s._v(" -av --ignore_existing directory/ directory.bak\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("rsync")]),s._v(" -av --update directory directory.bak\n\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("rsync")]),s._v(" -av directory user@ip_address:/path/to/directory.bak\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#跳过接收器上更新的文件 (我更喜欢这个!)")]),s._v("\n一次制作所有的目录！\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" -p project/"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("lib/ext,bin,src,doc/"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("html,info,pdf"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(",demo/stat"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -p: 设置为父目录")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 这将制造 project/doc/html/; project/doc/info; project/lib/ext ,etc")]),s._v("\n仅当另一个命令运行返回 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" 退出状态的时候运行此命令 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("命令完成"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" tmp/ "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("tar")]),s._v(" xvf ~/a.tar\n仅当另一个命令运行返回非 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" 退出状态的时候运行此命令 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("命令未完成"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" tmp/a/b/c "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("||")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" -p tmp/a/b/c\n提取到路径\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("tar")]),s._v(" xvf -C /path/to/directory filename.gz\n使用反斜杆 "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),s._v(" 来中断长命令\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" tmp/a/b/c "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("||")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("mkdir -p tmp/a/b/c\n得到 "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("pwd")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("VAR")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$PWD")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("tar")]),s._v(" xvf -C "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$VAR")]),s._v(" file.tar\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# PWD 必须是大写字母")]),s._v("\n列出文件的类型 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("e.g./tmp/"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v(" /tmp/\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# tmp/: directory")]),s._v("\nBash 脚本\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/bin/bash")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("file")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${1"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("#")]),s._v("*.}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# remove string before a "."')]),s._v("\nPython 简单的 HTTP 服务\npython -m SimpleHTTPServer\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 或者你使用 python3 的时候:")]),s._v("\npython3 -m http.server\n读取用户输入\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("read")]),s._v(" input\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$input")]),s._v("\n生成序列 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("-10\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("seq")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v("\n查找输入列表 / 文件的平均值\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("i")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("wc")]),s._v(" -l filename"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("cut")]),s._v(" -d "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("' '")]),s._v(" -f1"),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" filename"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"scale=2;('),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("paste")]),s._v(" -sd+"),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v(')/"')]),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$i")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("bc")]),s._v("\n生成所有组合 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("e.g. "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1,2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1,2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1,2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 1 1, 1 2, 2 1, 2 2")]),s._v("\n生成所有组合 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("e.g. A,T,C,G"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("A,T,C,G"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("group")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("((")]),s._v("i"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("$group"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("))")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("repetition")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$set")]),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$repetition")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("done")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("bash")]),s._v(" -c "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"echo "')]),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$repetition")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),s._v("\n将文件内容读取到变量\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("foo")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("test1"),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v("\n输出变量\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("#")]),s._v("foo}")]),s._v("\n打印标签\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" -e "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("' "),n("span",{pre:!0,attrs:{class:"token entity",title:"\\t"}},[s._v("\\t")]),s._v(" '")]),s._v("\n数组\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("declare")]),s._v(" -a "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("array")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 或者")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("declare")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("array")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 或者关联数组")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("declare")]),s._v(" -A "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("array")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n发送一个目录\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("scp")]),s._v(" -r directoryname user@ip:/path/to/send\n将文件分割成较小的文件\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 按行分割 (e.g. 1000 lines/smallfile)")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("split")]),s._v(" -d -l "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1000")]),s._v(" largefile.txt\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 按字节分割而不会在文件间断行")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("split")]),s._v(" -C "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(" largefile.txt\n创建大量的测试文件 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("e.g "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("100000")]),s._v(" 个文件，10 字节分割"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(":\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#1\\. 创建文件")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("dd")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("if")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/dev/zero "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("of")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("bigfile "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("bs")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("count")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1000000")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#2\\. 将大文件拆分为100000个10字节文件")]),s._v("\n "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("split")]),s._v(" -b "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(" -a "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(" bigfile\n重命名所有文件 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("e.g. 将所有文件重命名为 ABC"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("rename")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/ABC//'")]),s._v(" *.gz\n删除文件扩展名 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("e.g 删除 filename.gz 的.gz"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("basename")]),s._v(" filename.gz .gz\n\nzcat filename.gz"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("basename")]),s._v(" filename.gz .gz"),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v(".unpacked\n叉炸弹 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("危险命令的意思"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 不要在家尝试这个")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 它是一个每次调用都会调用两次的函数，直到系统资源耗尽为止")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 为了安全起见在前面加了一个 #,当你真正测试的时候，请移除它")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# :(){:|:&};:")]),s._v("\n将文件扩展名添加到所有文件 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("例如添加 .txt"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("rename")]),s._v(" s/$/.txt/ *\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 你可以使用重命名 -n s/$/.txt/ * 首先去检查结果,如果它仅仅打印这些:")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# rename(a, a.txt)")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# rename(b, b.txt)")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# rename(c, c.txt)")]),s._v("\n使用挤压重复选项 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("例如 /t/t --"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" /t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("tr")]),s._v(" -s "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/t"')]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" filename\n不要用 "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" 打印 nextline\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" -e "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'text here "),n("span",{pre:!0,attrs:{class:"token entity",title:"\\c"}},[s._v("\\c")]),s._v("'")]),s._v("\n使用最后一个参数\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("$\n检查最后一个退出代码\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$?")]),s._v("\n查看文件的前 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("50")]),s._v(" 个字符\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("head")]),s._v(" -c "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("50")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v("\n将两行组合成一行\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 例如")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# AAAA")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# BBBB")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# CCCC")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# DDDD")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" filename"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("paste")]),s._v(" - -\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# AAAABBBB")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# CCCCDDDD")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" filename"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("paste")]),s._v(" - - - -\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# AAAABBBBCCCCDDDD")]),s._v("\nFastq 转 fasta\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" file.fastq "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("paste")]),s._v(" - - - - "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/^@/>/g'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("cut")]),s._v(" -f1-2 "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("tr")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'"),n("span",{pre:!0,attrs:{class:"token entity",title:"\\t"}},[s._v("\\t")]),s._v("'")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'"),n("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[s._v("\\n")]),s._v("'")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("file.fa\n剪切并得到最后一列\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("rev")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("cut")]),s._v(" -d/ -f1 "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("rev")]),s._v("\n在变量 / 增量 i++ 中添加一个变数字量 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("例如 "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$val")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("((")]),s._v("var"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("))")])]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 或者")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("var")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$((")]),s._v("var"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("))")])]),s._v("\n清除文件中所有内容 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("比如 filename"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("filename\n解压 tar.bz2 文件 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("例如解压文件 file.tar.bz2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("tar")]),s._v(" xvfj file.tar.bz2\n解压 tar.xz 文件 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("例如解压 file.tar.xz"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nunxz file.tar.xz\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("tar")]),s._v(" xopf file.tar\n重复输出 y/n 直到终止\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 'y':")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("yes")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 或者 'n':")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("yes")]),s._v(" n\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 或者 'anything':")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("yes")]),s._v(" anything\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 例如:")]),s._v("\n``"),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("bash")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("yes")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" -r large_directory\n立即创建一定大小的虚拟文件 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("例如 200mb"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("dd")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("if")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/dev/zero "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("of")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("//dev/shm/200m "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("bs")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("1024k "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("count")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("200")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 或者")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("dd")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("if")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/dev/zero "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("of")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("//dev/shm/200m "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("bs")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("1M "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("count")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("200")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 标准输出:")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 200+0 条记录")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 200+0 记录出来")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 209715200 bytes (210 MB) copied, 0.0955679 s, 2.2 GB/s")]),s._v("\n把文件归档\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("myfile\n让我在这补充一下\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exit")]),s._v(" by control + c\n^C\n保持重复执行同一个命令 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("例如 每一秒重复一次 "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'wc -l filename'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("watch")]),s._v(" -n "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("wc")]),s._v(" -l filename\n执行时打印命令以及其参数 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("例如 "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("expr")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(" + "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" -x"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("expr")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(" + "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),s._v(" `\n为你打印一些有意义的句子 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("首先安装 fortune"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nfortune\n丰富多彩的 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("有用的"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("top")]),s._v(" 版本 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("首先安装 "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("htop")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("htop")]),s._v("\n按任意键继续\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("read")]),s._v(" -rsp $"),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Press any key to continue..."),n("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[s._v("\\n")]),s._v("'")]),s._v(" -n1 key\n从终端中运行类似 sql 的命令\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 下载:")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# https://github.com/harelba/q")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 例如:")]),s._v("\nq -d "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('","')]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"select c3,c4,c5 from /path/to/file.txt where c3='foo' and c5='boo'\"")]),s._v("\n将 Screen 用于多个终端回话\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 创建会话并附加:")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("screen")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 创建分离的会话 foo:")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("screen")]),s._v(" -S foo -d -m\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 独立会话 foo:")]),s._v("\nscreen: ^a^d\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 会话列表:")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("screen")]),s._v(" -ls\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 附加到上一个会话:")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("screen")]),s._v(" -r\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 附加到会话 foo:")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("screen")]),s._v(" -r foo\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 杀掉会话 foo:")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("screen")]),s._v(" -r foo -X quit\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 滚动:")]),s._v("\n点击屏幕前缀组合 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("C-a / control+A"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(",然后按下 Escape.\n上下移动方向键"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("↑ and ↓"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(".\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 重定向屏幕中已经运行进程的输出:")]),s._v("\n "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("C-a / control+A"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(", "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v(" hit "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'H'")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 存储屏幕的屏幕实处:")]),s._v("\nCtrl+A, Shift+H\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 然后再当前的目录下找到 screen.log 文件")]),s._v("\n使用\n将 Tmux 用于多个终端回话\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 创建会话并附加:")]),s._v("\ntmux\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 附加到会话 foo:")]),s._v("\ntmux attach -t foo\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 分离的会话 foo:")]),s._v("\n^bd\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 会话列表:")]),s._v("\ntmux "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 附加上一个会话:")]),s._v("\ntmux attach\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 杀死会话 foo:")]),s._v("\ntmux kill-session -t foo\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 创建独立会话 foo:")]),s._v("\ntmux new -s foo -d\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 将命令发送到 tmux 的所有窗格:")]),s._v("\nCtrl-B\n:setw synchronize-panes\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 一些 tmux 窗格控制的命令:")]),s._v("\nCtrl-B\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#   窗格 (分割), 按下 Ctrl+B，然后输入以下字符:")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#   %  horizontal split")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('#   "  vertical split')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#   o  swap panes")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#   q  show pane numbers")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#   x  kill pane")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#   空间 - 在布局之间进行切换")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#   垂直分布 (行):")]),s._v("\nselect-layout even-vertical\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#   或者")]),s._v("\nCtrl+b, Alt+2\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 垂直分布 (列):")]),s._v("\nselect-layout even-horizontal\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#   或者")]),s._v("\nCtrl+b, Alt+1\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Scroll")]),s._v("\nCtrl-b 然后 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" 然后你可以使用你的正常方向键来滚动\nPress q to quit scroll mode.\n剪切最后一行\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" filename"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("rev")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("cut")]),s._v(" -f1"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("rev")]),s._v("\n将密码传输给 "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ssh")]),s._v("\nsshpass -p mypassword "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ssh")]),s._v(" root@10.102.14.88 "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"df -h"')]),s._v("\n等待一个 pid "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("任务"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 完成\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("wait")]),s._v(" %1\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 或者")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("wait")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$PID")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("wait")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#wait ${!} 要等待最后一个后台进程 ($! 为最后一个后台进程的 PIID)")]),s._v("\n将 pdf 转换为 txt\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("apt-get")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" poppler-utils\npdftotext example.pdf example.txt\n只列出目录\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" -ld -- */\n捕获 /j 记录 / 保存终端输出 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("捕获你输入和输出的所有内容"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nscript output.txt\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 开始使用终端l")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 退出屏幕会话 (停止保存内容), 退出.")]),s._v("\n以树状格式列出目录的内容。\ntree\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 转到要列出的目录，然后键入 tree (sudo apt-get install tree)")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# output:")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# home/")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# └── project")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#     ├── 1")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#     ├── 2")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#     ├── 3")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#     ├── 4")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#     └── 5")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 设置目录深度等级（例如1级）")]),s._v("\ntree -L "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# home/")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# └── project")]),s._v("\n为 Python 设置 virtualenv（sandbox）\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 1\\. 安装 virtualenv.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("apt-get")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" virtualenv\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 2\\. 为新的隔离环境建立目录（将其命名为 .venv 或您想要的任何名称）。")]),s._v("\nvirtualenv .venv\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 3\\. 导入 virtual 执行目录")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("source")]),s._v(" .venv/bin/activate\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 4\\. 您可以检查一下是否现在在沙盒中")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("type")]),s._v(" pip\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 5\\. 现在您可以安装您的 pip 包, 这里的 requirements.txt 只是一个包含您想要的所有软件包的 txt 文件 (例如 tornado==4.5.3)。")]),s._v("\npip "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" -r requirements.txt\n使用 json 数据\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 安装非常有用的 jq 包")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#sudo apt-get install jq")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#e.g. to get all the values of the 'url' key, simply pipe the json to the following jq command(you can use .[]. to select inner json, i.e jq '.[].url')")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 例如，要获取 url 键的所有值，只需将 json 通过管道传递给以下 jq 命令（您可以使用 [] 选择内部 json，即 jq '[].url'）")]),s._v("\njq "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'.url'")]),s._v("\n编辑 "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("history")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("history")]),s._v(" -w\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("vi")]),s._v(" ~/.bash_history\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("history")]),s._v(" -r\n十进制转换为二进制（例如，获取 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(" 的二进制 ）\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("D2B")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" -e "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${D2B"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("5"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#00000101")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" -e "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${D2B"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("255"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#11111111")]),s._v("\n把输入的行换行以适应指定的宽度 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("例如每行 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" 个整数"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"00110010101110001101"')]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("fold")]),s._v(" -w4\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 0011")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 0010")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 1011")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 1000")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 1101")]),s._v("\n按列对文件进行排序，并保持原始顺序\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sort")]),s._v(" -k3,3 -s\n列右对齐 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("第二列右对齐"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" file.txt"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("rev")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("column")]),s._v(" -t"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("rev")]),s._v("\n查看和存储输出\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'hihihihi'")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("tee")]),s._v(" outputfile.txt\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# tee 带 “-a” 可以附加到文件中")]),s._v("\n使用 "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" 显示非打印（Ctrl）字符\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" -v filename\n将制表符转换为空格\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("expand")]),s._v(" filename\n将空格转换为制表符\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("unexpand")]),s._v(" filename\n以八进制显示文件（您也可以使用 od 显示十六进制，十进制等）\nod filename\n反转 "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" 的结果\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("tac")]),s._v(" filename\n反转 "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("uniq")]),s._v(" -c 的结果\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("read")]),s._v(" a b"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("yes")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$b")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("head")]),s._v(" -n "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$a")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("done")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("test.txt\n")])])])])])])])}),[],!1,null,null,null);t.default=e.exports}}]);